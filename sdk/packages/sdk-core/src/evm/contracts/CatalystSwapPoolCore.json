{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mint",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "assets",
          "type": "uint256[]"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sourceSwapId",
          "type": "uint256"
        }
      ],
      "name": "EscrowAck",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sourceSwapId",
          "type": "uint256"
        }
      ],
      "name": "EscrowTimeout",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "toAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "input",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "output",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fees",
          "type": "uint256"
        }
      ],
      "name": "LocalSwap",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "toAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "input",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "output",
          "type": "uint256"
        }
      ],
      "name": "SwapFromUnits",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "targetPool",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "targetUser",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "fromAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "toAssetIndex",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "input",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "output",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fees",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "sourceSwapId",
          "type": "uint32"
        }
      ],
      "name": "SwapToUnits",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "burn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "assets",
          "type": "uint256[]"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_balance0",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_chaininterface",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_escrowedFor",
      "outputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_escrowedTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_max_unit_inflow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_onlyLocal",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_setupMaster",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_sumWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokenIndexing",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_weight",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "channelId",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "poolReceiving",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "createConnection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "chainId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "poolReceiving",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "createConnectionWithChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finishSetup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLiquidityUnitCapacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUnitCapacity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ready",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sourceSwapId",
          "type": "uint256"
        }
      ],
      "name": "releaseEscrowACK",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sourceSwapId",
          "type": "uint256"
        }
      ],
      "name": "releaseEscrowTIMEOUT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/jorge/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "10": "/home/jorge/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Address.sol",
    "11": "/home/jorge/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "16": "contracts/CatalystIBCInterface.sol",
    "17": "contracts/FixedPointMath.sol",
    "19": "contracts/ISwapPool.sol",
    "22": "contracts/SwapPoolCore.sol",
    "26": "contracts/polymerase/IbcDispatcher.sol",
    "27": "contracts/polymerase/IbcReceiver.sol",
    "3": "/home/jorge/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
    "4": "/home/jorge/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "6": "/home/jorge/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "9": "/home/jorge/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/SwapPoolCore.sol",
    "exportedSymbols": {
      "Address": [
        9787
      ],
      "CatalystFixedPointMath": [
        2235
      ],
      "CatalystIBCInterface": [
        804
      ],
      "CatalystSwapPoolCore": [
        7058
      ],
      "Context": [
        9389
      ],
      "ERC20": [
        8798
      ],
      "ICatalystReceiver": [
        2266
      ],
      "ICatalystSwapBase": [
        2284
      ],
      "ICatalystSwapPool": [
        2440
      ],
      "IERC20": [
        9467
      ],
      "IERC20Metadata": [
        9492
      ],
      "ISwapPoolFactory": [
        15
      ],
      "IbcDispatcher": [
        7480
      ],
      "IbcEndpoint": [
        7487
      ],
      "IbcPacket": [
        7510
      ],
      "IbcReceiver": [
        7529
      ],
      "IbcTimeout": [
        7492
      ],
      "Ownable": [
        8210
      ],
      "SafeERC20": [
        9022
      ]
    },
    "id": 7059,
    "license": "Unlicsened",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6298,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:24:22"
      },
      {
        "absolutePath": "/home/jorge/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 6299,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7059,
        "sourceUnit": 8799,
        "src": "65:55:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jorge/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 6300,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7059,
        "sourceUnit": 9023,
        "src": "121:65:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/FixedPointMath.sol",
        "file": "./FixedPointMath.sol",
        "id": 6301,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7059,
        "sourceUnit": 2236,
        "src": "187:30:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/CatalystIBCInterface.sol",
        "file": "./CatalystIBCInterface.sol",
        "id": 6302,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7059,
        "sourceUnit": 805,
        "src": "218:36:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IOnCatalyst.sol",
        "file": "./IOnCatalyst.sol",
        "id": 6303,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7059,
        "sourceUnit": 2267,
        "src": "255:27:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6305,
              "name": "CatalystFixedPointMath",
              "nameLocations": [
                "401:22:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2235,
              "src": "401:22:22"
            },
            "id": 6306,
            "nodeType": "InheritanceSpecifier",
            "src": "401:22:22"
          },
          {
            "baseName": {
              "id": 6307,
              "name": "ERC20",
              "nameLocations": [
                "425:5:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 8798,
              "src": "425:5:22"
            },
            "id": 6308,
            "nodeType": "InheritanceSpecifier",
            "src": "425:5:22"
          }
        ],
        "canonicalName": "CatalystSwapPoolCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6304,
          "nodeType": "StructuredDocumentation",
          "src": "284:83:22",
          "text": " @title Catalyst: The Multi-Chain Swap Pool Base\n @author Catalyst Labs"
        },
        "fullyImplemented": true,
        "id": 7058,
        "linearizedBaseContracts": [
          7058,
          8798,
          9492,
          9467,
          9389,
          2235
        ],
        "name": "CatalystSwapPoolCore",
        "nameLocation": "377:20:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 6312,
            "libraryName": {
              "id": 6309,
              "name": "SafeERC20",
              "nameLocations": [
                "443:9:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9022,
              "src": "443:9:22"
            },
            "nodeType": "UsingForDirective",
            "src": "437:27:22",
            "typeName": {
              "id": 6311,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6310,
                "name": "IERC20",
                "nameLocations": [
                  "457:6:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 9467,
                "src": "457:6:22"
              },
              "referencedDeclaration": 9467,
              "src": "457:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$9467",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": true,
            "id": 6315,
            "mutability": "constant",
            "name": "EXCEEDS_SECURITY_LIMIT",
            "nameLocation": "509:22:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "493:96:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 6313,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "493:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "537761702065786365656473206d6178696d756d207377617020616d6f756e742e20506c656173652077616974",
              "id": 6314,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "542:47:22",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_fad17e9018b6b7607d0a6e05f45468ddb9c55e8a3dac3156325c60617c50543e",
                "typeString": "literal_string \"Swap exceeds maximum swap amount. Please wait\""
              },
              "value": "Swap exceeds maximum swap amount. Please wait"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6318,
            "mutability": "constant",
            "name": "SWAP_RETURN_INSUFFICIENT",
            "nameLocation": "611:24:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "595:69:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 6316,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "595:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "496e73756666696369656e7420737761702072657475726e",
              "id": 6317,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "638:26:22",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2df393a7fc9a70a17d678dd003f89c286846619aa4dff4129751d3f5288b476b",
                "typeString": "literal_string \"Insufficient swap return\""
              },
              "value": "Insufficient swap return"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "id": 6321,
            "mutability": "constant",
            "name": "BALANCE_SECURITY_LIMIT",
            "nameLocation": "686:22:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "670:88:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 6319,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "670:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "506f6f6c2073616e697479206c696d6974202842616c616e636520746f6f206c6172676529",
              "id": 6320,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "719:39:22",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_ce0be1747b4e900771f80cedf53c7e34b62a93a2ff71c1fce8f58acebfe9fffb",
                "typeString": "literal_string \"Pool sanity limit (Balance too large)\""
              },
              "value": "Pool sanity limit (Balance too large)"
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 6322,
              "nodeType": "StructuredDocumentation",
              "src": "855:234:22",
              "text": "@notice Determines how fast the security limit decreases.\n @dev\n     Needs to be long enough for pool token providers to be notified\n     of a beach but short enough for volatility to not soft-freeze the pool."
            },
            "id": 6329,
            "mutability": "constant",
            "name": "DECAYRATE",
            "nameLocation": "1111:9:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "1094:41:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6323,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1094:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              },
              "id": 6328,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_rational_3600_by_1",
                  "typeString": "int_const 3600"
                },
                "id": 6326,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "hexValue": "3630",
                  "id": 6324,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1123:2:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_60_by_1",
                    "typeString": "int_const 60"
                  },
                  "value": "60"
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "hexValue": "3630",
                  "id": 6325,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1128:2:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_60_by_1",
                    "typeString": "int_const 60"
                  },
                  "value": "60"
                },
                "src": "1123:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_3600_by_1",
                  "typeString": "int_const 3600"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "3234",
                "id": 6327,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1133:2:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_24_by_1",
                  "typeString": "int_const 24"
                },
                "value": "24"
              },
              "src": "1123:12:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_86400_by_1",
                "typeString": "int_const 86400"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": true,
            "documentation": {
              "id": 6330,
              "nodeType": "StructuredDocumentation",
              "src": "1142:44:22",
              "text": "@notice Maximum number of assets suppoed"
            },
            "id": 6333,
            "mutability": "constant",
            "name": "NUMASSETS",
            "nameLocation": "1206:9:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "1191:28:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 6331,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1191:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 6332,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1218:1:22",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3_by_1",
                "typeString": "int_const 3"
              },
              "value": "3"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "CatalystSwapPoolCore.TokenEscrow",
            "id": 6340,
            "members": [
              {
                "constant": false,
                "id": 6335,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "1287:4:22",
                "nodeType": "VariableDeclaration",
                "scope": 6340,
                "src": "1279:12:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6334,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1279:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6337,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "1309:6:22",
                "nodeType": "VariableDeclaration",
                "scope": 6340,
                "src": "1301:14:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 6336,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1301:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 6339,
                "mutability": "mutable",
                "name": "token",
                "nameLocation": "1333:5:22",
                "nodeType": "VariableDeclaration",
                "scope": 6340,
                "src": "1325:13:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 6338,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1325:7:22",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TokenEscrow",
            "nameLocation": "1257:11:22",
            "nodeType": "StructDefinition",
            "scope": 7058,
            "src": "1250:95:22",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6341,
              "nodeType": "StructuredDocumentation",
              "src": "1351:596:22",
              "text": " @notice  Describes an atomic swap between the 2 tokens: _fromAsset and _toAsset.\n @dev Explain to a developer any extra details\n @param who The user / exchange who facilitated the trade (msg.sender)\n @param fromAsset The asset which was sold in exchange for _toAsset\n @param toAsset The asset which was purchased with _fromAsset\n @param input The number of _fromAsset sold\n @param output The number of tokens provided to _who\n @param fees  The pool fee. Taken from the input. Numerical losses/fees are for obvious reasons not included."
            },
            "eventSelector": "967858f4c15e98f1f59e7c3c41673484d18a5fac00792502a52e51c780b8d276",
            "id": 6355,
            "name": "LocalSwap",
            "nameLocation": "1958:9:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6343,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "1993:3:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6355,
                  "src": "1977:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1977:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6345,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromAsset",
                  "nameLocation": "2022:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6355,
                  "src": "2006:25:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2006:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6347,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toAsset",
                  "nameLocation": "2049:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6355,
                  "src": "2041:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2041:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6349,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "2074:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6355,
                  "src": "2066:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2066:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6351,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "output",
                  "nameLocation": "2097:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6355,
                  "src": "2089:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2089:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6353,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fees",
                  "nameLocation": "2121:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6355,
                  "src": "2113:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2113:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1967:164:22"
            },
            "src": "1952:180:22"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6356,
              "nodeType": "StructuredDocumentation",
              "src": "2138:742:22",
              "text": " @notice Describes the creation of an external swap: Cross-chain swap.\n @dev If _fromAsset is the proxy contract or _toAsset is 2**8-1, the swap is a liquidity swap.\n @param targetPool The target pool.\n @param targetUser The recipient of the trade. The person who bought the trade is not present.\n @param fromAsset The asset which was sold in exchange for _toAsset.\n @param toAssetIndex The token index of the asset to purchase on _toChain.\n @param input The number of _fromAsset sold\n @param output The calculated number of units bought. Will be sold to buy _toAsset\n @param fees The pool fee. Taken from the input. Numerical losses/fees are for obvious reasons not included."
            },
            "eventSelector": "2483ac7794a891a1da9e35af72035937919c140ab4e1fec8fb8041dbfb439362",
            "id": 6374,
            "name": "SwapToUnits",
            "nameLocation": "2891:11:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6358,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "targetPool",
                  "nameLocation": "2928:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6374,
                  "src": "2912:26:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6357,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2912:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6360,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "targetUser",
                  "nameLocation": "2964:10:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6374,
                  "src": "2948:26:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6359,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6362,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "fromAsset",
                  "nameLocation": "3000:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6374,
                  "src": "2984:25:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2984:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6364,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toAssetIndex",
                  "nameLocation": "3025:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6374,
                  "src": "3019:18:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 6363,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3019:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6366,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "3055:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6374,
                  "src": "3047:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3047:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6368,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "output",
                  "nameLocation": "3078:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6374,
                  "src": "3070:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3070:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6370,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fees",
                  "nameLocation": "3102:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6374,
                  "src": "3094:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3094:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6372,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceSwapId",
                  "nameLocation": "3123:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6374,
                  "src": "3116:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 6371,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3116:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2902:239:22"
            },
            "src": "2885:257:22"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6375,
              "nodeType": "StructuredDocumentation",
              "src": "3148:406:22",
              "text": " @notice Describes the arrival of an external swap: Cross-chain swap.\n @dev If _fromAsset is the proxy contract, the swap is a liquidity swap.\n @param who The recipient of the trade.\n @param toAsset The asset which was purchased with _fromAsset\n @param input The number of units sent from the other chain.\n @param output The number of tokens provided to _who"
            },
            "eventSelector": "554dc1931a29064b841d92d1cf54855848f1ce32738684564a0a7c03f15a7200",
            "id": 6385,
            "name": "SwapFromUnits",
            "nameLocation": "3565:13:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6377,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "3604:3:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6385,
                  "src": "3588:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3588:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6379,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "toAsset",
                  "nameLocation": "3633:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6385,
                  "src": "3617:23:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3617:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6381,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "input",
                  "nameLocation": "3658:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6385,
                  "src": "3650:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3650:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6383,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "output",
                  "nameLocation": "3681:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6385,
                  "src": "3673:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3673:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3578:115:22"
            },
            "src": "3559:135:22"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6386,
              "nodeType": "StructuredDocumentation",
              "src": "3700:314:22",
              "text": " @notice Emitted on liquidity deposits.\n @dev Explain to a developer any extra details\n @param who The depositor. Is credited with _mints pool tokens.\n @param mint The number of minted pool tokens credited to _who\n @param assets An array of the number of deposited assets."
            },
            "eventSelector": "e7425730072f5a6ec278ae24c998f6a79299c875cbd84ad35585563a0cb3c666",
            "id": 6395,
            "name": "Deposit",
            "nameLocation": "4025:7:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6388,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "4049:3:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6395,
                  "src": "4033:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4033:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6390,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "mint",
                  "nameLocation": "4062:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6395,
                  "src": "4054:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4054:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6393,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "4078:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6395,
                  "src": "4068:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6391,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4068:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6392,
                    "nodeType": "ArrayTypeName",
                    "src": "4068:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4032:53:22"
            },
            "src": "4019:67:22"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6396,
              "nodeType": "StructuredDocumentation",
              "src": "4092:290:22",
              "text": " @notice Emitted on liquidity withdrawal.\n @dev Explain to a developer any extra details\n @param who The withdrawer. Is debited _burns pool tokens.\n @param burn The number of burned pool tokens.\n @param assets An array of the token amounts returned"
            },
            "eventSelector": "aef68853d1f7f9e4e5fe02896078a87a319c7b257208dac49346c8f03b36c685",
            "id": 6405,
            "name": "Withdraw",
            "nameLocation": "4393:8:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6404,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6398,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "4418:3:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6405,
                  "src": "4402:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4402:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6400,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "burn",
                  "nameLocation": "4431:4:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6405,
                  "src": "4423:12:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6399,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4423:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6403,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "assets",
                  "nameLocation": "4447:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6405,
                  "src": "4437:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6401,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4437:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6402,
                    "nodeType": "ArrayTypeName",
                    "src": "4437:9:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4401:53:22"
            },
            "src": "4387:68:22"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6406,
              "nodeType": "StructuredDocumentation",
              "src": "4461:43:22",
              "text": "@notice Called upon successful swap. "
            },
            "eventSelector": "44898ab65affad4f975e5a33a5f62fc75a177f6e222da2585627711f4b0f50f5",
            "id": 6410,
            "name": "EscrowAck",
            "nameLocation": "4515:9:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6408,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceSwapId",
                  "nameLocation": "4533:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6410,
                  "src": "4525:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4525:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4524:22:22"
            },
            "src": "4509:38:22"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6411,
              "nodeType": "StructuredDocumentation",
              "src": "4553:39:22",
              "text": "@notice Called upon failed swap. "
            },
            "eventSelector": "2ed3176c48e2338524348cc2055adb2c2d41e9022e0a6a18d843c9ed5be9a3a3",
            "id": 6415,
            "name": "EscrowTimeout",
            "nameLocation": "4603:13:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6413,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sourceSwapId",
                  "nameLocation": "4625:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6415,
                  "src": "4617:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4617:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4616:22:22"
            },
            "src": "4597:42:22"
          },
          {
            "constant": false,
            "functionSelector": "3867e857",
            "id": 6417,
            "mutability": "mutable",
            "name": "_chaininterface",
            "nameLocation": "4685:15:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "4670:30:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6416,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4670:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6418,
              "nodeType": "StructuredDocumentation",
              "src": "4707:145:22",
              "text": "@notice\n     If the pool has no cross chain connection, this is true.\n     Should not be trusted if setupMaster != ZERO_ADDRESS"
            },
            "functionSelector": "ddc71dd1",
            "id": 6421,
            "mutability": "mutable",
            "name": "_onlyLocal",
            "nameLocation": "4869:10:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "4857:29:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6419,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "4857:4:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "74727565",
              "id": 6420,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4882:4:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6422,
              "nodeType": "StructuredDocumentation",
              "src": "4893:209:22",
              "text": "@notice\n     To indicate which token is desired on the target pool,\n     the _toAsset is an integer from 0 to NUMASSETS indicating\n     which asset the pool should purchase with units."
            },
            "functionSelector": "904e0a01",
            "id": 6426,
            "mutability": "mutable",
            "name": "_tokenIndexing",
            "nameLocation": "5142:14:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "5107:49:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 6425,
              "keyType": {
                "id": 6423,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5115:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "5107:27:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 6424,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5126:7:22",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6427,
              "nodeType": "StructuredDocumentation",
              "src": "5163:32:22",
              "text": "@notice Liquidity reference."
            },
            "functionSelector": "24cbc9ee",
            "id": 6431,
            "mutability": "mutable",
            "name": "_balance0",
            "nameLocation": "5235:9:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "5200:44:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6430,
              "keyType": {
                "id": 6428,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5208:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "5200:27:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6429,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5219:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6432,
              "nodeType": "StructuredDocumentation",
              "src": "5251:81:22",
              "text": "@notice The token weights. Used for maintaining a non symmetric pool balance."
            },
            "functionSelector": "32a3385e",
            "id": 6436,
            "mutability": "mutable",
            "name": "_weight",
            "nameLocation": "5372:7:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "5337:42:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6435,
              "keyType": {
                "id": 6433,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "5345:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "5337:27:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6434,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5356:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9ecfbb36",
            "id": 6438,
            "mutability": "mutable",
            "name": "_sumWeights",
            "nameLocation": "5400:11:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "5385:26:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6437,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5385:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6439,
              "nodeType": "StructuredDocumentation",
              "src": "5418:94:22",
              "text": "@notice The pool fee in X64. Implementation of fee: self.pMULX64(_amount, self.poolFeeX64)"
            },
            "id": 6441,
            "mutability": "mutable",
            "name": "_poolFeeX64",
            "nameLocation": "5525:11:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "5517:19:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6440,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5517:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6442,
              "nodeType": "StructuredDocumentation",
              "src": "5543:128:22",
              "text": "@notice The setupMaster is the short-term owner of the pool.\n     They can connect the pool to pools on other chains."
            },
            "functionSelector": "c90da013",
            "id": 6444,
            "mutability": "mutable",
            "name": "_setupMaster",
            "nameLocation": "5691:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "5676:27:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6443,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "5676:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6445,
              "nodeType": "StructuredDocumentation",
              "src": "6166:60:22",
              "text": "@notice The max incoming liquidity flow from the router."
            },
            "functionSelector": "916f65e3",
            "id": 6447,
            "mutability": "mutable",
            "name": "_max_unit_inflow",
            "nameLocation": "6246:16:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "6231:31:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6446,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6231:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6449,
            "mutability": "mutable",
            "name": "_unit_flow",
            "nameLocation": "6344:10:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "6336:18:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6448,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6336:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6451,
            "mutability": "mutable",
            "name": "_last_change",
            "nameLocation": "6368:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "6360:20:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6450,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6360:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6453,
            "mutability": "mutable",
            "name": "_liquidity_flow",
            "nameLocation": "6394:15:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "6386:23:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6452,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6386:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6455,
            "mutability": "mutable",
            "name": "_last_liquidity_change",
            "nameLocation": "6423:22:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "6415:30:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6454,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6415:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6456,
              "nodeType": "StructuredDocumentation",
              "src": "6476:26:22",
              "text": "@notice Escrow storage"
            },
            "functionSelector": "24351d57",
            "id": 6460,
            "mutability": "mutable",
            "name": "_escrowedTokens",
            "nameLocation": "6542:15:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "6507:50:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 6459,
              "keyType": {
                "id": 6457,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "6515:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "6507:27:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 6458,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6526:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6461,
              "nodeType": "StructuredDocumentation",
              "src": "6563:26:22",
              "text": "@notice Escrow storage"
            },
            "functionSelector": "023aae47",
            "id": 6466,
            "mutability": "mutable",
            "name": "_escrowedFor",
            "nameLocation": "6633:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "6594:51:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenEscrow_$6340_storage_$",
              "typeString": "mapping(uint256 => struct CatalystSwapPoolCore.TokenEscrow)"
            },
            "typeName": {
              "id": 6465,
              "keyType": {
                "id": 6462,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6602:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "6594:31:22",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenEscrow_$6340_storage_$",
                "typeString": "mapping(uint256 => struct CatalystSwapPoolCore.TokenEscrow)"
              },
              "valueType": {
                "id": 6464,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6463,
                  "name": "TokenEscrow",
                  "nameLocations": [
                    "6613:11:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6340,
                  "src": "6613:11:22"
                },
                "referencedDeclaration": 6340,
                "src": "6613:11:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_TokenEscrow_$6340_storage_ptr",
                  "typeString": "struct CatalystSwapPoolCore.TokenEscrow"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 6467,
              "nodeType": "StructuredDocumentation",
              "src": "6651:58:22",
              "text": "@notice Iterator used to index new escrow information."
            },
            "id": 6469,
            "mutability": "mutable",
            "name": "_escrowIterator",
            "nameLocation": "6722:15:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "6714:23:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6468,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6714:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6471,
            "mutability": "mutable",
            "name": "_CHECK",
            "nameLocation": "6749:6:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "6744:11:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6470,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "6744:4:22",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6482,
              "nodeType": "Block",
              "src": "6790:30:22",
              "statements": [
                {
                  "expression": {
                    "id": 6480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6478,
                      "name": "_CHECK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6471,
                      "src": "6800:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 6479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6809:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6800:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6481,
                  "nodeType": "ExpressionStatement",
                  "src": "6800:13:22"
                }
              ]
            },
            "id": 6483,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "",
                    "id": 6474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6782:2:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  {
                    "hexValue": "",
                    "id": 6475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6786:2:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  }
                ],
                "id": 6476,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6473,
                  "name": "ERC20",
                  "nameLocations": [
                    "6776:5:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8798,
                  "src": "6776:5:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "6776:13:22"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6773:2:22"
            },
            "returnParameters": {
              "id": 6477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6790:0:22"
            },
            "scope": 7058,
            "src": "6762:58:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6485,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "6897:5:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "6882:20:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 6484,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "6882:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 6487,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "6923:7:22",
            "nodeType": "VariableDeclaration",
            "scope": 7058,
            "src": "6908:22:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 6486,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "6908:6:22",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              8265
            ],
            "body": {
              "id": 6495,
              "nodeType": "Block",
              "src": "6998:29:22",
              "statements": [
                {
                  "expression": {
                    "id": 6493,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6485,
                    "src": "7015:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 6492,
                  "id": 6494,
                  "nodeType": "Return",
                  "src": "7008:12:22"
                }
              ]
            },
            "functionSelector": "06fdde03",
            "id": 6496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "6946:4:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6489,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6965:8:22"
            },
            "parameters": {
              "id": 6488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6950:2:22"
            },
            "returnParameters": {
              "id": 6492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6491,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6496,
                  "src": "6983:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6490,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6983:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6982:15:22"
            },
            "scope": 7058,
            "src": "6937:90:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8275
            ],
            "body": {
              "id": 6504,
              "nodeType": "Block",
              "src": "7096:31:22",
              "statements": [
                {
                  "expression": {
                    "id": 6502,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6487,
                    "src": "7113:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 6501,
                  "id": 6503,
                  "nodeType": "Return",
                  "src": "7106:14:22"
                }
              ]
            },
            "functionSelector": "95d89b41",
            "id": 6505,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "7042:6:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6498,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7063:8:22"
            },
            "parameters": {
              "id": 6497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7048:2:22"
            },
            "returnParameters": {
              "id": 6501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6500,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6505,
                  "src": "7081:13:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6499,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7081:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7080:15:22"
            },
            "scope": 7058,
            "src": "7033:94:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              8285
            ],
            "body": {
              "id": 6513,
              "nodeType": "Block",
              "src": "7190:26:22",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 6511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7207:2:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 6510,
                  "id": 6512,
                  "nodeType": "Return",
                  "src": "7200:9:22"
                }
              ]
            },
            "functionSelector": "313ce567",
            "id": 6514,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "7142:8:22",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6507,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7165:8:22"
            },
            "parameters": {
              "id": 6506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7150:2:22"
            },
            "returnParameters": {
              "id": 6510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6509,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6514,
                  "src": "7183:5:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 6508,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "7183:5:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7182:7:22"
            },
            "scope": 7058,
            "src": "7133:83:22",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6556,
              "nodeType": "Block",
              "src": "7414:577:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6527,
                        "name": "setupMaster",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6523,
                        "src": "7430:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6528,
                        "name": "ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 818,
                        "src": "7443:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6526,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8615,
                      "src": "7424:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7424:23:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6530,
                  "nodeType": "ExpressionStatement",
                  "src": "7424:23:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7670:7:22",
                        "subExpression": {
                          "id": 6532,
                          "name": "_CHECK",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6471,
                          "src": "7671:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6531,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7662:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7662:16:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6535,
                  "nodeType": "ExpressionStatement",
                  "src": "7662:16:22"
                },
                {
                  "expression": {
                    "id": 6538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6536,
                      "name": "_CHECK",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6471,
                      "src": "7716:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 6537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7725:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7716:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6539,
                  "nodeType": "ExpressionStatement",
                  "src": "7716:13:22"
                },
                {
                  "expression": {
                    "id": 6542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6540,
                      "name": "_chaininterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6417,
                      "src": "7740:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6541,
                      "name": "chaininterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6521,
                      "src": "7758:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7740:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6543,
                  "nodeType": "ExpressionStatement",
                  "src": "7740:32:22"
                },
                {
                  "expression": {
                    "id": 6546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6544,
                      "name": "_setupMaster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6444,
                      "src": "7782:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6545,
                      "name": "setupMaster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6523,
                      "src": "7797:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7782:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6547,
                  "nodeType": "ExpressionStatement",
                  "src": "7782:26:22"
                },
                {
                  "expression": {
                    "id": 6550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6548,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6485,
                      "src": "7860:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6549,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6517,
                      "src": "7868:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "7860:13:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 6551,
                  "nodeType": "ExpressionStatement",
                  "src": "7860:13:22"
                },
                {
                  "expression": {
                    "id": 6554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6552,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6487,
                      "src": "7883:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6553,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6519,
                      "src": "7893:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "7883:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 6555,
                  "nodeType": "ExpressionStatement",
                  "src": "7883:17:22"
                }
              ]
            },
            "documentation": {
              "id": 6515,
              "nodeType": "StructuredDocumentation",
              "src": "7222:28:22",
              "text": "@notice Setup a pool. "
            },
            "id": 6557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setupBase",
            "nameLocation": "7264:9:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6517,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "7299:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6557,
                  "src": "7283:21:22",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6516,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7283:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6519,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "7330:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6557,
                  "src": "7314:23:22",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6518,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7314:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6521,
                  "mutability": "mutable",
                  "name": "chaininterface",
                  "nameLocation": "7355:14:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6557,
                  "src": "7347:22:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7347:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6523,
                  "mutability": "mutable",
                  "name": "setupMaster",
                  "nameLocation": "7387:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6557,
                  "src": "7379:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7379:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7273:131:22"
            },
            "returnParameters": {
              "id": 6525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7414:0:22"
            },
            "scope": 7058,
            "src": "7255:736:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6602,
              "nodeType": "Block",
              "src": "8123:575:22",
              "statements": [
                {
                  "assignments": [
                    6564
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6564,
                      "mutability": "mutable",
                      "name": "MUF",
                      "nameLocation": "8141:3:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 6602,
                      "src": "8133:11:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6563,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8133:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6566,
                  "initialValue": {
                    "id": 6565,
                    "name": "_max_unit_inflow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6447,
                    "src": "8147:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8133:30:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6567,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "8301:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8307:9:22",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8301:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6569,
                        "name": "DECAYRATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6329,
                        "src": "8319:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 6570,
                        "name": "_last_change",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6451,
                        "src": "8331:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "8319:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8301:42:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6575,
                  "nodeType": "IfStatement",
                  "src": "8297:58:22",
                  "trueBody": {
                    "expression": {
                      "id": 6573,
                      "name": "MUF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6564,
                      "src": "8352:3:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 6562,
                    "id": 6574,
                    "nodeType": "Return",
                    "src": "8345:10:22"
                  }
                },
                {
                  "assignments": [
                    6577
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6577,
                      "mutability": "mutable",
                      "name": "delta_flow",
                      "nameLocation": "8460:10:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 6602,
                      "src": "8452:18:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6576,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8452:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6588,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6578,
                            "name": "MUF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6564,
                            "src": "8474:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6582,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 6579,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8481:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 6580,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "8487:9:22",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "8481:15:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 6581,
                                  "name": "_last_change",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6451,
                                  "src": "8499:12:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8481:30:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 6583,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8480:32:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8474:38:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 6585,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8473:40:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 6586,
                      "name": "DECAYRATE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6329,
                      "src": "8528:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8473:64:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8452:85:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6589,
                      "name": "_unit_flow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6449,
                      "src": "8552:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 6590,
                      "name": "delta_flow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6577,
                      "src": "8566:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8552:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6594,
                  "nodeType": "IfStatement",
                  "src": "8548:40:22",
                  "trueBody": {
                    "expression": {
                      "id": 6592,
                      "name": "MUF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6564,
                      "src": "8585:3:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 6562,
                    "id": 6593,
                    "nodeType": "Return",
                    "src": "8578:10:22"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6595,
                      "name": "MUF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6564,
                      "src": "8660:3:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6596,
                            "name": "_unit_flow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6449,
                            "src": "8667:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 6597,
                            "name": "delta_flow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6577,
                            "src": "8680:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8667:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 6599,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8666:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8660:31:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6562,
                  "id": 6601,
                  "nodeType": "Return",
                  "src": "8653:38:22"
                }
              ]
            },
            "documentation": {
              "id": 6558,
              "nodeType": "StructuredDocumentation",
              "src": "7997:62:22",
              "text": "@notice  Returns the current cross-chain unit capacity. "
            },
            "functionSelector": "0bc350d7",
            "id": 6603,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUnitCapacity",
            "nameLocation": "8073:15:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8088:2:22"
            },
            "returnParameters": {
              "id": 6562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6561,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6603,
                  "src": "8114:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6560,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8114:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8113:9:22"
            },
            "scope": 7058,
            "src": "8064:634:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6651,
              "nodeType": "Block",
              "src": "8978:590:22",
              "statements": [
                {
                  "assignments": [
                    6610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6610,
                      "mutability": "mutable",
                      "name": "MUF",
                      "nameLocation": "9243:3:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 6651,
                      "src": "9235:11:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6609,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9235:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6615,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6611,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8295,
                        "src": "9249:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 6612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9249:13:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 6613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9265:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "9249:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9235:31:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6616,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9281:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9287:9:22",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "9281:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6618,
                        "name": "DECAYRATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6329,
                        "src": "9299:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 6619,
                        "name": "_last_liquidity_change",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6455,
                        "src": "9311:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9299:34:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9281:52:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6624,
                  "nodeType": "IfStatement",
                  "src": "9277:68:22",
                  "trueBody": {
                    "expression": {
                      "id": 6622,
                      "name": "MUF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6610,
                      "src": "9342:3:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 6608,
                    "id": 6623,
                    "nodeType": "Return",
                    "src": "9335:10:22"
                  }
                },
                {
                  "assignments": [
                    6626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6626,
                      "mutability": "mutable",
                      "name": "delta_flow",
                      "nameLocation": "9364:10:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 6651,
                      "src": "9356:18:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6625,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9356:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6637,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6627,
                            "name": "MUF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6610,
                            "src": "9378:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 6628,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "9397:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 6629,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "9403:9:22",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9397:15:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 6630,
                                  "name": "_last_liquidity_change",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6455,
                                  "src": "9415:22:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9397:40:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 6632,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9396:42:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9378:60:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 6634,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9377:62:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 6635,
                      "name": "DECAYRATE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6329,
                      "src": "9442:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9377:74:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9356:95:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6638,
                      "name": "_liquidity_flow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6453,
                      "src": "9466:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 6639,
                      "name": "delta_flow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6626,
                      "src": "9485:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9466:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6643,
                  "nodeType": "IfStatement",
                  "src": "9462:45:22",
                  "trueBody": {
                    "expression": {
                      "id": 6641,
                      "name": "MUF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6610,
                      "src": "9504:3:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 6608,
                    "id": 6642,
                    "nodeType": "Return",
                    "src": "9497:10:22"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6644,
                      "name": "MUF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6610,
                      "src": "9525:3:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6645,
                            "name": "_liquidity_flow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6453,
                            "src": "9532:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 6646,
                            "name": "delta_flow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6626,
                            "src": "9550:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9532:28:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 6648,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9531:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9525:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 6608,
                  "id": 6650,
                  "nodeType": "Return",
                  "src": "9518:43:22"
                }
              ]
            },
            "documentation": {
              "id": 6604,
              "nodeType": "StructuredDocumentation",
              "src": "8704:201:22",
              "text": " @notice Returns the current cross-chain liquidity unit capacity in\n terms of the totalSupply. These are not true units but rather\n the conversion of units to pool tokens."
            },
            "functionSelector": "8c9aa6f7",
            "id": 6652,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLiquidityUnitCapacity",
            "nameLocation": "8919:24:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8943:2:22"
            },
            "returnParameters": {
              "id": 6608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6607,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6652,
                  "src": "8969:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8969:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8968:9:22"
            },
            "scope": 7058,
            "src": "8910:658:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6746,
              "nodeType": "Block",
              "src": "9827:1146:22",
              "statements": [
                {
                  "assignments": [
                    6659
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6659,
                      "mutability": "mutable",
                      "name": "MUF",
                      "nameLocation": "9845:3:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 6746,
                      "src": "9837:11:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6658,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9837:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6661,
                  "initialValue": {
                    "id": 6660,
                    "name": "_max_unit_inflow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6447,
                    "src": "9851:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9837:30:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6662,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "9881:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9887:9:22",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "9881:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6664,
                        "name": "DECAYRATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6329,
                        "src": "9899:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 6665,
                        "name": "_last_change",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6451,
                        "src": "9911:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9899:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9881:42:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6686,
                  "nodeType": "IfStatement",
                  "src": "9877:325:22",
                  "trueBody": {
                    "id": 6685,
                    "nodeType": "Block",
                    "src": "9925:277:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 6669,
                                "name": "units",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6655,
                                "src": "9947:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 6670,
                                "name": "MUF",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6659,
                                "src": "9955:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9947:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 6672,
                              "name": "EXCEEDS_SECURITY_LIMIT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6315,
                              "src": "9960:22:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 6668,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9939:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 6673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9939:44:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6674,
                        "nodeType": "ExpressionStatement",
                        "src": "9939:44:22"
                      },
                      {
                        "expression": {
                          "id": 6677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6675,
                            "name": "_unit_flow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6449,
                            "src": "10109:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 6676,
                            "name": "units",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6655,
                            "src": "10122:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10109:18:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6678,
                        "nodeType": "ExpressionStatement",
                        "src": "10109:18:22"
                      },
                      {
                        "expression": {
                          "id": 6682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6679,
                            "name": "_last_change",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6451,
                            "src": "10141:12:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 6680,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "10156:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 6681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10162:9:22",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10156:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10141:30:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6683,
                        "nodeType": "ExpressionStatement",
                        "src": "10141:30:22"
                      },
                      {
                        "functionReturnParameters": 6657,
                        "id": 6684,
                        "nodeType": "Return",
                        "src": "10185:7:22"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6688
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6688,
                      "mutability": "mutable",
                      "name": "delta_flow",
                      "nameLocation": "10220:10:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 6746,
                      "src": "10212:18:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6687,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10212:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6699,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6689,
                            "name": "MUF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6659,
                            "src": "10234:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6693,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 6690,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "10241:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 6691,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "10247:9:22",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "10241:15:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 6692,
                                  "name": "_last_change",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6451,
                                  "src": "10259:12:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10241:30:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 6694,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10240:32:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10234:38:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 6696,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10233:40:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 6697,
                      "name": "DECAYRATE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6329,
                      "src": "10288:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10233:64:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10212:85:22"
                },
                {
                  "expression": {
                    "id": 6703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6700,
                      "name": "_last_change",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6451,
                      "src": "10307:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6701,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10322:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10328:9:22",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10322:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10307:30:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6704,
                  "nodeType": "ExpressionStatement",
                  "src": "10307:30:22"
                },
                {
                  "assignments": [
                    6706
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6706,
                      "mutability": "mutable",
                      "name": "UF",
                      "nameLocation": "10480:2:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 6746,
                      "src": "10472:10:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6705,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10472:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6708,
                  "initialValue": {
                    "id": 6707,
                    "name": "_unit_flow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6449,
                    "src": "10485:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10472:23:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6709,
                      "name": "UF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6706,
                      "src": "10563:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "id": 6710,
                      "name": "delta_flow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6688,
                      "src": "10569:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10563:16:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6725,
                  "nodeType": "IfStatement",
                  "src": "10559:256:22",
                  "trueBody": {
                    "id": 6724,
                    "nodeType": "Block",
                    "src": "10581:234:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6715,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 6713,
                                "name": "units",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6655,
                                "src": "10603:5:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 6714,
                                "name": "MUF",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6659,
                                "src": "10611:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10603:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 6716,
                              "name": "EXCEEDS_SECURITY_LIMIT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6315,
                              "src": "10616:22:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 6712,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10595:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 6717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10595:44:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6718,
                        "nodeType": "ExpressionStatement",
                        "src": "10595:44:22"
                      },
                      {
                        "expression": {
                          "id": 6721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6719,
                            "name": "_unit_flow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6449,
                            "src": "10766:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 6720,
                            "name": "units",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6655,
                            "src": "10779:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10766:18:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6722,
                        "nodeType": "ExpressionStatement",
                        "src": "10766:18:22"
                      },
                      {
                        "functionReturnParameters": 6657,
                        "id": 6723,
                        "nodeType": "Return",
                        "src": "10798:7:22"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6727
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6727,
                      "mutability": "mutable",
                      "name": "newUnitFlow",
                      "nameLocation": "10833:11:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 6746,
                      "src": "10825:19:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6726,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10825:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6734,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6728,
                            "name": "UF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6706,
                            "src": "10848:2:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 6729,
                            "name": "units",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6655,
                            "src": "10853:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10848:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 6731,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10847:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6732,
                      "name": "delta_flow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6688,
                      "src": "10862:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10847:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10825:47:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6736,
                          "name": "newUnitFlow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6727,
                          "src": "10890:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 6737,
                          "name": "MUF",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6659,
                          "src": "10904:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10890:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 6739,
                        "name": "EXCEEDS_SECURITY_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6315,
                        "src": "10909:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 6735,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10882:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10882:50:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6741,
                  "nodeType": "ExpressionStatement",
                  "src": "10882:50:22"
                },
                {
                  "expression": {
                    "id": 6744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6742,
                      "name": "_unit_flow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6449,
                      "src": "10942:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6743,
                      "name": "newUnitFlow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6727,
                      "src": "10955:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10942:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6745,
                  "nodeType": "ExpressionStatement",
                  "src": "10942:24:22"
                }
              ]
            },
            "documentation": {
              "id": 6653,
              "nodeType": "StructuredDocumentation",
              "src": "9574:191:22",
              "text": " @notice\n     Checks if the pool supports an inflow of units and decreases\n     unit capacity by units.\n @param units The number of units to check and set."
            },
            "id": 6747,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkAndSetUnitCapacity",
            "nameLocation": "9779:23:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6655,
                  "mutability": "mutable",
                  "name": "units",
                  "nameLocation": "9811:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6747,
                  "src": "9803:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9803:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9802:15:22"
            },
            "returnParameters": {
              "id": 6657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9827:0:22"
            },
            "scope": 7058,
            "src": "9770:1203:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6844,
              "nodeType": "Block",
              "src": "11271:1016:22",
              "statements": [
                {
                  "assignments": [
                    6754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6754,
                      "mutability": "mutable",
                      "name": "MUF",
                      "nameLocation": "11361:3:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 6844,
                      "src": "11353:11:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11353:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6759,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6755,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8295,
                        "src": "11367:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 6756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11367:13:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 6757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11383:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "11367:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11353:31:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 6760,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11398:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6761,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11404:9:22",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11398:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 6764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 6762,
                        "name": "DECAYRATE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6329,
                        "src": "11416:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 6763,
                        "name": "_last_liquidity_change",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6455,
                        "src": "11428:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11416:34:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11398:52:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6784,
                  "nodeType": "IfStatement",
                  "src": "11394:301:22",
                  "trueBody": {
                    "id": 6783,
                    "nodeType": "Block",
                    "src": "11452:243:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 6767,
                                "name": "value_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6750,
                                "src": "11474:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 6768,
                                "name": "MUF",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6754,
                                "src": "11483:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11474:12:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 6770,
                              "name": "EXCEEDS_SECURITY_LIMIT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6315,
                              "src": "11488:22:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 6766,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11466:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 6771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11466:45:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6772,
                        "nodeType": "ExpressionStatement",
                        "src": "11466:45:22"
                      },
                      {
                        "expression": {
                          "id": 6775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6773,
                            "name": "_liquidity_flow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6453,
                            "src": "11586:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 6774,
                            "name": "value_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6750,
                            "src": "11604:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11586:24:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6776,
                        "nodeType": "ExpressionStatement",
                        "src": "11586:24:22"
                      },
                      {
                        "expression": {
                          "id": 6780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6777,
                            "name": "_last_liquidity_change",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6455,
                            "src": "11624:22:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 6778,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "11649:5:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 6779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11655:9:22",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "11649:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11624:40:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6781,
                        "nodeType": "ExpressionStatement",
                        "src": "11624:40:22"
                      },
                      {
                        "functionReturnParameters": 6752,
                        "id": 6782,
                        "nodeType": "Return",
                        "src": "11678:7:22"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6786
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6786,
                      "mutability": "mutable",
                      "name": "delta_flow",
                      "nameLocation": "11713:10:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 6844,
                      "src": "11705:18:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6785,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11705:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6797,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6787,
                            "name": "MUF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6754,
                            "src": "11727:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 6791,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 6788,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "11746:5:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 6789,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "11752:9:22",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "11746:15:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 6790,
                                  "name": "_last_liquidity_change",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6455,
                                  "src": "11764:22:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11746:40:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 6792,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11745:42:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11727:60:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 6794,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "11726:62:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 6795,
                      "name": "DECAYRATE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6329,
                      "src": "11791:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11726:74:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11705:95:22"
                },
                {
                  "expression": {
                    "id": 6801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6798,
                      "name": "_last_liquidity_change",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6455,
                      "src": "11810:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6799,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "11835:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 6800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11841:9:22",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "11835:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11810:40:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6802,
                  "nodeType": "ExpressionStatement",
                  "src": "11810:40:22"
                },
                {
                  "assignments": [
                    6804
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6804,
                      "mutability": "mutable",
                      "name": "UF",
                      "nameLocation": "11885:2:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 6844,
                      "src": "11877:10:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6803,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11877:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6806,
                  "initialValue": {
                    "id": 6805,
                    "name": "_liquidity_flow",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6453,
                    "src": "11890:15:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11877:28:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6807,
                      "name": "UF",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6804,
                      "src": "11919:2:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 6808,
                      "name": "delta_flow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6786,
                      "src": "11924:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11919:15:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6823,
                  "nodeType": "IfStatement",
                  "src": "11915:208:22",
                  "trueBody": {
                    "id": 6822,
                    "nodeType": "Block",
                    "src": "11936:187:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 6813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 6811,
                                "name": "value_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6750,
                                "src": "11958:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 6812,
                                "name": "MUF",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6754,
                                "src": "11967:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11958:12:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 6814,
                              "name": "EXCEEDS_SECURITY_LIMIT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6315,
                              "src": "11972:22:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 6810,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11950:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 6815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11950:45:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6816,
                        "nodeType": "ExpressionStatement",
                        "src": "11950:45:22"
                      },
                      {
                        "expression": {
                          "id": 6819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 6817,
                            "name": "_liquidity_flow",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6453,
                            "src": "12068:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 6818,
                            "name": "value_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6750,
                            "src": "12086:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12068:24:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 6820,
                        "nodeType": "ExpressionStatement",
                        "src": "12068:24:22"
                      },
                      {
                        "functionReturnParameters": 6752,
                        "id": 6821,
                        "nodeType": "Return",
                        "src": "12106:7:22"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    6825
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6825,
                      "mutability": "mutable",
                      "name": "newUnitFlow",
                      "nameLocation": "12141:11:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 6844,
                      "src": "12133:19:22",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6824,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12133:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6832,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 6828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 6826,
                            "name": "UF",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6804,
                            "src": "12156:2:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 6827,
                            "name": "value_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6750,
                            "src": "12161:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12156:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 6829,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "12155:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 6830,
                      "name": "delta_flow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6786,
                      "src": "12171:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12155:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12133:48:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6834,
                          "name": "newUnitFlow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6825,
                          "src": "12199:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 6835,
                          "name": "MUF",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6754,
                          "src": "12213:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12199:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 6837,
                        "name": "EXCEEDS_SECURITY_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6315,
                        "src": "12218:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 6833,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12191:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12191:50:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6839,
                  "nodeType": "ExpressionStatement",
                  "src": "12191:50:22"
                },
                {
                  "expression": {
                    "id": 6842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6840,
                      "name": "_liquidity_flow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6453,
                      "src": "12251:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6841,
                      "name": "newUnitFlow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6825,
                      "src": "12269:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12251:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6843,
                  "nodeType": "ExpressionStatement",
                  "src": "12251:29:22"
                }
              ]
            },
            "documentation": {
              "id": 6748,
              "nodeType": "StructuredDocumentation",
              "src": "10979:224:22",
              "text": " @notice\n     Checks if the pool supports an inflow of value_ pool token\n     and decreases unit capacity by value_ pool tokens..\n @param value_ The number of pool tokens to check and set."
            },
            "id": 6845,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkAndSetLiquidityCapacity",
            "nameLocation": "11217:28:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6750,
                  "mutability": "mutable",
                  "name": "value_",
                  "nameLocation": "11254:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6845,
                  "src": "11246:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11246:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11245:16:22"
            },
            "returnParameters": {
              "id": 6752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11271:0:22"
            },
            "scope": 7058,
            "src": "11208:1079:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6882,
              "nodeType": "Block",
              "src": "13237:309:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 6859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 6856,
                                  "name": "tx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -26,
                                  "src": "13292:2:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_transaction",
                                    "typeString": "tx"
                                  }
                                },
                                "id": 6857,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13295:6:22",
                                "memberName": "origin",
                                "nodeType": "MemberAccess",
                                "src": "13292:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 6858,
                                "name": "_setupMaster",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6444,
                                "src": "13305:12:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "13292:25:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 6860,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13291:27:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 6864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 6861,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "13323:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 6862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "13327:6:22",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "13323:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 6863,
                                "name": "_setupMaster",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6444,
                                "src": "13337:12:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "13323:26:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 6865,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13322:28:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13291:59:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6855,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13283:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13283:68:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6868,
                  "nodeType": "ExpressionStatement",
                  "src": "13283:68:22"
                },
                {
                  "expression": {
                    "id": 6871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6869,
                      "name": "_onlyLocal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6421,
                      "src": "13377:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 6870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13390:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "13377:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6872,
                  "nodeType": "ExpressionStatement",
                  "src": "13377:18:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6877,
                        "name": "channelId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6848,
                        "src": "13474:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 6878,
                        "name": "poolReceiving",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6850,
                        "src": "13497:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 6879,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6852,
                        "src": "13524:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6874,
                            "name": "_chaininterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6417,
                            "src": "13427:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6873,
                          "name": "CatalystIBCInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "13406:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CatalystIBCInterface_$804_$",
                            "typeString": "type(contract CatalystIBCInterface)"
                          }
                        },
                        "id": 6875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13406:37:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CatalystIBCInterface_$804",
                          "typeString": "contract CatalystIBCInterface"
                        }
                      },
                      "id": 6876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13444:16:22",
                      "memberName": "CreateConnection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 185,
                      "src": "13406:54:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_bytes32_$_t_bool_$returns$_t_bool_$",
                        "typeString": "function (bytes32,bytes32,bool) external returns (bool)"
                      }
                    },
                    "id": 6880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13406:133:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6881,
                  "nodeType": "ExpressionStatement",
                  "src": "13406:133:22"
                }
              ]
            },
            "documentation": {
              "id": 6846,
              "nodeType": "StructuredDocumentation",
              "src": "12293:820:22",
              "text": " @notice Creates a connection to the pool _poolReceiving on the channel _channelId.\n @dev if _poolReceiving is an EVM pool, it can be computes as:\n     Vyper: convert(_poolAddress, bytes32)\n     Solidity: abi.encode(_poolAddress)\n     Brownie: brownie.convert.to_bytes(_poolAddress, type_str=\"bytes32\")\n ! Notice, using tx.origin is not secure.\n However, it makes it easy to bundle call from an external contract\n and no assets are at risk because the pool should not be used without\n setupMaster == ZERO_ADDRESS\n @param channelId The _channelId of the target pool.\n @param poolReceiving The bytes32 representation of the target pool\n @param state  # todo: Should we also set this to True? Aka: should we disable disabling a connection?"
            },
            "functionSelector": "f2ae725c",
            "id": 6883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createConnection",
            "nameLocation": "13127:16:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6848,
                  "mutability": "mutable",
                  "name": "channelId",
                  "nameLocation": "13161:9:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6883,
                  "src": "13153:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6847,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13153:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6850,
                  "mutability": "mutable",
                  "name": "poolReceiving",
                  "nameLocation": "13188:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6883,
                  "src": "13180:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6849,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13180:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6852,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "13216:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6883,
                  "src": "13211:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6851,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13211:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13143:84:22"
            },
            "returnParameters": {
              "id": 6854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13237:0:22"
            },
            "scope": 7058,
            "src": "13118:428:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6920,
              "nodeType": "Block",
              "src": "14566:316:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 6897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 6894,
                                  "name": "tx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -26,
                                  "src": "14621:2:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_transaction",
                                    "typeString": "tx"
                                  }
                                },
                                "id": 6895,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14624:6:22",
                                "memberName": "origin",
                                "nodeType": "MemberAccess",
                                "src": "14621:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 6896,
                                "name": "_setupMaster",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6444,
                                "src": "14634:12:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "14621:25:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 6898,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14620:27:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 6902,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 6899,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "14652:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 6900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "14656:6:22",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "14652:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 6901,
                                "name": "_setupMaster",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6444,
                                "src": "14666:12:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "14652:26:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 6903,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14651:28:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14620:59:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6893,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14612:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14612:68:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6906,
                  "nodeType": "ExpressionStatement",
                  "src": "14612:68:22"
                },
                {
                  "expression": {
                    "id": 6909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6907,
                      "name": "_onlyLocal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6421,
                      "src": "14706:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 6908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14719:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "14706:18:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6910,
                  "nodeType": "ExpressionStatement",
                  "src": "14706:18:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6915,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6886,
                        "src": "14812:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6916,
                        "name": "poolReceiving",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6888,
                        "src": "14833:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 6917,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6890,
                        "src": "14860:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 6912,
                            "name": "_chaininterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6417,
                            "src": "14756:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 6911,
                          "name": "CatalystIBCInterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 804,
                          "src": "14735:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CatalystIBCInterface_$804_$",
                            "typeString": "type(contract CatalystIBCInterface)"
                          }
                        },
                        "id": 6913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14735:37:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CatalystIBCInterface_$804",
                          "typeString": "contract CatalystIBCInterface"
                        }
                      },
                      "id": 6914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14773:25:22",
                      "memberName": "CreateConnectionWithChain",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 246,
                      "src": "14735:63:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,bytes32,bool) external"
                      }
                    },
                    "id": 6918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14735:140:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6919,
                  "nodeType": "ExpressionStatement",
                  "src": "14735:140:22"
                }
              ]
            },
            "documentation": {
              "id": 6884,
              "nodeType": "StructuredDocumentation",
              "src": "13552:883:22",
              "text": " @notice Creates a connection to the pool _poolReceiving using the lookup table of the interface.\n @dev if _poolReceiving is an EVM pool, it can be computes as:\n     Vyper: convert(_poolAddress, bytes32)\n     Solidity: abi.encode(_poolAddress)\n     Brownie: brownie.convert.to_bytes(_poolAddress, type_str=\"bytes32\")\n ! Using tx.origin is not secure.\n However, it makes it easy to bundle call from an external contract\n and no assets are at risk because the pool should not be used without\n setupMaster == ZERO_ADDRESS\n @param chainId _chainId of the target pool. The interface will convert the chainId to the correct channelId.\n @param poolReceiving The bytes32 representation of the target pool\n @param state  # todo: Should we also set this to True? Aka: should we disable disabling a connection?"
            },
            "functionSelector": "b240ca0b",
            "id": 6921,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createConnectionWithChain",
            "nameLocation": "14449:25:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6886,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "14492:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "14484:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14484:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6888,
                  "mutability": "mutable",
                  "name": "poolReceiving",
                  "nameLocation": "14517:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "14509:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6887,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14509:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6890,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "14545:5:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 6921,
                  "src": "14540:10:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6889,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14540:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14474:82:22"
            },
            "returnParameters": {
              "id": 6892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14566:0:22"
            },
            "scope": 7058,
            "src": "14440:442:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6955,
              "nodeType": "Block",
              "src": "15258:304:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 6936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 6929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 6926,
                                  "name": "tx",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -26,
                                  "src": "15313:2:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_transaction",
                                    "typeString": "tx"
                                  }
                                },
                                "id": 6927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15316:6:22",
                                "memberName": "origin",
                                "nodeType": "MemberAccess",
                                "src": "15313:9:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 6928,
                                "name": "_setupMaster",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6444,
                                "src": "15326:12:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15313:25:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 6930,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "15312:27:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 6934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 6931,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "15344:3:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 6932,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15348:6:22",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "15344:10:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 6933,
                                "name": "_setupMaster",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6444,
                                "src": "15358:12:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15344:26:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 6935,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "15343:28:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15312:59:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6925,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15304:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15304:68:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6938,
                  "nodeType": "ExpressionStatement",
                  "src": "15304:68:22"
                },
                {
                  "condition": {
                    "id": 6939,
                    "name": "_onlyLocal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6421,
                    "src": "15479:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6947,
                  "nodeType": "IfStatement",
                  "src": "15475:44:22",
                  "trueBody": {
                    "expression": {
                      "id": 6945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 6940,
                        "name": "_chaininterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6417,
                        "src": "15491:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15517:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15509:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6941,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15509:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15509:10:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "15491:28:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 6946,
                    "nodeType": "ExpressionStatement",
                    "src": "15491:28:22"
                  }
                },
                {
                  "expression": {
                    "id": 6953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6948,
                      "name": "_setupMaster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6444,
                      "src": "15530:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 6951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15553:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 6950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15545:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6949,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15545:7:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15545:10:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15530:25:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6954,
                  "nodeType": "ExpressionStatement",
                  "src": "15530:25:22"
                }
              ]
            },
            "documentation": {
              "id": 6922,
              "nodeType": "StructuredDocumentation",
              "src": "14888:333:22",
              "text": " @notice Gives up short term ownership of the pool. This makes the pool unstoppable.\n @dev ! Using tx.origin is not secure.\n However, it makes it easy to bundle call from an external contract\n and no assets are at risk because the pool should not be used without\n setupMaster == ZERO_ADDRESS"
            },
            "functionSelector": "86f25e4d",
            "id": 6956,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finishSetup",
            "nameLocation": "15235:11:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15246:2:22"
            },
            "returnParameters": {
              "id": 6924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15258:0:22"
            },
            "scope": 7058,
            "src": "15226:336:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6969,
              "nodeType": "Block",
              "src": "15868:50:22",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 6967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6962,
                      "name": "_setupMaster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6444,
                      "src": "15885:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 6965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15909:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 6964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15901:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 6963,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15901:7:22",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 6966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15901:10:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15885:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6961,
                  "id": 6968,
                  "nodeType": "Return",
                  "src": "15878:33:22"
                }
              ]
            },
            "documentation": {
              "id": 6957,
              "nodeType": "StructuredDocumentation",
              "src": "15568:249:22",
              "text": " @notice\n     External view function purely used to signal if a pool is safe to use.\n @dev\n     Just checks if the setup master has been set to ZERO_ADDRESS.\n     In other words, has finishSetup been called?"
            },
            "functionSelector": "6defbf80",
            "id": 6970,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ready",
            "nameLocation": "15831:5:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15836:2:22"
            },
            "returnParameters": {
              "id": 6961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6960,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6970,
                  "src": "15862:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6959,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15862:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15861:6:22"
            },
            "scope": 7058,
            "src": "15822:96:22",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7007,
              "nodeType": "Block",
              "src": "16076:290:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 6977,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "16094:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 6978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16098:6:22",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "16094:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 6979,
                          "name": "_chaininterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6417,
                          "src": "16108:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16094:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 6976,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16086:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 6981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16086:38:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6982,
                  "nodeType": "ExpressionStatement",
                  "src": "16086:38:22"
                },
                {
                  "assignments": [
                    6985
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6985,
                      "mutability": "mutable",
                      "name": "escrowInformation",
                      "nameLocation": "16153:17:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 7007,
                      "src": "16134:36:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenEscrow_$6340_memory_ptr",
                        "typeString": "struct CatalystSwapPoolCore.TokenEscrow"
                      },
                      "typeName": {
                        "id": 6984,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 6983,
                          "name": "TokenEscrow",
                          "nameLocations": [
                            "16134:11:22"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6340,
                          "src": "16134:11:22"
                        },
                        "referencedDeclaration": 6340,
                        "src": "16134:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenEscrow_$6340_storage_ptr",
                          "typeString": "struct CatalystSwapPoolCore.TokenEscrow"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6989,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6986,
                      "name": "_escrowedFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6466,
                      "src": "16173:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenEscrow_$6340_storage_$",
                        "typeString": "mapping(uint256 => struct CatalystSwapPoolCore.TokenEscrow storage ref)"
                      }
                    },
                    "id": 6988,
                    "indexExpression": {
                      "id": 6987,
                      "name": "sourceSwapId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6973,
                      "src": "16186:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16173:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenEscrow_$6340_storage",
                      "typeString": "struct CatalystSwapPoolCore.TokenEscrow storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16134:65:22"
                },
                {
                  "expression": {
                    "id": 6996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6990,
                        "name": "_escrowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6460,
                        "src": "16209:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 6993,
                      "indexExpression": {
                        "expression": {
                          "id": 6991,
                          "name": "escrowInformation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6985,
                          "src": "16225:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenEscrow_$6340_memory_ptr",
                            "typeString": "struct CatalystSwapPoolCore.TokenEscrow memory"
                          }
                        },
                        "id": 6992,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16243:5:22",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6339,
                        "src": "16225:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16209:40:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "id": 6994,
                        "name": "escrowInformation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6985,
                        "src": "16253:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenEscrow_$6340_memory_ptr",
                          "typeString": "struct CatalystSwapPoolCore.TokenEscrow memory"
                        }
                      },
                      "id": 6995,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16271:6:22",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6337,
                      "src": "16253:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16209:68:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 6997,
                  "nodeType": "ExpressionStatement",
                  "src": "16209:68:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6999,
                        "name": "sourceSwapId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6973,
                        "src": "16303:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6998,
                      "name": "EscrowAck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6410,
                      "src": "16293:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16293:23:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7001,
                  "nodeType": "EmitStatement",
                  "src": "16288:28:22"
                },
                {
                  "expression": {
                    "id": 7005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "16326:33:22",
                    "subExpression": {
                      "baseExpression": {
                        "id": 7002,
                        "name": "_escrowedFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6466,
                        "src": "16333:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenEscrow_$6340_storage_$",
                          "typeString": "mapping(uint256 => struct CatalystSwapPoolCore.TokenEscrow storage ref)"
                        }
                      },
                      "id": 7004,
                      "indexExpression": {
                        "id": 7003,
                        "name": "sourceSwapId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6973,
                        "src": "16346:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16333:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenEscrow_$6340_storage",
                        "typeString": "struct CatalystSwapPoolCore.TokenEscrow storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7006,
                  "nodeType": "ExpressionStatement",
                  "src": "16326:33:22"
                }
              ]
            },
            "documentation": {
              "id": 6971,
              "nodeType": "StructuredDocumentation",
              "src": "15956:58:22",
              "text": "@notice Release the escrowed tokens into the pool.  "
            },
            "functionSelector": "ff27bd8b",
            "id": 7008,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseEscrowACK",
            "nameLocation": "16028:16:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6973,
                  "mutability": "mutable",
                  "name": "sourceSwapId",
                  "nameLocation": "16053:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7008,
                  "src": "16045:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6972,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16045:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16044:22:22"
            },
            "returnParameters": {
              "id": 6975,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16076:0:22"
            },
            "scope": 7058,
            "src": "16019:347:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7056,
              "nodeType": "Block",
              "src": "16493:433:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 7015,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "16511:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 7016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16515:6:22",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "16511:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 7017,
                          "name": "_chaininterface",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6417,
                          "src": "16525:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "16511:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 7014,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16503:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 7019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16503:38:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7020,
                  "nodeType": "ExpressionStatement",
                  "src": "16503:38:22"
                },
                {
                  "assignments": [
                    7023
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7023,
                      "mutability": "mutable",
                      "name": "escrowInformation",
                      "nameLocation": "16570:17:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 7056,
                      "src": "16551:36:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenEscrow_$6340_memory_ptr",
                        "typeString": "struct CatalystSwapPoolCore.TokenEscrow"
                      },
                      "typeName": {
                        "id": 7022,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 7021,
                          "name": "TokenEscrow",
                          "nameLocations": [
                            "16551:11:22"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 6340,
                          "src": "16551:11:22"
                        },
                        "referencedDeclaration": 6340,
                        "src": "16551:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenEscrow_$6340_storage_ptr",
                          "typeString": "struct CatalystSwapPoolCore.TokenEscrow"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 7027,
                  "initialValue": {
                    "baseExpression": {
                      "id": 7024,
                      "name": "_escrowedFor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6466,
                      "src": "16590:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenEscrow_$6340_storage_$",
                        "typeString": "mapping(uint256 => struct CatalystSwapPoolCore.TokenEscrow storage ref)"
                      }
                    },
                    "id": 7026,
                    "indexExpression": {
                      "id": 7025,
                      "name": "sourceSwapId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7011,
                      "src": "16603:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16590:26:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TokenEscrow_$6340_storage",
                      "typeString": "struct CatalystSwapPoolCore.TokenEscrow storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16551:65:22"
                },
                {
                  "expression": {
                    "id": 7034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7028,
                        "name": "_escrowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6460,
                        "src": "16626:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 7031,
                      "indexExpression": {
                        "expression": {
                          "id": 7029,
                          "name": "escrowInformation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7023,
                          "src": "16642:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenEscrow_$6340_memory_ptr",
                            "typeString": "struct CatalystSwapPoolCore.TokenEscrow memory"
                          }
                        },
                        "id": 7030,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16660:5:22",
                        "memberName": "token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6339,
                        "src": "16642:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16626:40:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "expression": {
                        "id": 7032,
                        "name": "escrowInformation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7023,
                        "src": "16670:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenEscrow_$6340_memory_ptr",
                          "typeString": "struct CatalystSwapPoolCore.TokenEscrow memory"
                        }
                      },
                      "id": 7033,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16688:6:22",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6337,
                      "src": "16670:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16626:68:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7035,
                  "nodeType": "ExpressionStatement",
                  "src": "16626:68:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 7041,
                          "name": "escrowInformation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7023,
                          "src": "16763:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenEscrow_$6340_memory_ptr",
                            "typeString": "struct CatalystSwapPoolCore.TokenEscrow memory"
                          }
                        },
                        "id": 7042,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16781:4:22",
                        "memberName": "user",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6335,
                        "src": "16763:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 7043,
                          "name": "escrowInformation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7023,
                          "src": "16799:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TokenEscrow_$6340_memory_ptr",
                            "typeString": "struct CatalystSwapPoolCore.TokenEscrow memory"
                          }
                        },
                        "id": 7044,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16817:6:22",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6337,
                        "src": "16799:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 7037,
                              "name": "escrowInformation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7023,
                              "src": "16712:17:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenEscrow_$6340_memory_ptr",
                                "typeString": "struct CatalystSwapPoolCore.TokenEscrow memory"
                              }
                            },
                            "id": 7038,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16730:5:22",
                            "memberName": "token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6339,
                            "src": "16712:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 7036,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9467,
                          "src": "16705:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$9467_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 7039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16705:31:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$9467",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 7040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16737:12:22",
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8829,
                      "src": "16705:44:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$9467_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$9467_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 7045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16705:128:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7046,
                  "nodeType": "ExpressionStatement",
                  "src": "16705:128:22"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7048,
                        "name": "sourceSwapId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7011,
                        "src": "16863:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7047,
                      "name": "EscrowTimeout",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6415,
                      "src": "16849:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 7049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16849:27:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7050,
                  "nodeType": "EmitStatement",
                  "src": "16844:32:22"
                },
                {
                  "expression": {
                    "id": 7054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "16886:33:22",
                    "subExpression": {
                      "baseExpression": {
                        "id": 7051,
                        "name": "_escrowedFor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6466,
                        "src": "16893:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenEscrow_$6340_storage_$",
                          "typeString": "mapping(uint256 => struct CatalystSwapPoolCore.TokenEscrow storage ref)"
                        }
                      },
                      "id": 7053,
                      "indexExpression": {
                        "id": 7052,
                        "name": "sourceSwapId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7011,
                        "src": "16906:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16893:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenEscrow_$6340_storage",
                        "typeString": "struct CatalystSwapPoolCore.TokenEscrow storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7055,
                  "nodeType": "ExpressionStatement",
                  "src": "16886:33:22"
                }
              ]
            },
            "documentation": {
              "id": 7009,
              "nodeType": "StructuredDocumentation",
              "src": "16372:55:22",
              "text": "@notice Returned the escrowed tokens to the user "
            },
            "functionSelector": "acd3fac0",
            "id": 7057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "releaseEscrowTIMEOUT",
            "nameLocation": "16441:20:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7011,
                  "mutability": "mutable",
                  "name": "sourceSwapId",
                  "nameLocation": "16470:12:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 7057,
                  "src": "16462:20:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16462:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16461:22:22"
            },
            "returnParameters": {
              "id": 7013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16493:0:22"
            },
            "scope": 7058,
            "src": "16432:494:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7059,
        "src": "368:16560:22",
        "usedErrors": []
      }
    ],
    "src": "39:16890:22"
  },
  "bytecode": "60806040526005805460ff60a01b1916600160a01b1790553480156200002457600080fd5b506040805160208082018352600080835283519182019093529182529060036200004f838262000119565b5060046200005e828262000119565b50506014805460ff1916600117905550620001e5565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200009f57607f821691505b602082108103620000c057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011457600081815260208120601f850160051c81016020861015620000ef5750805b601f850160051c820191505b818110156200011057828155600101620000fb565b5050505b505050565b81516001600160401b0381111562000135576200013562000074565b6200014d816200014684546200008a565b84620000c6565b602080601f8311600181146200018557600084156200016c5750858301515b600019600386901b1c1916600185901b17855562000110565b600085815260208120601f198616915b82811015620001b65788860151825594840194600190910190840162000195565b5085821015620001d55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61192080620001f56000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806386f25e4d11610104578063a9059cbb116100a2578063dd62ed3e11610071578063dd62ed3e146104aa578063ddc71dd1146104f0578063f2ae725c14610515578063ff27bd8b1461052857600080fd5b8063a9059cbb14610451578063acd3fac014610464578063b240ca0b14610477578063c90da0131461048a57600080fd5b8063916f65e3116100de578063916f65e31461042457806395d89b411461042d5780639ecfbb3614610435578063a457c2d71461043e57600080fd5b806386f25e4d146103dc5780638c9aa6f7146103e6578063904e0a01146103ee57600080fd5b806324cbc9ee116101715780633867e8571161014b5780633867e8571461032f57806339509351146103745780636defbf801461038757806370a08231146103a657600080fd5b806324cbc9ee146102e0578063313ce5671461030057806332a3385e1461030f57600080fd5b80630bc350d7116101ad5780630bc350d71461028f57806318160ddd146102a557806323b872dd146102ad57806324351d57146102c057600080fd5b8063023aae47146101d457806306fdde0314610257578063095ea7b31461026c575b600080fd5b61021b6101e2366004611602565b60126020526000908152604090208054600182015460029092015473ffffffffffffffffffffffffffffffffffffffff91821692911683565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815260208101939093529216918101919091526060015b60405180910390f35b61025f61053b565b60405161024e919061163f565b61027f61027a3660046116b9565b6105cd565b604051901515815260200161024e565b6102976105e7565b60405190815260200161024e565b600254610297565b61027f6102bb3660046116e3565b610662565b6102976102ce36600461171f565b60116020526000908152604090205481565b6102976102ee36600461171f565b60076020526000908152604090205481565b6040516012815260200161024e565b61029761031d36600461171f565b60086020526000908152604090205481565b60055461034f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161024e565b61027f6103823660046116b9565b610688565b600b5473ffffffffffffffffffffffffffffffffffffffff161561027f565b6102976103b436600461171f565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6103e46106d4565b005b610297610790565b61034f6103fc366004611602565b60066020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b610297600c5481565b61025f61080e565b61029760095481565b61027f61044c3660046116b9565b61081d565b61027f61045f3660046116b9565b6108fe565b6103e4610472366004611602565b61090c565b6103e461048536600461174b565b610a4d565b600b5461034f9073ffffffffffffffffffffffffffffffffffffffff1681565b6102976104b8366004611784565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60055461027f9074010000000000000000000000000000000000000000900460ff1681565b6103e461052336600461174b565b610b52565b6103e4610536366004611602565b610c69565b60606015805461054a906117b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610576906117b7565b80156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b5050505050905090565b6000336105db818585610d2d565b60019150505b92915050565b600c54600e54600091906105fe9062015180611839565b42111561060a57919050565b600062015180600e544261061e919061184c565b610628908461185f565b6106329190611876565b905080600d54116106435750919050565b80600d54610651919061184c565b61065b908361184c565b9250505090565b600033610670858285610ee0565b61067b858585610fb1565b60019150505b9392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906105db90829086906106cf908790611839565b610d2d565b600b5473ffffffffffffffffffffffffffffffffffffffff163214806107115750600b5473ffffffffffffffffffffffffffffffffffffffff1633145b61071a57600080fd5b60055474010000000000000000000000000000000000000000900460ff161561076657600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555b600b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600080600261079e60025490565b6107a89190611876565b9050601054620151806107bb9190611839565b4211156107c757919050565b600062015180601054426107db919061184c565b6107e5908461185f565b6107ef9190611876565b905080600f54116108005750919050565b80600f54610651919061184c565b60606016805461054a906117b7565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156108e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6108f38286868403610d2d565b506001949350505050565b6000336105db818585610fb1565b60055473ffffffffffffffffffffffffffffffffffffffff16331461093057600080fd5b60008181526012602090815260408083208151606081018352815473ffffffffffffffffffffffffffffffffffffffff90811682526001830154828601819052600290930154168184018190528552601190935290832080549293919290919061099b90849061184c565b90915550508051602082015160408301516109ce9273ffffffffffffffffffffffffffffffffffffffff90911691611264565b6040518281527f2ed3176c48e2338524348cc2055adb2c2d41e9022e0a6a18d843c9ed5be9a3a3906020015b60405180910390a150600090815260126020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168255600182019290925560020180549091169055565b600b5473ffffffffffffffffffffffffffffffffffffffff16321480610a8a5750600b5473ffffffffffffffffffffffffffffffffffffffff1633145b610a9357600080fd5b600580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff81169091556040517f92a9bdb30000000000000000000000000000000000000000000000000000000081526004810185905260248101849052821515604482015273ffffffffffffffffffffffffffffffffffffffff909116906392a9bdb390606401600060405180830381600087803b158015610b3557600080fd5b505af1158015610b49573d6000803e3d6000fd5b50505050505050565b600b5473ffffffffffffffffffffffffffffffffffffffff16321480610b8f5750600b5473ffffffffffffffffffffffffffffffffffffffff1633145b610b9857600080fd5b600580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff81169091556040517fcec8a3950000000000000000000000000000000000000000000000000000000081526004810185905260248101849052821515604482015273ffffffffffffffffffffffffffffffffffffffff9091169063cec8a395906064016020604051808303816000875af1158015610c3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6391906118b1565b50505050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610c8d57600080fd5b60008181526012602090815260408083208151606081018352815473ffffffffffffffffffffffffffffffffffffffff908116825260018301548286018190526002909301541681840181905285526011909352908320805492939192909190610cf890849061184c565b90915550506040518281527f44898ab65affad4f975e5a33a5f62fc75a177f6e222da2585627711f4b0f50f5906020016109fa565b73ffffffffffffffffffffffffffffffffffffffff8316610dcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016108dd565b73ffffffffffffffffffffffffffffffffffffffff8216610e72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016108dd565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c635781811015610fa4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108dd565b610c638484848403610d2d565b73ffffffffffffffffffffffffffffffffffffffff8316611054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016108dd565b73ffffffffffffffffffffffffffffffffffffffff82166110f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016108dd565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054818110156111ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016108dd565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906111f1908490611839565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161125791815260200190565b60405180910390a3610c63565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526112f19084906112f6565b505050565b6000611358826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166114029092919063ffffffff16565b8051909150156112f1578080602001905181019061137691906118b1565b6112f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016108dd565b60606114118484600085611419565b949350505050565b6060824710156114ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016108dd565b73ffffffffffffffffffffffffffffffffffffffff85163b611529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108dd565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161155291906118ce565b60006040518083038185875af1925050503d806000811461158f576040519150601f19603f3d011682016040523d82523d6000602084013e611594565b606091505b50915091506115a48282866115af565b979650505050505050565b606083156115be575081610681565b8251156115ce5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd919061163f565b60006020828403121561161457600080fd5b5035919050565b60005b8381101561163657818101518382015260200161161e565b50506000910152565b602081526000825180602084015261165e81604085016020870161161b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146116b457600080fd5b919050565b600080604083850312156116cc57600080fd5b6116d583611690565b946020939093013593505050565b6000806000606084860312156116f857600080fd5b61170184611690565b925061170f60208501611690565b9150604084013590509250925092565b60006020828403121561173157600080fd5b61068182611690565b801515811461174857600080fd5b50565b60008060006060848603121561176057600080fd5b833592506020840135915060408401356117798161173a565b809150509250925092565b6000806040838503121561179757600080fd5b6117a083611690565b91506117ae60208401611690565b90509250929050565b600181811c908216806117cb57607f821691505b602082108103611804577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156105e1576105e161180a565b818103818111156105e1576105e161180a565b80820281158282048414176105e1576105e161180a565b6000826118ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000602082840312156118c357600080fd5b81516106818161173a565b600082516118e081846020870161161b565b919091019291505056fea26469706673582212201076681ff205f95117123b5548b137551414fee58f7960a7b12e4dfd3f7d17fb64736f6c63430008110033",
  "bytecodeSha1": "d51b909bbc0d025da65cc1bfd43cb56de45c4484",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 251251
    },
    "version": "0.8.17+commit.8df45f5f"
  },
  "contractName": "CatalystSwapPoolCore",
  "coverageMap": {
    "branches": {
      "0": {},
      "10": {
        "Address.functionCallWithValue": {
          "70": [
            5145,
            5175,
            true
          ]
        },
        "Address.verifyCallResult": {
          "71": [
            7735,
            7742,
            false
          ],
          "72": [
            7876,
            7897,
            false
          ]
        }
      },
      "11": {},
      "16": {},
      "17": {},
      "19": {},
      "22": {
        "CatalystSwapPoolCore.finishSetup": {
          "65": [
            15479,
            15489,
            false
          ]
        },
        "CatalystSwapPoolCore.getLiquidityUnitCapacity": {
          "66": [
            9281,
            9333,
            false
          ],
          "67": [
            9466,
            9495,
            false
          ]
        },
        "CatalystSwapPoolCore.getUnitCapacity": {
          "63": [
            8301,
            8343,
            false
          ],
          "64": [
            8552,
            8576,
            false
          ]
        },
        "CatalystSwapPoolCore.releaseEscrowACK": {
          "69": [
            16094,
            16123,
            true
          ]
        },
        "CatalystSwapPoolCore.releaseEscrowTIMEOUT": {
          "68": [
            16511,
            16540,
            true
          ]
        }
      },
      "26": {},
      "27": {},
      "3": {
        "ERC20._approve": {
          "74": [
            10254,
            10273,
            true
          ],
          "75": [
            10332,
            10353,
            true
          ]
        },
        "ERC20._spendAllowance": {
          "76": [
            10966,
            11003,
            false
          ],
          "77": [
            11027,
            11053,
            true
          ]
        },
        "ERC20._transfer": {
          "78": [
            7614,
            7632,
            true
          ],
          "79": [
            7692,
            7708,
            true
          ],
          "80": [
            7863,
            7884,
            true
          ]
        },
        "ERC20.decreaseAllowance": {
          "73": [
            6815,
            6850,
            true
          ]
        }
      },
      "4": {},
      "6": {},
      "9": {
        "SafeERC20._callOptionalReturn": {
          "81": [
            3735,
            3756,
            false
          ],
          "82": [
            3819,
            3849,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "10": {
        "Address.functionCall": {
          "56": [
            4018,
            4077
          ]
        },
        "Address.functionCallWithValue": {
          "57": [
            5137,
            5218
          ],
          "59": [
            5228,
            5288
          ],
          "60": [
            5382,
            5440
          ]
        },
        "Address.isContract": {
          "58": [
            1458,
            1488
          ]
        },
        "Address.verifyCallResult": {
          "61": [
            7758,
            7775
          ],
          "62": [
            8202,
            8222
          ]
        }
      },
      "11": {
        "Context._msgSender": {
          "6": [
            712,
            729
          ]
        }
      },
      "16": {},
      "17": {},
      "19": {},
      "22": {
        "CatalystSwapPoolCore.createConnection": {
          "35": [
            13283,
            13351
          ],
          "36": [
            13377,
            13395
          ],
          "37": [
            13406,
            13539
          ]
        },
        "CatalystSwapPoolCore.createConnectionWithChain": {
          "32": [
            14612,
            14680
          ],
          "33": [
            14706,
            14724
          ],
          "34": [
            14735,
            14875
          ]
        },
        "CatalystSwapPoolCore.decimals": {
          "1": [
            7200,
            7209
          ]
        },
        "CatalystSwapPoolCore.finishSetup": {
          "16": [
            15304,
            15372
          ],
          "17": [
            15491,
            15519
          ],
          "18": [
            15530,
            15555
          ]
        },
        "CatalystSwapPoolCore.getLiquidityUnitCapacity": {
          "19": [
            9335,
            9345
          ],
          "20": [
            9497,
            9507
          ],
          "21": [
            9518,
            9561
          ]
        },
        "CatalystSwapPoolCore.getUnitCapacity": {
          "9": [
            8345,
            8355
          ],
          "10": [
            8578,
            8588
          ],
          "11": [
            8653,
            8691
          ]
        },
        "CatalystSwapPoolCore.name": {
          "5": [
            7008,
            7020
          ]
        },
        "CatalystSwapPoolCore.ready": {
          "2": [
            15878,
            15911
          ]
        },
        "CatalystSwapPoolCore.releaseEscrowACK": {
          "38": [
            16086,
            16124
          ],
          "39": [
            16209,
            16277
          ],
          "40": [
            16288,
            16316
          ]
        },
        "CatalystSwapPoolCore.releaseEscrowTIMEOUT": {
          "27": [
            16503,
            16541
          ],
          "28": [
            16626,
            16694
          ],
          "29": [
            16705,
            16833
          ],
          "30": [
            16844,
            16876
          ],
          "31": [
            16886,
            16919
          ]
        },
        "CatalystSwapPoolCore.symbol": {
          "22": [
            7106,
            7120
          ]
        }
      },
      "26": {},
      "27": {},
      "3": {
        "ERC20._approve": {
          "41": [
            10246,
            10314
          ],
          "42": [
            10324,
            10392
          ],
          "43": [
            10403,
            10439
          ],
          "44": [
            10449,
            10486
          ]
        },
        "ERC20._spendAllowance": {
          "45": [
            11019,
            11087
          ],
          "46": [
            11129,
            11180
          ]
        },
        "ERC20._transfer": {
          "47": [
            7606,
            7674
          ],
          "48": [
            7684,
            7748
          ],
          "49": [
            7855,
            7927
          ],
          "50": [
            7961,
            7999
          ],
          "51": [
            8019,
            8042
          ],
          "52": [
            8053,
            8084
          ],
          "53": [
            8095,
            8132
          ]
        },
        "ERC20.allowance": {
          "4": [
            4084,
            4118
          ]
        },
        "ERC20.approve": {
          "7": [
            4570,
            4602
          ],
          "8": [
            4612,
            4623
          ]
        },
        "ERC20.balanceOf": {
          "3": [
            3501,
            3526
          ]
        },
        "ERC20.decreaseAllowance": {
          "23": [
            6807,
            6892
          ],
          "24": [
            6926,
            6986
          ],
          "25": [
            7007,
            7018
          ]
        },
        "ERC20.increaseAllowance": {
          "15": [
            6015,
            6081
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3324,
            3343
          ]
        },
        "ERC20.transfer": {
          "26": [
            3862,
            3890
          ]
        },
        "ERC20.transferFrom": {
          "12": [
            5375,
            5413
          ],
          "13": [
            5423,
            5450
          ],
          "14": [
            5460,
            5471
          ]
        }
      },
      "4": {},
      "6": {},
      "9": {
        "SafeERC20._callOptionalReturn": {
          "55": [
            3811,
            3896
          ]
        },
        "SafeERC20.safeTransfer": {
          "54": [
            813,
            899
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Address",
    "CatalystFixedPointMath",
    "CatalystIBCInterface",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/ERC20",
    "ICatalystSwapBase",
    "ICatalystSwapPool",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20Metadata",
    "ISwapPoolFactory",
    "IbcDispatcher",
    "IbcReceiver",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/SafeERC20"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101cf5760003560e01c806386f25e4d11610104578063a9059cbb116100a2578063dd62ed3e11610071578063dd62ed3e146104aa578063ddc71dd1146104f0578063f2ae725c14610515578063ff27bd8b1461052857600080fd5b8063a9059cbb14610451578063acd3fac014610464578063b240ca0b14610477578063c90da0131461048a57600080fd5b8063916f65e3116100de578063916f65e31461042457806395d89b411461042d5780639ecfbb3614610435578063a457c2d71461043e57600080fd5b806386f25e4d146103dc5780638c9aa6f7146103e6578063904e0a01146103ee57600080fd5b806324cbc9ee116101715780633867e8571161014b5780633867e8571461032f57806339509351146103745780636defbf801461038757806370a08231146103a657600080fd5b806324cbc9ee146102e0578063313ce5671461030057806332a3385e1461030f57600080fd5b80630bc350d7116101ad5780630bc350d71461028f57806318160ddd146102a557806323b872dd146102ad57806324351d57146102c057600080fd5b8063023aae47146101d457806306fdde0314610257578063095ea7b31461026c575b600080fd5b61021b6101e2366004611602565b60126020526000908152604090208054600182015460029092015473ffffffffffffffffffffffffffffffffffffffff91821692911683565b6040805173ffffffffffffffffffffffffffffffffffffffff948516815260208101939093529216918101919091526060015b60405180910390f35b61025f61053b565b60405161024e919061163f565b61027f61027a3660046116b9565b6105cd565b604051901515815260200161024e565b6102976105e7565b60405190815260200161024e565b600254610297565b61027f6102bb3660046116e3565b610662565b6102976102ce36600461171f565b60116020526000908152604090205481565b6102976102ee36600461171f565b60076020526000908152604090205481565b6040516012815260200161024e565b61029761031d36600461171f565b60086020526000908152604090205481565b60055461034f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161024e565b61027f6103823660046116b9565b610688565b600b5473ffffffffffffffffffffffffffffffffffffffff161561027f565b6102976103b436600461171f565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6103e46106d4565b005b610297610790565b61034f6103fc366004611602565b60066020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b610297600c5481565b61025f61080e565b61029760095481565b61027f61044c3660046116b9565b61081d565b61027f61045f3660046116b9565b6108fe565b6103e4610472366004611602565b61090c565b6103e461048536600461174b565b610a4d565b600b5461034f9073ffffffffffffffffffffffffffffffffffffffff1681565b6102976104b8366004611784565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60055461027f9074010000000000000000000000000000000000000000900460ff1681565b6103e461052336600461174b565b610b52565b6103e4610536366004611602565b610c69565b60606015805461054a906117b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610576906117b7565b80156105c35780601f10610598576101008083540402835291602001916105c3565b820191906000526020600020905b8154815290600101906020018083116105a657829003601f168201915b5050505050905090565b6000336105db818585610d2d565b60019150505b92915050565b600c54600e54600091906105fe9062015180611839565b42111561060a57919050565b600062015180600e544261061e919061184c565b610628908461185f565b6106329190611876565b905080600d54116106435750919050565b80600d54610651919061184c565b61065b908361184c565b9250505090565b600033610670858285610ee0565b61067b858585610fb1565b60019150505b9392505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906105db90829086906106cf908790611839565b610d2d565b600b5473ffffffffffffffffffffffffffffffffffffffff163214806107115750600b5473ffffffffffffffffffffffffffffffffffffffff1633145b61071a57600080fd5b60055474010000000000000000000000000000000000000000900460ff161561076657600580547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555b600b80547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b600080600261079e60025490565b6107a89190611876565b9050601054620151806107bb9190611839565b4211156107c757919050565b600062015180601054426107db919061184c565b6107e5908461185f565b6107ef9190611876565b905080600f54116108005750919050565b80600f54610651919061184c565b60606016805461054a906117b7565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156108e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6108f38286868403610d2d565b506001949350505050565b6000336105db818585610fb1565b60055473ffffffffffffffffffffffffffffffffffffffff16331461093057600080fd5b60008181526012602090815260408083208151606081018352815473ffffffffffffffffffffffffffffffffffffffff90811682526001830154828601819052600290930154168184018190528552601190935290832080549293919290919061099b90849061184c565b90915550508051602082015160408301516109ce9273ffffffffffffffffffffffffffffffffffffffff90911691611264565b6040518281527f2ed3176c48e2338524348cc2055adb2c2d41e9022e0a6a18d843c9ed5be9a3a3906020015b60405180910390a150600090815260126020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168255600182019290925560020180549091169055565b600b5473ffffffffffffffffffffffffffffffffffffffff16321480610a8a5750600b5473ffffffffffffffffffffffffffffffffffffffff1633145b610a9357600080fd5b600580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff81169091556040517f92a9bdb30000000000000000000000000000000000000000000000000000000081526004810185905260248101849052821515604482015273ffffffffffffffffffffffffffffffffffffffff909116906392a9bdb390606401600060405180830381600087803b158015610b3557600080fd5b505af1158015610b49573d6000803e3d6000fd5b50505050505050565b600b5473ffffffffffffffffffffffffffffffffffffffff16321480610b8f5750600b5473ffffffffffffffffffffffffffffffffffffffff1633145b610b9857600080fd5b600580547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff81169091556040517fcec8a3950000000000000000000000000000000000000000000000000000000081526004810185905260248101849052821515604482015273ffffffffffffffffffffffffffffffffffffffff9091169063cec8a395906064016020604051808303816000875af1158015610c3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6391906118b1565b50505050565b60055473ffffffffffffffffffffffffffffffffffffffff163314610c8d57600080fd5b60008181526012602090815260408083208151606081018352815473ffffffffffffffffffffffffffffffffffffffff908116825260018301548286018190526002909301541681840181905285526011909352908320805492939192909190610cf890849061184c565b90915550506040518281527f44898ab65affad4f975e5a33a5f62fc75a177f6e222da2585627711f4b0f50f5906020016109fa565b73ffffffffffffffffffffffffffffffffffffffff8316610dcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016108dd565b73ffffffffffffffffffffffffffffffffffffffff8216610e72576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016108dd565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610c635781811015610fa4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016108dd565b610c638484848403610d2d565b73ffffffffffffffffffffffffffffffffffffffff8316611054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016108dd565b73ffffffffffffffffffffffffffffffffffffffff82166110f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016108dd565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054818110156111ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016108dd565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906111f1908490611839565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161125791815260200190565b60405180910390a3610c63565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526112f19084906112f6565b505050565b6000611358826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166114029092919063ffffffff16565b8051909150156112f1578080602001905181019061137691906118b1565b6112f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016108dd565b60606114118484600085611419565b949350505050565b6060824710156114ab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016108dd565b73ffffffffffffffffffffffffffffffffffffffff85163b611529576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016108dd565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161155291906118ce565b60006040518083038185875af1925050503d806000811461158f576040519150601f19603f3d011682016040523d82523d6000602084013e611594565b606091505b50915091506115a48282866115af565b979650505050505050565b606083156115be575081610681565b8251156115ce5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd919061163f565b60006020828403121561161457600080fd5b5035919050565b60005b8381101561163657818101518382015260200161161e565b50506000910152565b602081526000825180602084015261165e81604085016020870161161b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146116b457600080fd5b919050565b600080604083850312156116cc57600080fd5b6116d583611690565b946020939093013593505050565b6000806000606084860312156116f857600080fd5b61170184611690565b925061170f60208501611690565b9150604084013590509250925092565b60006020828403121561173157600080fd5b61068182611690565b801515811461174857600080fd5b50565b60008060006060848603121561176057600080fd5b833592506020840135915060408401356117798161173a565b809150509250925092565b6000806040838503121561179757600080fd5b6117a083611690565b91506117ae60208401611690565b90509250929050565b600181811c908216806117cb57607f821691505b602082108103611804577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156105e1576105e161180a565b818103818111156105e1576105e161180a565b80820281158282048414176105e1576105e161180a565b6000826118ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000602082840312156118c357600080fd5b81516106818161173a565b600082516118e081846020870161161b565b919091019291505056fea26469706673582212201076681ff205f95117123b5548b137551414fee58f7960a7b12e4dfd3f7d17fb64736f6c63430008110033",
  "deployedSourceMap": "368:16560:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6594:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;411:42:34;480:15;;;462:34;;527:2;512:18;;505:34;;;;575:15;;555:18;;;548:43;;;;389:2;374:18;6594:51:22;;;;;;;;6937:90;;;:::i;:::-;;;;;;;:::i;4433:197:3:-;;;;;;:::i;:::-;;:::i;:::-;;;1942:14:34;;1935:22;1917:41;;1905:2;1890:18;4433:197:3;1777:187:34;8064:634:22;;;:::i;:::-;;;2115:25:34;;;2103:2;2088:18;8064:634:22;1969:177:34;3244:106:3;3331:12;;3244:106;;5192:286;;;;;;:::i;:::-;;:::i;6507:50:22:-;;;;;;:::i;:::-;;;;;;;;;;;;;;5200:44;;;;;;:::i;:::-;;;;;;;;;;;;;;7133:83;;;7207:2;2817:36:34;;2805:2;2790:18;7133:83:22;2675:184:34;5337:42:22;;;;;;:::i;:::-;;;;;;;;;;;;;;4670:30;;;;;;;;;;;;3040:42:34;3028:55;;;3010:74;;2998:2;2983:18;4670:30:22;2864:226:34;5873:236:3;;;;;;:::i;:::-;;:::i;15822:96:22:-;15885:12;;:26;:12;:26;15822:96;;3408:125:3;;;;;;:::i;:::-;3508:18;;3482:7;3508:18;;;;;;;;;;;;3408:125;15226:336:22;;;:::i;:::-;;8910:658;;;:::i;5107:49::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6231:31;;;;;;7033:94;;;:::i;5385:26::-;;;;;;6596:429:3;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;16432:494:22:-;;;;;;:::i;:::-;;:::i;14440:442::-;;;;;;:::i;:::-;;:::i;5676:27::-;;;;;;;;;3976:149:3;;;;;;:::i;:::-;4091:18;;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;4857:29:22;;;;;;;;;;;;13118:428;;;;;;:::i;:::-;;:::i;16019:347::-;;;;;;:::i;:::-;;:::i;6937:90::-;6983:13;7015:5;7008:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6937:90;:::o;4433:197:3:-;4516:4;719:10:11;4570:32:3;719:10:11;4586:7:3;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;;:::o;8064:634:22:-;8147:16;;8331:12;;8114:7;;8147:16;8319:24;;1123:12;8319:24;:::i;:::-;8301:15;:42;8297:58;;;8352:3;8064:634;-1:-1:-1;8064:634:22:o;8297:58::-;8452:18;1123:12;8499;;8481:15;:30;;;;:::i;:::-;8474:38;;:3;:38;:::i;:::-;8473:64;;;;:::i;:::-;8452:85;;8566:10;8552;;:24;8548:40;;-1:-1:-1;8585:3:22;8064:634;-1:-1:-1;8064:634:22:o;8548:40::-;8680:10;8667;;:23;;;;:::i;:::-;8660:31;;:3;:31;:::i;:::-;8653:38;;;;8064:634;:::o;5192:286:3:-;5319:4;719:10:11;5375:38:3;5391:4;719:10:11;5406:6:3;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;;:::o;5873:236::-;719:10:11;5961:4:3;6040:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;5961:4;;719:10:11;6015:66:3;;719:10:11;;6040:27:3;;:40;;6070:10;;6040:40;:::i;:::-;6015:8;:66::i;15226:336:22:-;15326:12;;;;15313:9;:25;;15312:59;;-1:-1:-1;15358:12:22;;;;15344:10;:26;15312:59;15304:68;;;;;;15479:10;;;;;;;15475:44;;;15491:15;:28;;;;;;15475:44;15530:12;:25;;;;;;15226:336::o;8910:658::-;8969:7;9235:11;9265:1;9249:13;3331:12:3;;;3244:106;9249:13:22;:17;;;;:::i;:::-;9235:31;;9311:22;;1123:12;9299:34;;;;:::i;:::-;9281:15;:52;9277:68;;;9342:3;8910:658;-1:-1:-1;8910:658:22:o;9277:68::-;9356:18;1123:12;9415:22;;9397:15;:40;;;;:::i;:::-;9378:60;;:3;:60;:::i;:::-;9377:74;;;;:::i;:::-;9356:95;;9485:10;9466:15;;:29;9462:45;;-1:-1:-1;9504:3:22;8910:658;-1:-1:-1;8910:658:22:o;9462:45::-;9550:10;9532:15;;:28;;;;:::i;7033:94::-;7081:13;7113:7;7106:14;;;;;:::i;6596:429:3:-;719:10:11;6689:4:3;6770:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6689:4;;719:10:11;6815:35:3;;;;6807:85;;;;;;;5795:2:34;6807:85:3;;;5777:21:34;5834:2;5814:18;;;5807:30;5873:34;5853:18;;;5846:62;5944:7;5924:18;;;5917:35;5969:19;;6807:85:3;;;;;;;;;6926:60;6935:5;6942:7;6970:15;6951:16;:34;6926:8;:60::i;:::-;-1:-1:-1;7014:4:3;;6596:429;-1:-1:-1;;;;6596:429:3:o;3729:189::-;3808:4;719:10:11;3862:28:3;719:10:11;3879:2:3;3883:6;3862:9;:28::i;16432:494:22:-;16525:15;;;;16511:10;:29;16503:38;;;;;;16551:36;16590:26;;;:12;:26;;;;;;;;16551:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16626:40;;:15;:40;;;;;;:68;;16551:65;;;;16626:40;;16551:36;16626:68;;16551:65;;16626:68;:::i;:::-;;;;-1:-1:-1;;16763:22:22;;16799:24;;;;16712:23;;;;16705:128;;:44;;;;;;:128::i;:::-;16849:27;;2115:25:34;;;16849:27:22;;2103:2:34;2088:18;16849:27:22;;;;;;;;-1:-1:-1;16893:26:22;;;;:12;:26;;;;;16886:33;;;;;;;;;;;;;;;;;;;;;;;;16432:494::o;14440:442::-;14634:12;;;;14621:9;:25;;14620:59;;-1:-1:-1;14666:12:22;;;;14652:10;:26;14620:59;14612:68;;;;;;14706:10;:18;;;;;;;;14735:140;;;;;;;;6195:25:34;;;6236:18;;;6229:34;;;6306:14;;6299:22;6279:18;;;6272:50;14756:15:22;;;;;14735:63;;6168:18:34;;14735:140:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14440:442;;;:::o;13118:428::-;13305:12;;;;13292:9;:25;;13291:59;;-1:-1:-1;13337:12:22;;;;13323:10;:26;13291:59;13283:68;;;;;;13377:10;:18;;;;;;;;13406:133;;;;;;;;6195:25:34;;;6236:18;;;6229:34;;;6306:14;;6299:22;6279:18;;;6272:50;13427:15:22;;;;;13406:54;;6168:18:34;;13406:133:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;13118:428;;;:::o;16019:347::-;16108:15;;;;16094:10;:29;16086:38;;;;;;16134:36;16173:26;;;:12;:26;;;;;;;;16134:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16209:40;;:15;:40;;;;;;:68;;16134:65;;;;16209:40;;16134:36;16209:68;;16134:65;;16209:68;:::i;:::-;;;;-1:-1:-1;;16293:23:22;;2115:25:34;;;16293:23:22;;2103:2:34;2088:18;16293:23:22;1969:177:34;10123:370:3;10254:19;;;10246:68;;;;;;;7119:2:34;10246:68:3;;;7101:21:34;7158:2;7138:18;;;7131:30;7197:34;7177:18;;;7170:62;7268:6;7248:18;;;7241:34;7292:19;;10246:68:3;6917:400:34;10246:68:3;10332:21;;;10324:68;;;;;;;7524:2:34;10324:68:3;;;7506:21:34;7563:2;7543:18;;;7536:30;7602:34;7582:18;;;7575:62;7673:4;7653:18;;;7646:32;7695:19;;10324:68:3;7322:398:34;10324:68:3;10403:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10454:32;;2115:25:34;;;10454:32:3;;2088:18:34;10454:32:3;;;;;;;10123:370;;;:::o;10770:441::-;4091:18;;;;10900:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10986:17;10966:37;;10962:243;;11047:6;11027:16;:26;;11019:68;;;;;;;7927:2:34;11019:68:3;;;7909:21:34;7966:2;7946:18;;;7939:30;8005:31;7985:18;;;7978:59;8054:18;;11019:68:3;7725:353:34;11019:68:3;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;7488:651::-;7614:18;;;7606:68;;;;;;;8285:2:34;7606:68:3;;;8267:21:34;8324:2;8304:18;;;8297:30;8363:34;8343:18;;;8336:62;8434:7;8414:18;;;8407:35;8459:19;;7606:68:3;8083:401:34;7606:68:3;7692:16;;;7684:64;;;;;;;8691:2:34;7684:64:3;;;8673:21:34;8730:2;8710:18;;;8703:30;8769:34;8749:18;;;8742:62;8840:5;8820:18;;;8813:33;8863:19;;7684:64:3;8489:399:34;7684:64:3;7830:15;;;7808:19;7830:15;;;;;;;;;;;7863:21;;;;7855:72;;;;;;;9095:2:34;7855:72:3;;;9077:21:34;9134:2;9114:18;;;9107:30;9173:34;9153:18;;;9146:62;9244:8;9224:18;;;9217:36;9270:19;;7855:72:3;8893:402:34;7855:72:3;7961:15;;;;:9;:15;;;;;;;;;;;7979:20;;;7961:38;;8019:13;;;;;;;;:23;;7993:6;;7961:9;8019:23;;7993:6;;8019:23;:::i;:::-;;;;;;;;8073:2;8058:26;;8067:4;8058:26;;;8077:6;8058:26;;;;2115:25:34;;2103:2;2088:18;;1969:177;8058:26:3;;;;;;;;8095:37;701:205:9;;840:58;;;9504:42:34;9492:55;;840:58:9;;;9474:74:34;9564:18;;;;9557:34;;;840:58:9;;;;;;;;;;9447:18:34;;;;840:58:9;;;;;;;;;;863:23;840:58;;;813:86;;833:5;;813:19;:86::i;:::-;701:205;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;3652:27;;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:9;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;;;;9804:2:34;3811:85:9;;;9786:21:34;9843:2;9823:18;;;9816:30;9882:34;9862:18;;;9855:62;9953:12;9933:18;;;9926:40;9983:19;;3811:85:9;9602:406:34;3861:223:10;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:10:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;10215:2:34;5137:81:10;;;10197:21:34;10254:2;10234:18;;;10227:30;10293:34;10273:18;;;10266:62;10364:8;10344:18;;;10337:36;10390:19;;5137:81:10;10013:402:34;5137:81:10;1465:19;;;;5228:60;;;;;;;10622:2:34;5228:60:10;;;10604:21:34;10661:2;10641:18;;;10634:30;10700:31;10680:18;;;10673:59;10749:18;;5228:60:10;10420:353:34;5228:60:10;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:10:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:10;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;;;;;;;;;;:::i;14:180:34:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:34;;14:180;-1:-1:-1;14:180:34:o;602:250::-;687:1;697:113;711:6;708:1;705:13;697:113;;;787:11;;;781:18;768:11;;;761:39;733:2;726:10;697:113;;;-1:-1:-1;;844:1:34;826:16;;819:27;602:250::o;857:455::-;1006:2;995:9;988:21;969:4;1038:6;1032:13;1081:6;1076:2;1065:9;1061:18;1054:34;1097:79;1169:6;1164:2;1153:9;1149:18;1144:2;1136:6;1132:15;1097:79;:::i;:::-;1228:2;1216:15;1233:66;1212:88;1197:104;;;;1303:2;1193:113;;857:455;-1:-1:-1;;857:455:34:o;1317:196::-;1385:20;;1445:42;1434:54;;1424:65;;1414:93;;1503:1;1500;1493:12;1414:93;1317:196;;;:::o;1518:254::-;1586:6;1594;1647:2;1635:9;1626:7;1622:23;1618:32;1615:52;;;1663:1;1660;1653:12;1615:52;1686:29;1705:9;1686:29;:::i;:::-;1676:39;1762:2;1747:18;;;;1734:32;;-1:-1:-1;;;1518:254:34:o;2151:328::-;2228:6;2236;2244;2297:2;2285:9;2276:7;2272:23;2268:32;2265:52;;;2313:1;2310;2303:12;2265:52;2336:29;2355:9;2336:29;:::i;:::-;2326:39;;2384:38;2418:2;2407:9;2403:18;2384:38;:::i;:::-;2374:48;;2469:2;2458:9;2454:18;2441:32;2431:42;;2151:328;;;;;:::o;2484:186::-;2543:6;2596:2;2584:9;2575:7;2571:23;2567:32;2564:52;;;2612:1;2609;2602:12;2564:52;2635:29;2654:9;2635:29;:::i;3095:118::-;3181:5;3174:13;3167:21;3160:5;3157:32;3147:60;;3203:1;3200;3193:12;3147:60;3095:118;:::o;3218:377::-;3292:6;3300;3308;3361:2;3349:9;3340:7;3336:23;3332:32;3329:52;;;3377:1;3374;3367:12;3329:52;3413:9;3400:23;3390:33;;3470:2;3459:9;3455:18;3442:32;3432:42;;3524:2;3513:9;3509:18;3496:32;3537:28;3559:5;3537:28;:::i;:::-;3584:5;3574:15;;;3218:377;;;;;:::o;3600:260::-;3668:6;3676;3729:2;3717:9;3708:7;3704:23;3700:32;3697:52;;;3745:1;3742;3735:12;3697:52;3768:29;3787:9;3768:29;:::i;:::-;3758:39;;3816:38;3850:2;3839:9;3835:18;3816:38;:::i;:::-;3806:48;;3600:260;;;;;:::o;4247:437::-;4326:1;4322:12;;;;4369;;;4390:61;;4444:4;4436:6;4432:17;4422:27;;4390:61;4497:2;4489:6;4486:14;4466:18;4463:38;4460:218;;4534:77;4531:1;4524:88;4635:4;4632:1;4625:15;4663:4;4660:1;4653:15;4460:218;;4247:437;;;:::o;4689:184::-;4741:77;4738:1;4731:88;4838:4;4835:1;4828:15;4862:4;4859:1;4852:15;4878:125;4943:9;;;4964:10;;;4961:36;;;4977:18;;:::i;5008:128::-;5075:9;;;5096:11;;;5093:37;;;5110:18;;:::i;5141:168::-;5214:9;;;5245;;5262:15;;;5256:22;;5242:37;5232:71;;5283:18;;:::i;5314:274::-;5354:1;5380;5370:189;;5415:77;5412:1;5405:88;5516:4;5513:1;5506:15;5544:4;5541:1;5534:15;5370:189;-1:-1:-1;5573:9:34;;5314:274::o;6667:245::-;6734:6;6787:2;6775:9;6766:7;6762:23;6758:32;6755:52;;;6803:1;6800;6793:12;6755:52;6835:9;6829:16;6854:28;6876:5;6854:28;:::i;10778:287::-;10907:3;10945:6;10939:13;10961:66;11020:6;11015:3;11008:4;11000:6;10996:17;10961:66;:::i;:::-;11043:16;;;;;10778:287;-1:-1:-1;;10778:287:34:o",
  "language": "Solidity",
  "natspec": {
    "author": "Catalyst Labs",
    "events": {
      "Deposit(address,uint256,uint256[])": {
        "details": "Explain to a developer any extra details",
        "params": {
          "assets": "An array of the number of deposited assets.",
          "mint": "The number of minted pool tokens credited to _who",
          "who": "The depositor. Is credited with _mints pool tokens."
        }
      },
      "LocalSwap(address,address,address,uint256,uint256,uint256)": {
        "details": "Explain to a developer any extra details",
        "params": {
          "fees": "The pool fee. Taken from the input. Numerical losses/fees are for obvious reasons not included.",
          "fromAsset": "The asset which was sold in exchange for _toAsset",
          "input": "The number of _fromAsset sold",
          "output": "The number of tokens provided to _who",
          "toAsset": "The asset which was purchased with _fromAsset",
          "who": "The user / exchange who facilitated the trade (msg.sender)"
        }
      },
      "SwapFromUnits(address,address,uint256,uint256)": {
        "details": "If _fromAsset is the proxy contract, the swap is a liquidity swap.",
        "params": {
          "input": "The number of units sent from the other chain.",
          "output": "The number of tokens provided to _who",
          "toAsset": "The asset which was purchased with _fromAsset",
          "who": "The recipient of the trade."
        }
      },
      "SwapToUnits(bytes32,bytes32,address,uint8,uint256,uint256,uint256,uint32)": {
        "details": "If _fromAsset is the proxy contract or _toAsset is 2**8-1, the swap is a liquidity swap.",
        "params": {
          "fees": "The pool fee. Taken from the input. Numerical losses/fees are for obvious reasons not included.",
          "fromAsset": "The asset which was sold in exchange for _toAsset.",
          "input": "The number of _fromAsset sold",
          "output": "The calculated number of units bought. Will be sold to buy _toAsset",
          "targetPool": "The target pool.",
          "targetUser": "The recipient of the trade. The person who bought the trade is not present.",
          "toAssetIndex": "The token index of the asset to purchase on _toChain."
        }
      },
      "Withdraw(address,uint256,uint256[])": {
        "details": "Explain to a developer any extra details",
        "params": {
          "assets": "An array of the token amounts returned",
          "burn": "The number of burned pool tokens.",
          "who": "The withdrawer. Is debited _burns pool tokens."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "_balance0(address)": {
        "notice": "Liquidity reference."
      },
      "_escrowedFor(uint256)": {
        "notice": "Escrow storage"
      },
      "_escrowedTokens(address)": {
        "notice": "Escrow storage"
      },
      "_max_unit_inflow()": {
        "notice": "The max incoming liquidity flow from the router."
      },
      "_onlyLocal()": {
        "notice": "If the pool has no cross chain connection, this is true.     Should not be trusted if setupMaster != ZERO_ADDRESS"
      },
      "_setupMaster()": {
        "notice": "The setupMaster is the short-term owner of the pool.     They can connect the pool to pools on other chains."
      },
      "_tokenIndexing(uint256)": {
        "notice": "To indicate which token is desired on the target pool,     the _toAsset is an integer from 0 to NUMASSETS indicating     which asset the pool should purchase with units."
      },
      "_weight(address)": {
        "notice": "The token weights. Used for maintaining a non symmetric pool balance."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "createConnection(bytes32,bytes32,bool)": {
        "details": "if _poolReceiving is an EVM pool, it can be computes as:     Vyper: convert(_poolAddress, bytes32)     Solidity: abi.encode(_poolAddress)     Brownie: brownie.convert.to_bytes(_poolAddress, type_str=\"bytes32\") ! Notice, using tx.origin is not secure. However, it makes it easy to bundle call from an external contract and no assets are at risk because the pool should not be used without setupMaster == ZERO_ADDRESS",
        "notice": "Creates a connection to the pool _poolReceiving on the channel _channelId.",
        "params": {
          "channelId": "The _channelId of the target pool.",
          "poolReceiving": "The bytes32 representation of the target pool",
          "state": "# todo: Should we also set this to True? Aka: should we disable disabling a connection?"
        }
      },
      "createConnectionWithChain(uint256,bytes32,bool)": {
        "details": "if _poolReceiving is an EVM pool, it can be computes as:     Vyper: convert(_poolAddress, bytes32)     Solidity: abi.encode(_poolAddress)     Brownie: brownie.convert.to_bytes(_poolAddress, type_str=\"bytes32\") ! Using tx.origin is not secure. However, it makes it easy to bundle call from an external contract and no assets are at risk because the pool should not be used without setupMaster == ZERO_ADDRESS",
        "notice": "Creates a connection to the pool _poolReceiving using the lookup table of the interface.",
        "params": {
          "chainId": "_chainId of the target pool. The interface will convert the chainId to the correct channelId.",
          "poolReceiving": "The bytes32 representation of the target pool",
          "state": "# todo: Should we also set this to True? Aka: should we disable disabling a connection?"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "finishSetup()": {
        "details": "! Using tx.origin is not secure. However, it makes it easy to bundle call from an external contract and no assets are at risk because the pool should not be used without setupMaster == ZERO_ADDRESS",
        "notice": "Gives up short term ownership of the pool. This makes the pool unstoppable."
      },
      "getLiquidityUnitCapacity()": {
        "notice": "Returns the current cross-chain liquidity unit capacity in terms of the totalSupply. These are not true units but rather the conversion of units to pool tokens."
      },
      "getUnitCapacity()": {
        "notice": "Returns the current cross-chain unit capacity. "
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "ready()": {
        "details": "Just checks if the setup master has been set to ZERO_ADDRESS.     In other words, has finishSetup been called?",
        "notice": "External view function purely used to signal if a pool is safe to use."
      },
      "releaseEscrowACK(uint256)": {
        "notice": "Release the escrowed tokens into the pool.  "
      },
      "releaseEscrowTIMEOUT(uint256)": {
        "notice": "Returned the escrowed tokens to the user "
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "stateVariables": {
      "DECAYRATE": {
        "details": "Needs to be long enough for pool token providers to be notified     of a beach but short enough for volatility to not soft-freeze the pool."
      }
    },
    "title": "Catalyst: The Multi-Chain Swap Pool Base",
    "version": 1
  },
  "offset": [
    368,
    16928
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86F25E4D GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0xDDC71DD1 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0xF2AE725C EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xFF27BD8B EQ PUSH2 0x528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xACD3FAC0 EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xB240CA0B EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xC90DA013 EQ PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x916F65E3 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x916F65E3 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x9ECFBB36 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x86F25E4D EQ PUSH2 0x3DC JUMPI DUP1 PUSH4 0x8C9AA6F7 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x904E0A01 EQ PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24CBC9EE GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x3867E857 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x3867E857 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x374 JUMPI DUP1 PUSH4 0x6DEFBF80 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x24CBC9EE EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x300 JUMPI DUP1 PUSH4 0x32A3385E EQ PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBC350D7 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0xBC350D7 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x24351D57 EQ PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23AAE47 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x26C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21B PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND SWAP3 SWAP2 AND DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25F PUSH2 0x53B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x27F PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24E JUMP JUMPDEST PUSH2 0x297 PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x297 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x16E3 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24E JUMP JUMPDEST PUSH2 0x297 PUSH2 0x31D CALLDATASIZE PUSH1 0x4 PUSH2 0x171F JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x34F SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24E JUMP JUMPDEST PUSH2 0x27F PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x688 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x27F JUMP JUMPDEST PUSH2 0x297 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x171F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x3E4 PUSH2 0x6D4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x297 PUSH2 0x790 JUMP JUMPDEST PUSH2 0x34F PUSH2 0x3FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1602 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x297 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x80E JUMP JUMPDEST PUSH2 0x297 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x27F PUSH2 0x44C CALLDATASIZE PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x81D JUMP JUMPDEST PUSH2 0x27F PUSH2 0x45F CALLDATASIZE PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST PUSH2 0x8FE JUMP JUMPDEST PUSH2 0x3E4 PUSH2 0x472 CALLDATASIZE PUSH1 0x4 PUSH2 0x1602 JUMP JUMPDEST PUSH2 0x90C JUMP JUMPDEST PUSH2 0x3E4 PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x174B JUMP JUMPDEST PUSH2 0xA4D JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x34F SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x297 PUSH2 0x4B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1784 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x27F SWAP1 PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x3E4 PUSH2 0x523 CALLDATASIZE PUSH1 0x4 PUSH2 0x174B JUMP JUMPDEST PUSH2 0xB52 JUMP JUMPDEST PUSH2 0x3E4 PUSH2 0x536 CALLDATASIZE PUSH1 0x4 PUSH2 0x1602 JUMP JUMPDEST PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x15 DUP1 SLOAD PUSH2 0x54A SWAP1 PUSH2 0x17B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x576 SWAP1 PUSH2 0x17B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x598 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5A6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5DB DUP2 DUP6 DUP6 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xE SLOAD PUSH1 0x0 SWAP2 SWAP1 PUSH2 0x5FE SWAP1 PUSH3 0x15180 PUSH2 0x1839 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x60A JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15180 PUSH1 0xE SLOAD TIMESTAMP PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x184C JUMP JUMPDEST PUSH2 0x628 SWAP1 DUP5 PUSH2 0x185F JUMP JUMPDEST PUSH2 0x632 SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD GT PUSH2 0x643 JUMPI POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xD SLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x184C JUMP JUMPDEST PUSH2 0x65B SWAP1 DUP4 PUSH2 0x184C JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x670 DUP6 DUP3 DUP6 PUSH2 0xEE0 JUMP JUMPDEST PUSH2 0x67B DUP6 DUP6 DUP6 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x5DB SWAP1 DUP3 SWAP1 DUP7 SWAP1 PUSH2 0x6CF SWAP1 DUP8 SWAP1 PUSH2 0x1839 JUMP JUMPDEST PUSH2 0xD2D JUMP JUMPDEST PUSH1 0xB SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN EQ DUP1 PUSH2 0x711 JUMPI POP PUSH1 0xB SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH21 0x10000000000000000000000000000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x766 JUMPI PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH2 0x79E PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST SWAP1 POP PUSH1 0x10 SLOAD PUSH3 0x15180 PUSH2 0x7BB SWAP2 SWAP1 PUSH2 0x1839 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x7C7 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x15180 PUSH1 0x10 SLOAD TIMESTAMP PUSH2 0x7DB SWAP2 SWAP1 PUSH2 0x184C JUMP JUMPDEST PUSH2 0x7E5 SWAP1 DUP5 PUSH2 0x185F JUMP JUMPDEST PUSH2 0x7EF SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xF SLOAD GT PUSH2 0x800 JUMPI POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0xF SLOAD PUSH2 0x651 SWAP2 SWAP1 PUSH2 0x184C JUMP JUMPDEST PUSH1 0x60 PUSH1 0x16 DUP1 SLOAD PUSH2 0x54A SWAP1 PUSH2 0x17B7 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 DUP4 DUP2 LT ISZERO PUSH2 0x8E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F3 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xD2D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5DB DUP2 DUP6 DUP6 PUSH2 0xFB1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0x930 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD AND DUP2 DUP5 ADD DUP2 SWAP1 MSTORE DUP6 MSTORE PUSH1 0x11 SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x99B SWAP1 DUP5 SWAP1 PUSH2 0x184C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x9CE SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP2 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x2ED3176C48E2338524348CC2055ADB2C2D41E9022E0A6A18D843C9ED5BE9A3A3 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x2 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN EQ DUP1 PUSH2 0xA8A JUMPI POP PUSH1 0xB SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0xA93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x92A9BDB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x92A9BDB3 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN EQ DUP1 PUSH2 0xB8F JUMPI POP PUSH1 0xB SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ JUMPDEST PUSH2 0xB98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0xCEC8A39500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE DUP3 ISZERO ISZERO PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0xCEC8A395 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC63 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER EQ PUSH2 0xC8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP7 ADD DUP2 SWAP1 MSTORE PUSH1 0x2 SWAP1 SWAP4 ADD SLOAD AND DUP2 DUP5 ADD DUP2 SWAP1 MSTORE DUP6 MSTORE PUSH1 0x11 SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xCF8 SWAP1 DUP5 SWAP1 PUSH2 0x184C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0x44898AB65AFFAD4F975E5A33A5F62FC75A177F6E222DA2585627711F4B0F50F5 SWAP1 PUSH1 0x20 ADD PUSH2 0x9FA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0xDCF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xE72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xC63 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xFA4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH2 0xC63 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xD2D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH2 0x1054 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x10F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x11AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x11F1 SWAP1 DUP5 SWAP1 PUSH2 0x1839 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x1257 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xC63 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 OR SWAP1 MSTORE PUSH2 0x12F1 SWAP1 DUP5 SWAP1 PUSH2 0x12F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1358 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1402 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x12F1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1376 SWAP2 SWAP1 PUSH2 0x18B1 JUMP JUMPDEST PUSH2 0x12F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1411 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1419 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x14AB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x1529 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1552 SWAP2 SWAP1 PUSH2 0x18CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x158F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1594 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x15A4 DUP3 DUP3 DUP7 PUSH2 0x15AF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x15BE JUMPI POP DUP2 PUSH2 0x681 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x15CE JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DD SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1636 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x161E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x165E DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x161B JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x16B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16D5 DUP4 PUSH2 0x1690 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1701 DUP5 PUSH2 0x1690 JUMP JUMPDEST SWAP3 POP PUSH2 0x170F PUSH1 0x20 DUP6 ADD PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1731 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x681 DUP3 PUSH2 0x1690 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1760 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x1779 DUP2 PUSH2 0x173A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1797 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17A0 DUP4 PUSH2 0x1690 JUMP JUMPDEST SWAP2 POP PUSH2 0x17AE PUSH1 0x20 DUP5 ADD PUSH2 0x1690 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1804 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x5E1 JUMPI PUSH2 0x5E1 PUSH2 0x180A JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x5E1 JUMPI PUSH2 0x5E1 PUSH2 0x180A JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x5E1 JUMPI PUSH2 0x5E1 PUSH2 0x180A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18AC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x681 DUP2 PUSH2 0x173A JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x18E0 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x161B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT PUSH23 0x681FF205F95117123B5548B137551414FEE58F7960A7B1 0x2E 0x4D REVERT EXTCODEHASH PUSH30 0x17FB64736F6C634300081100330000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "5": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "CALLVALUE",
      "path": "22"
    },
    "6": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "7": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "8": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "12": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "REVERT",
      "path": "22"
    },
    "16": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "17": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "POP",
      "path": "22"
    },
    "18": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "21": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "LT",
      "path": "22"
    },
    "22": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1CF"
    },
    "25": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "26": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "CALLDATALOAD",
      "path": "22"
    },
    "29": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "SHR",
      "path": "22"
    },
    "32": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "33": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x86F25E4D"
    },
    "38": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "GT",
      "path": "22"
    },
    "39": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x104"
    },
    "42": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "43": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "44": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA9059CBB"
    },
    "49": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "GT",
      "path": "22"
    },
    "50": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA2"
    },
    "53": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "54": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "55": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xDD62ED3E"
    },
    "60": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "GT",
      "path": "22"
    },
    "61": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "65": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "66": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "72": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4AA"
    },
    "75": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "76": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "77": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xDDC71DD1"
    },
    "82": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "83": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x4F0"
    },
    "86": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "87": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "88": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xF2AE725C"
    },
    "93": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "94": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x515"
    },
    "97": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "98": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "99": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xFF27BD8B"
    },
    "104": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "105": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x528"
    },
    "108": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "109": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "112": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "REVERT",
      "path": "22"
    },
    "113": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "114": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "115": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA9059CBB"
    },
    "120": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "121": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x451"
    },
    "124": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "125": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "126": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xACD3FAC0"
    },
    "131": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "132": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x464"
    },
    "135": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "136": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "137": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xB240CA0B"
    },
    "142": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "143": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x477"
    },
    "146": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "147": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "148": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xC90DA013"
    },
    "153": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "154": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x48A"
    },
    "157": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "158": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "161": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "REVERT",
      "path": "22"
    },
    "162": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "163": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "164": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x916F65E3"
    },
    "169": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "GT",
      "path": "22"
    },
    "170": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "174": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "175": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x916F65E3"
    },
    "180": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "181": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x424"
    },
    "184": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "185": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "186": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95D89B41"
    },
    "191": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "192": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x42D"
    },
    "195": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "196": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "197": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x9ECFBB36"
    },
    "202": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "203": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x435"
    },
    "206": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "207": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "208": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xA457C2D7"
    },
    "213": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "214": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x43E"
    },
    "217": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "218": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "220": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "221": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "REVERT",
      "path": "22"
    },
    "222": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "223": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "224": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x86F25E4D"
    },
    "229": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "230": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3DC"
    },
    "233": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "234": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "235": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x8C9AA6F7"
    },
    "240": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "241": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E6"
    },
    "244": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "245": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "246": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x904E0A01"
    },
    "251": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "252": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3EE"
    },
    "255": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "256": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "258": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "259": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "REVERT",
      "path": "22"
    },
    "260": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "261": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "262": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x24CBC9EE"
    },
    "267": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "GT",
      "path": "22"
    },
    "268": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x171"
    },
    "271": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "272": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "273": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3867E857"
    },
    "278": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "GT",
      "path": "22"
    },
    "279": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x14B"
    },
    "282": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "283": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "284": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x3867E857"
    },
    "289": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "290": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x32F"
    },
    "293": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "294": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "295": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x39509351"
    },
    "300": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "301": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x374"
    },
    "304": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "305": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "306": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6DEFBF80"
    },
    "311": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "312": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x387"
    },
    "315": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "316": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "317": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x70A08231"
    },
    "322": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "323": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3A6"
    },
    "326": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "327": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "329": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "330": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "REVERT",
      "path": "22"
    },
    "331": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "332": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "333": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x24CBC9EE"
    },
    "338": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "339": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2E0"
    },
    "342": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "343": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "344": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x313CE567"
    },
    "349": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "350": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x300"
    },
    "353": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "354": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "355": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x32A3385E"
    },
    "360": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "361": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x30F"
    },
    "364": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "365": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "367": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "368": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "REVERT",
      "path": "22"
    },
    "369": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "370": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "371": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xBC350D7"
    },
    "376": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "GT",
      "path": "22"
    },
    "377": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1AD"
    },
    "380": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "381": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "382": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xBC350D7"
    },
    "387": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "388": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x28F"
    },
    "391": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "392": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "393": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x18160DDD"
    },
    "398": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "399": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2A5"
    },
    "402": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "403": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "404": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23B872DD"
    },
    "409": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "410": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2AD"
    },
    "413": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "414": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "415": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x24351D57"
    },
    "420": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "421": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2C0"
    },
    "424": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "425": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "427": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "428": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "REVERT",
      "path": "22"
    },
    "429": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "430": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "431": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x23AAE47"
    },
    "436": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "437": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1D4"
    },
    "440": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "441": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "442": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x6FDDE03"
    },
    "447": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "448": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x257"
    },
    "451": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "452": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "453": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x95EA7B3"
    },
    "458": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "EQ",
      "path": "22"
    },
    "459": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x26C"
    },
    "462": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "463": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "464": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "466": {
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "DUP1",
      "path": "22"
    },
    "467": {
      "first_revert": true,
      "fn": null,
      "offset": [
        368,
        16928
      ],
      "op": "REVERT",
      "path": "22"
    },
    "468": {
      "offset": [
        6594,
        6645
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "469": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x21B"
    },
    "472": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1E2"
    },
    "475": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "476": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "478": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1602"
    },
    "481": {
      "fn": null,
      "jump": "i",
      "offset": [
        6594,
        6645
      ],
      "op": "JUMP",
      "path": "22"
    },
    "482": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "483": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x12"
    },
    "485": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "487": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "488": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "490": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "491": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "DUP2",
      "path": "22"
    },
    "492": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "493": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "495": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "496": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "497": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "DUP1",
      "path": "22"
    },
    "498": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "499": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "501": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "DUP3",
      "path": "22"
    },
    "502": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "ADD",
      "path": "22"
    },
    "503": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "504": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "506": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "507": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "508": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "ADD",
      "path": "22"
    },
    "509": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "510": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "531": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "532": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "DUP3",
      "path": "22"
    },
    "533": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "AND",
      "path": "22"
    },
    "534": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "535": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "536": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "AND",
      "path": "22"
    },
    "537": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "DUP4",
      "path": "22"
    },
    "538": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "JUMP",
      "path": "22"
    },
    "539": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "540": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "542": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "DUP1",
      "path": "22"
    },
    "543": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "544": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "565": {
      "op": "SWAP5"
    },
    "566": {
      "op": "DUP6"
    },
    "567": {
      "op": "AND"
    },
    "568": {
      "op": "DUP2"
    },
    "569": {
      "op": "MSTORE"
    },
    "570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "572": {
      "op": "DUP2"
    },
    "573": {
      "op": "ADD"
    },
    "574": {
      "op": "SWAP4"
    },
    "575": {
      "op": "SWAP1"
    },
    "576": {
      "op": "SWAP4"
    },
    "577": {
      "op": "MSTORE"
    },
    "578": {
      "op": "SWAP3"
    },
    "579": {
      "op": "AND"
    },
    "580": {
      "op": "SWAP2"
    },
    "581": {
      "op": "DUP2"
    },
    "582": {
      "op": "ADD"
    },
    "583": {
      "op": "SWAP2"
    },
    "584": {
      "op": "SWAP1"
    },
    "585": {
      "op": "SWAP2"
    },
    "586": {
      "op": "MSTORE"
    },
    "587": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "589": {
      "op": "ADD"
    },
    "590": {
      "offset": [
        6594,
        6645
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "591": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "593": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "594": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "DUP1",
      "path": "22"
    },
    "595": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "596": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "SUB",
      "path": "22"
    },
    "597": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "598": {
      "fn": null,
      "offset": [
        6594,
        6645
      ],
      "op": "RETURN",
      "path": "22"
    },
    "599": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        6937,
        7027
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "600": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        6937,
        7027
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25F"
    },
    "603": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        6937,
        7027
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x53B"
    },
    "606": {
      "fn": "CatalystSwapPoolCore.name",
      "jump": "i",
      "offset": [
        6937,
        7027
      ],
      "op": "JUMP",
      "path": "22"
    },
    "607": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        6937,
        7027
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "608": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        6937,
        7027
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "610": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        6937,
        7027
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "611": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        6937,
        7027
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24E"
    },
    "614": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        6937,
        7027
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "615": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        6937,
        7027
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "616": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        6937,
        7027
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x163F"
    },
    "619": {
      "fn": "CatalystSwapPoolCore.name",
      "jump": "i",
      "offset": [
        6937,
        7027
      ],
      "op": "JUMP",
      "path": "22"
    },
    "620": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "621": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27F"
    },
    "624": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27A"
    },
    "627": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "628": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "630": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16B9"
    },
    "633": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "3"
    },
    "634": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "635": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5CD"
    },
    "638": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "3"
    },
    "639": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "640": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "642": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "643": {
      "op": "SWAP1"
    },
    "644": {
      "op": "ISZERO"
    },
    "645": {
      "op": "ISZERO"
    },
    "646": {
      "op": "DUP2"
    },
    "647": {
      "op": "MSTORE"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "650": {
      "op": "ADD"
    },
    "651": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24E"
    },
    "654": {
      "op": "JUMP"
    },
    "655": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8064,
        8698
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "656": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8064,
        8698
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x297"
    },
    "659": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8064,
        8698
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5E7"
    },
    "662": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "jump": "i",
      "offset": [
        8064,
        8698
      ],
      "op": "JUMP",
      "path": "22"
    },
    "663": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8064,
        8698
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "664": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8064,
        8698
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "666": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8064,
        8698
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "667": {
      "op": "SWAP1"
    },
    "668": {
      "op": "DUP2"
    },
    "669": {
      "op": "MSTORE"
    },
    "670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "672": {
      "op": "ADD"
    },
    "673": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8064,
        8698
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24E"
    },
    "676": {
      "op": "JUMP"
    },
    "677": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "678": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x2"
    },
    "680": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "681": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x297"
    },
    "684": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "3"
    },
    "685": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "686": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27F"
    },
    "689": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BB"
    },
    "692": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "693": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "695": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16E3"
    },
    "698": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "3"
    },
    "699": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "700": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x662"
    },
    "703": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "3"
    },
    "704": {
      "offset": [
        6507,
        6557
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "705": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x297"
    },
    "708": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2CE"
    },
    "711": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "712": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "714": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x171F"
    },
    "717": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        6507,
        6557
      ],
      "op": "JUMP",
      "path": "22"
    },
    "718": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "719": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x11"
    },
    "721": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "723": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "724": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "726": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "727": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "DUP2",
      "path": "22"
    },
    "728": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "729": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "731": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "732": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "733": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "734": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "DUP2",
      "path": "22"
    },
    "735": {
      "fn": "ERC20.transferFrom",
      "offset": [
        6507,
        6557
      ],
      "op": "JUMP",
      "path": "22"
    },
    "736": {
      "offset": [
        5200,
        5244
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "737": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x297"
    },
    "740": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x2EE"
    },
    "743": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "744": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "746": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x171F"
    },
    "749": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5200,
        5244
      ],
      "op": "JUMP",
      "path": "22"
    },
    "750": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "751": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x7"
    },
    "753": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "755": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "756": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "758": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "759": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "DUP2",
      "path": "22"
    },
    "760": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "761": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "763": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "764": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "765": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "766": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "DUP2",
      "path": "22"
    },
    "767": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5200,
        5244
      ],
      "op": "JUMP",
      "path": "22"
    },
    "768": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        7133,
        7216
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "769": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        7133,
        7216
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "771": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        7133,
        7216
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "772": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        7207,
        7209
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 1,
      "value": "0x12"
    },
    "774": {
      "op": "DUP2"
    },
    "775": {
      "op": "MSTORE"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "778": {
      "op": "ADD"
    },
    "779": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        7133,
        7216
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24E"
    },
    "782": {
      "op": "JUMP"
    },
    "783": {
      "offset": [
        5337,
        5379
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "784": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x297"
    },
    "787": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x31D"
    },
    "790": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "791": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "793": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x171F"
    },
    "796": {
      "fn": "CatalystSwapPoolCore.decimals",
      "jump": "i",
      "offset": [
        5337,
        5379
      ],
      "op": "JUMP",
      "path": "22"
    },
    "797": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "798": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x8"
    },
    "800": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "802": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "803": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "805": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "806": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "DUP2",
      "path": "22"
    },
    "807": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "808": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "810": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "811": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "812": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "813": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "DUP2",
      "path": "22"
    },
    "814": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        5337,
        5379
      ],
      "op": "JUMP",
      "path": "22"
    },
    "815": {
      "offset": [
        4670,
        4700
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "816": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        4670,
        4700
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "818": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        4670,
        4700
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "819": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        4670,
        4700
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x34F"
    },
    "822": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        4670,
        4700
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "823": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        4670,
        4700
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "844": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        4670,
        4700
      ],
      "op": "AND",
      "path": "22"
    },
    "845": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        4670,
        4700
      ],
      "op": "DUP2",
      "path": "22"
    },
    "846": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        4670,
        4700
      ],
      "op": "JUMP",
      "path": "22"
    },
    "847": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        4670,
        4700
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "848": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        4670,
        4700
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "850": {
      "fn": "CatalystSwapPoolCore.decimals",
      "offset": [
        4670,
        4700
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "851": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "872": {
      "op": "SWAP1"
    },
    "873": {
      "op": "SWAP2"
    },
    "874": {
      "op": "AND"
    },
    "875": {
      "op": "DUP2"
    },
    "876": {
      "op": "MSTORE"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "879": {
      "op": "ADD"
    },
    "880": {
      "offset": [
        4670,
        4700
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x24E"
    },
    "883": {
      "op": "JUMP"
    },
    "884": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "885": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27F"
    },
    "888": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x382"
    },
    "891": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "892": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "894": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16B9"
    },
    "897": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "3"
    },
    "898": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "899": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x688"
    },
    "902": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMP",
      "path": "3"
    },
    "903": {
      "fn": "CatalystSwapPoolCore.ready",
      "offset": [
        15822,
        15918
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "904": {
      "fn": "CatalystSwapPoolCore.ready",
      "offset": [
        15885,
        15897
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 2,
      "value": "0xB"
    },
    "906": {
      "fn": "CatalystSwapPoolCore.ready",
      "offset": [
        15885,
        15897
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "907": {
      "fn": "CatalystSwapPoolCore.ready",
      "offset": [
        15885,
        15911
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "928": {
      "fn": "CatalystSwapPoolCore.ready",
      "offset": [
        15885,
        15897
      ],
      "op": "AND",
      "path": "22"
    },
    "929": {
      "fn": "CatalystSwapPoolCore.ready",
      "offset": [
        15885,
        15911
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "930": {
      "fn": "CatalystSwapPoolCore.ready",
      "offset": [
        15822,
        15918
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27F"
    },
    "933": {
      "fn": "CatalystSwapPoolCore.ready",
      "offset": [
        15822,
        15918
      ],
      "op": "JUMP",
      "path": "22"
    },
    "934": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "935": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x297"
    },
    "938": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B4"
    },
    "941": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "942": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "944": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x171F"
    },
    "947": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "948": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "949": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH20",
      "path": "3",
      "statement": 3,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "970": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "AND",
      "path": "3"
    },
    "971": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3482,
        3489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "973": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "974": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "3"
    },
    "975": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "976": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "978": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "DUP2",
      "path": "3"
    },
    "979": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "980": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "981": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "983": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "984": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "985": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "986": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3508,
        3526
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "987": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3408,
        3533
      ],
      "op": "JUMP",
      "path": "3"
    },
    "988": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15226,
        15562
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "989": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15226,
        15562
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E4"
    },
    "992": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15226,
        15562
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x6D4"
    },
    "995": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "jump": "i",
      "offset": [
        15226,
        15562
      ],
      "op": "JUMP",
      "path": "22"
    },
    "996": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15226,
        15562
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "997": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15226,
        15562
      ],
      "op": "STOP",
      "path": "22"
    },
    "998": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        8910,
        9568
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "999": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        8910,
        9568
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x297"
    },
    "1002": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        8910,
        9568
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x790"
    },
    "1005": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "jump": "i",
      "offset": [
        8910,
        9568
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1006": {
      "offset": [
        5107,
        5156
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1007": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x34F"
    },
    "1010": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3FC"
    },
    "1013": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1014": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1016": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1602"
    },
    "1019": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "jump": "i",
      "offset": [
        5107,
        5156
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1020": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1021": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x6"
    },
    "1023": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1025": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1026": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1028": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1029": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1030": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1031": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1033": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1034": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1035": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1036": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1057": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "AND",
      "path": "22"
    },
    "1058": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1059": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        5107,
        5156
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1060": {
      "offset": [
        6231,
        6262
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1061": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x297"
    },
    "1064": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        6231,
        6262
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "1066": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        6231,
        6262
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1067": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        6231,
        6262
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1068": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        6231,
        6262
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1069": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        7033,
        7127
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1070": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        7033,
        7127
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x25F"
    },
    "1073": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        7033,
        7127
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x80E"
    },
    "1076": {
      "fn": "CatalystSwapPoolCore.symbol",
      "jump": "i",
      "offset": [
        7033,
        7127
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1077": {
      "offset": [
        5385,
        5411
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1078": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        5385,
        5411
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x297"
    },
    "1081": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        5385,
        5411
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x9"
    },
    "1083": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        5385,
        5411
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1084": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        5385,
        5411
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1085": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        5385,
        5411
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1086": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1087": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27F"
    },
    "1090": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44C"
    },
    "1093": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1094": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1096": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16B9"
    },
    "1099": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1100": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1101": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x81D"
    },
    "1104": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1105": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1106": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27F"
    },
    "1109": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x45F"
    },
    "1112": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1113": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1115": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x16B9"
    },
    "1118": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1119": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1120": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8FE"
    },
    "1123": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1124": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16432,
        16926
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1125": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16432,
        16926
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E4"
    },
    "1128": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16432,
        16926
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x472"
    },
    "1131": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16432,
        16926
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1132": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16432,
        16926
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1134": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16432,
        16926
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1602"
    },
    "1137": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "jump": "i",
      "offset": [
        16432,
        16926
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1138": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16432,
        16926
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1139": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16432,
        16926
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x90C"
    },
    "1142": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "jump": "i",
      "offset": [
        16432,
        16926
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1143": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14440,
        14882
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1144": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14440,
        14882
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E4"
    },
    "1147": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14440,
        14882
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x485"
    },
    "1150": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14440,
        14882
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1151": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14440,
        14882
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1153": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14440,
        14882
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x174B"
    },
    "1156": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "jump": "i",
      "offset": [
        14440,
        14882
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1157": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14440,
        14882
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1158": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14440,
        14882
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA4D"
    },
    "1161": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "jump": "i",
      "offset": [
        14440,
        14882
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1162": {
      "offset": [
        5676,
        5703
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1163": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        5676,
        5703
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1165": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        5676,
        5703
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1166": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        5676,
        5703
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x34F"
    },
    "1169": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        5676,
        5703
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1170": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        5676,
        5703
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1191": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        5676,
        5703
      ],
      "op": "AND",
      "path": "22"
    },
    "1192": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        5676,
        5703
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1193": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        5676,
        5703
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1194": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1195": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x297"
    },
    "1198": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4B8"
    },
    "1201": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1202": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1204": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1784"
    },
    "1207": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1208": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1209": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH20",
      "path": "3",
      "statement": 4,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1230": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1231": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1232": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "3"
    },
    "1233": {
      "fn": "ERC20.allowance",
      "offset": [
        4065,
        4072
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1235": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1236": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1237": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1238": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1240": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1242": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1243": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1244": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1245": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1247": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1248": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1249": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1250": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1251": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1252": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1253": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "3"
    },
    "1254": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1255": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1256": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1257": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1258": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1259": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1260": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1261": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1262": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1263": {
      "fn": "ERC20.allowance",
      "offset": [
        3976,
        4125
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1264": {
      "offset": [
        4857,
        4886
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1265": {
      "fn": "ERC20.allowance",
      "offset": [
        4857,
        4886
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "1267": {
      "fn": "ERC20.allowance",
      "offset": [
        4857,
        4886
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1268": {
      "fn": "ERC20.allowance",
      "offset": [
        4857,
        4886
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x27F"
    },
    "1271": {
      "fn": "ERC20.allowance",
      "offset": [
        4857,
        4886
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1272": {
      "fn": "ERC20.allowance",
      "offset": [
        4857,
        4886
      ],
      "op": "PUSH21",
      "path": "22",
      "value": "0x10000000000000000000000000000000000000000"
    },
    "1294": {
      "fn": "ERC20.allowance",
      "offset": [
        4857,
        4886
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1295": {
      "fn": "ERC20.allowance",
      "offset": [
        4857,
        4886
      ],
      "op": "DIV",
      "path": "22"
    },
    "1296": {
      "fn": "ERC20.allowance",
      "offset": [
        4857,
        4886
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "1298": {
      "fn": "ERC20.allowance",
      "offset": [
        4857,
        4886
      ],
      "op": "AND",
      "path": "22"
    },
    "1299": {
      "fn": "ERC20.allowance",
      "offset": [
        4857,
        4886
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1300": {
      "fn": "ERC20.allowance",
      "offset": [
        4857,
        4886
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1301": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13118,
        13546
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1302": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13118,
        13546
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E4"
    },
    "1305": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13118,
        13546
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x523"
    },
    "1308": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13118,
        13546
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1309": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13118,
        13546
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1311": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13118,
        13546
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x174B"
    },
    "1314": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "jump": "i",
      "offset": [
        13118,
        13546
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1315": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13118,
        13546
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1316": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13118,
        13546
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB52"
    },
    "1319": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "jump": "i",
      "offset": [
        13118,
        13546
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1320": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16019,
        16366
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1321": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16019,
        16366
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x3E4"
    },
    "1324": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16019,
        16366
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x536"
    },
    "1327": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16019,
        16366
      ],
      "op": "CALLDATASIZE",
      "path": "22"
    },
    "1328": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16019,
        16366
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "1330": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16019,
        16366
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1602"
    },
    "1333": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "jump": "i",
      "offset": [
        16019,
        16366
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1334": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16019,
        16366
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1335": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16019,
        16366
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC69"
    },
    "1338": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "jump": "i",
      "offset": [
        16019,
        16366
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1339": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        6937,
        7027
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1340": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        6983,
        6996
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "1342": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7015,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 5,
      "value": "0x15"
    },
    "1344": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1345": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1346": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x54A"
    },
    "1349": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1350": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17B7"
    },
    "1353": {
      "fn": "CatalystSwapPoolCore.name",
      "jump": "i",
      "offset": [
        7008,
        7020
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1354": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1355": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1356": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "1358": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "ADD",
      "path": "22"
    },
    "1359": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1361": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1362": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1363": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DIV",
      "path": "22"
    },
    "1364": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "MUL",
      "path": "22"
    },
    "1365": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1367": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "ADD",
      "path": "22"
    },
    "1368": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1370": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1371": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1372": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1373": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "ADD",
      "path": "22"
    },
    "1374": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1376": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1377": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1378": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1379": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1380": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1381": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1382": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1383": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1384": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1386": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "ADD",
      "path": "22"
    },
    "1387": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1388": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1389": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1390": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x576"
    },
    "1393": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1394": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17B7"
    },
    "1397": {
      "fn": "CatalystSwapPoolCore.name",
      "jump": "i",
      "offset": [
        7008,
        7020
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1398": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1399": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1400": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1401": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5C3"
    },
    "1404": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1405": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1406": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "1408": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "LT",
      "path": "22"
    },
    "1409": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x598"
    },
    "1412": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1413": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "1416": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1417": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1418": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1419": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DIV",
      "path": "22"
    },
    "1420": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "MUL",
      "path": "22"
    },
    "1421": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1422": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1423": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1424": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1426": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "ADD",
      "path": "22"
    },
    "1427": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1428": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5C3"
    },
    "1431": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1432": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1433": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1434": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "ADD",
      "path": "22"
    },
    "1435": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1436": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1437": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1439": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1440": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1442": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1444": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "1445": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1446": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1447": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1448": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1449": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1450": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1451": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1452": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "1454": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "ADD",
      "path": "22"
    },
    "1455": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1456": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1458": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "ADD",
      "path": "22"
    },
    "1459": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1460": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1461": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "GT",
      "path": "22"
    },
    "1462": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5A6"
    },
    "1465": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1466": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1467": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1468": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SUB",
      "path": "22"
    },
    "1469": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "1471": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "AND",
      "path": "22"
    },
    "1472": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1473": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "ADD",
      "path": "22"
    },
    "1474": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1475": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1476": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "POP",
      "path": "22"
    },
    "1477": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "POP",
      "path": "22"
    },
    "1478": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "POP",
      "path": "22"
    },
    "1479": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "POP",
      "path": "22"
    },
    "1480": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "POP",
      "path": "22"
    },
    "1481": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1482": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        7008,
        7020
      ],
      "op": "POP",
      "path": "22"
    },
    "1483": {
      "fn": "CatalystSwapPoolCore.name",
      "offset": [
        6937,
        7027
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1484": {
      "fn": "CatalystSwapPoolCore.name",
      "jump": "o",
      "offset": [
        6937,
        7027
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1485": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1486": {
      "fn": "ERC20.approve",
      "offset": [
        4516,
        4520
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1488": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11",
      "statement": 6
    },
    "1489": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 7,
      "value": "0x5DB"
    },
    "1492": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "11"
    },
    "1493": {
      "fn": "ERC20.approve",
      "offset": [
        4586,
        4593
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1494": {
      "fn": "ERC20.approve",
      "offset": [
        4595,
        4601
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1495": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4578
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD2D"
    },
    "1498": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1499": {
      "fn": "ERC20.approve",
      "offset": [
        4570,
        4602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1500": {
      "fn": "ERC20.approve",
      "offset": [
        4619,
        4623
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 8,
      "value": "0x1"
    },
    "1502": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1503": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "3"
    },
    "1504": {
      "fn": "ERC20.approve",
      "offset": [
        4612,
        4623
      ],
      "op": "POP",
      "path": "3"
    },
    "1505": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1506": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1507": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1508": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "3"
    },
    "1509": {
      "fn": "ERC20.approve",
      "offset": [
        4433,
        4630
      ],
      "op": "POP",
      "path": "3"
    },
    "1510": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4433,
        4630
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1511": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8064,
        8698
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1512": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8147,
        8163
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xC"
    },
    "1514": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8147,
        8163
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1515": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8331,
        8343
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "1517": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8331,
        8343
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1518": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8114,
        8121
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1520": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8114,
        8121
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1521": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8147,
        8163
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1522": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8319,
        8343
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x5FE"
    },
    "1525": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8319,
        8343
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1526": {
      "offset": [
        1123,
        1135
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x15180"
    },
    "1530": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8319,
        8343
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1839"
    },
    "1533": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "jump": "i",
      "offset": [
        8319,
        8343
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1534": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8319,
        8343
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1535": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8301,
        8316
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "1536": {
      "branch": 63,
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8301,
        8343
      ],
      "op": "GT",
      "path": "22"
    },
    "1537": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8297,
        8355
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1538": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8297,
        8355
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x60A"
    },
    "1541": {
      "branch": 63,
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8297,
        8355
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1542": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8352,
        8355
      ],
      "op": "SWAP2",
      "path": "22",
      "statement": 9
    },
    "1543": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8064,
        8698
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1544": {
      "op": "POP"
    },
    "1545": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "jump": "o",
      "offset": [
        8064,
        8698
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1546": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8297,
        8355
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1547": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8452,
        8470
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1549": {
      "offset": [
        1123,
        1135
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x15180"
    },
    "1553": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8499,
        8511
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xE"
    },
    "1555": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8499,
        8511
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1556": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8481,
        8496
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "1557": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8481,
        8511
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x61E"
    },
    "1560": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8481,
        8511
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1561": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8481,
        8511
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1562": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8481,
        8511
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x184C"
    },
    "1565": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "jump": "i",
      "offset": [
        8481,
        8511
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1566": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8481,
        8511
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1567": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8474,
        8512
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x628"
    },
    "1570": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8474,
        8512
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1571": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8474,
        8477
      ],
      "op": "DUP5",
      "path": "22"
    },
    "1572": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8474,
        8512
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x185F"
    },
    "1575": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "jump": "i",
      "offset": [
        8474,
        8512
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1576": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8474,
        8512
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1577": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8473,
        8537
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x632"
    },
    "1580": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8473,
        8537
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1581": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8473,
        8537
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1582": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8473,
        8537
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1876"
    },
    "1585": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "jump": "i",
      "offset": [
        8473,
        8537
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1586": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8473,
        8537
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1587": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8452,
        8537
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1588": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8452,
        8537
      ],
      "op": "POP",
      "path": "22"
    },
    "1589": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8566,
        8576
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1590": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8552,
        8562
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "1592": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8552,
        8562
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1593": {
      "branch": 64,
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8552,
        8576
      ],
      "op": "GT",
      "path": "22"
    },
    "1594": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8548,
        8588
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x643"
    },
    "1597": {
      "branch": 64,
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8548,
        8588
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1598": {
      "op": "POP"
    },
    "1599": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8585,
        8588
      ],
      "op": "SWAP2",
      "path": "22",
      "statement": 10
    },
    "1600": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8064,
        8698
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1601": {
      "op": "POP"
    },
    "1602": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "jump": "o",
      "offset": [
        8064,
        8698
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1603": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8548,
        8588
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1604": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8680,
        8690
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 11
    },
    "1605": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8667,
        8677
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xD"
    },
    "1607": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8667,
        8677
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1608": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8667,
        8690
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x651"
    },
    "1611": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8667,
        8690
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1612": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8667,
        8690
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1613": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8667,
        8690
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x184C"
    },
    "1616": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "jump": "i",
      "offset": [
        8667,
        8690
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1617": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8667,
        8690
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1618": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8660,
        8691
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x65B"
    },
    "1621": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8660,
        8691
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1622": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8660,
        8663
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1623": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8660,
        8691
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x184C"
    },
    "1626": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "jump": "i",
      "offset": [
        8660,
        8691
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1627": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8660,
        8691
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1628": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8653,
        8691
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1629": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8653,
        8691
      ],
      "op": "POP",
      "path": "22"
    },
    "1630": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8653,
        8691
      ],
      "op": "POP",
      "path": "22"
    },
    "1631": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8653,
        8691
      ],
      "op": "POP",
      "path": "22"
    },
    "1632": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "offset": [
        8064,
        8698
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1633": {
      "fn": "CatalystSwapPoolCore.getUnitCapacity",
      "jump": "o",
      "offset": [
        8064,
        8698
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1634": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1635": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5319,
        5323
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1637": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1638": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 12,
      "value": "0x670"
    },
    "1641": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5391,
        5395
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1642": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1643": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5406,
        5412
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1644": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5390
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEE0"
    },
    "1647": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1648": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5375,
        5413
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1649": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 13,
      "value": "0x67B"
    },
    "1652": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5433,
        5437
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1653": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5439,
        5441
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1654": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5443,
        5449
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1655": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5432
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFB1"
    },
    "1658": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1659": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5423,
        5450
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1660": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5467,
        5471
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 14,
      "value": "0x1"
    },
    "1662": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5460,
        5471
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1663": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5460,
        5471
      ],
      "op": "POP",
      "path": "3"
    },
    "1664": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5460,
        5471
      ],
      "op": "POP",
      "path": "3"
    },
    "1665": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1666": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1667": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1668": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "POP",
      "path": "3"
    },
    "1669": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "POP",
      "path": "3"
    },
    "1670": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5192,
        5478
      ],
      "op": "POP",
      "path": "3"
    },
    "1671": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5192,
        5478
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1672": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5873,
        6109
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1673": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "1674": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1676": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 15
    },
    "1677": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1678": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1679": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6051
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1681": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1683": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1684": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1685": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1686": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1688": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1689": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1690": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1691": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6058
      ],
      "op": "PUSH20",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1712": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1713": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "AND",
      "path": "3"
    },
    "1714": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1715": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1716": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1717": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1718": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1719": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1720": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1721": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1722": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1723": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        5961,
        5965
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1724": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1725": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5DB"
    },
    "1728": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6081
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1729": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "11"
    },
    "1730": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "1731": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1732": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6067
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1733": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6CF"
    },
    "1736": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1737": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "DUP8",
      "path": "3"
    },
    "1738": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6070,
        6080
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1739": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1839"
    },
    "1742": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1743": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6040,
        6080
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1744": {
      "fn": "ERC20.increaseAllowance",
      "offset": [
        6015,
        6023
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD2D"
    },
    "1747": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [
        6015,
        6081
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1748": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15226,
        15562
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1749": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15326,
        15338
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 16,
      "value": "0xB"
    },
    "1751": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15326,
        15338
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1752": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15326,
        15338
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1773": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15326,
        15338
      ],
      "op": "AND",
      "path": "22"
    },
    "1774": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15313,
        15322
      ],
      "op": "ORIGIN",
      "path": "22"
    },
    "1775": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15313,
        15338
      ],
      "op": "EQ",
      "path": "22"
    },
    "1776": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15313,
        15338
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1777": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15312,
        15371
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x711"
    },
    "1780": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15312,
        15371
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1781": {
      "op": "POP"
    },
    "1782": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15358,
        15370
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "1784": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15358,
        15370
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1785": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15358,
        15370
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1806": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15358,
        15370
      ],
      "op": "AND",
      "path": "22"
    },
    "1807": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15344,
        15354
      ],
      "op": "CALLER",
      "path": "22"
    },
    "1808": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15344,
        15370
      ],
      "op": "EQ",
      "path": "22"
    },
    "1809": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15312,
        15371
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1810": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15304,
        15372
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x71A"
    },
    "1813": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15304,
        15372
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1814": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15304,
        15372
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1816": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15304,
        15372
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1817": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15304,
        15372
      ],
      "op": "REVERT",
      "path": "22"
    },
    "1818": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15304,
        15372
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1819": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15479,
        15489
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x5"
    },
    "1821": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15479,
        15489
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1822": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15479,
        15489
      ],
      "op": "PUSH21",
      "path": "22",
      "value": "0x10000000000000000000000000000000000000000"
    },
    "1844": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15479,
        15489
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1845": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15479,
        15489
      ],
      "op": "DIV",
      "path": "22"
    },
    "1846": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15479,
        15489
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xFF"
    },
    "1848": {
      "branch": 65,
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15479,
        15489
      ],
      "op": "AND",
      "path": "22"
    },
    "1849": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15475,
        15519
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1850": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15475,
        15519
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x766"
    },
    "1853": {
      "branch": 65,
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15475,
        15519
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1854": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15491,
        15506
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 17,
      "value": "0x5"
    },
    "1856": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15491,
        15519
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1857": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15491,
        15519
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1858": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15491,
        15519
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "1891": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15491,
        15519
      ],
      "op": "AND",
      "path": "22"
    },
    "1892": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15491,
        15519
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1893": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15491,
        15519
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1894": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15475,
        15519
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1895": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15530,
        15542
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 18,
      "value": "0xB"
    },
    "1897": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15530,
        15555
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1898": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15530,
        15555
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1899": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15530,
        15555
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "1932": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15530,
        15555
      ],
      "op": "AND",
      "path": "22"
    },
    "1933": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15530,
        15555
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1934": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "offset": [
        15530,
        15555
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "1935": {
      "fn": "CatalystSwapPoolCore.finishSetup",
      "jump": "o",
      "offset": [
        15226,
        15562
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1936": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        8910,
        9568
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1937": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        8969,
        8976
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1939": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9235,
        9246
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1940": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9265,
        9266
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "1942": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9249,
        9262
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x79E"
    },
    "1945": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1947": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1948": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3331,
        3343
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1949": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3244,
        3350
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1950": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9249,
        9262
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1951": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9249,
        9266
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7A8"
    },
    "1954": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9249,
        9266
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1955": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9249,
        9266
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1956": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9249,
        9266
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1876"
    },
    "1959": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "jump": "i",
      "offset": [
        9249,
        9266
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1960": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9249,
        9266
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1961": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9235,
        9266
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1962": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9235,
        9266
      ],
      "op": "POP",
      "path": "22"
    },
    "1963": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9311,
        9333
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "1965": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9311,
        9333
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "1966": {
      "offset": [
        1123,
        1135
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x15180"
    },
    "1970": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9299,
        9333
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7BB"
    },
    "1973": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9299,
        9333
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1974": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9299,
        9333
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1975": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9299,
        9333
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1839"
    },
    "1978": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "jump": "i",
      "offset": [
        9299,
        9333
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1979": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9299,
        9333
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1980": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9281,
        9296
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "1981": {
      "branch": 66,
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9281,
        9333
      ],
      "op": "GT",
      "path": "22"
    },
    "1982": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9277,
        9345
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1983": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9277,
        9345
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7C7"
    },
    "1986": {
      "branch": 66,
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9277,
        9345
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1987": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9342,
        9345
      ],
      "op": "SWAP2",
      "path": "22",
      "statement": 19
    },
    "1988": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        8910,
        9568
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1989": {
      "op": "POP"
    },
    "1990": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "jump": "o",
      "offset": [
        8910,
        9568
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1991": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9277,
        9345
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1992": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9356,
        9374
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "1994": {
      "offset": [
        1123,
        1135
      ],
      "op": "PUSH3",
      "path": "22",
      "value": "0x15180"
    },
    "1998": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9415,
        9437
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x10"
    },
    "2000": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9415,
        9437
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2001": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9397,
        9412
      ],
      "op": "TIMESTAMP",
      "path": "22"
    },
    "2002": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9397,
        9437
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7DB"
    },
    "2005": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9397,
        9437
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2006": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9397,
        9437
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2007": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9397,
        9437
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x184C"
    },
    "2010": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "jump": "i",
      "offset": [
        9397,
        9437
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2011": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9397,
        9437
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2012": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9378,
        9438
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7E5"
    },
    "2015": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9378,
        9438
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2016": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9378,
        9381
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2017": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9378,
        9438
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x185F"
    },
    "2020": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "jump": "i",
      "offset": [
        9378,
        9438
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2021": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9378,
        9438
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2022": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9377,
        9451
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x7EF"
    },
    "2025": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9377,
        9451
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2026": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9377,
        9451
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2027": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9377,
        9451
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1876"
    },
    "2030": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "jump": "i",
      "offset": [
        9377,
        9451
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2031": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9377,
        9451
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2032": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9356,
        9451
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2033": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9356,
        9451
      ],
      "op": "POP",
      "path": "22"
    },
    "2034": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9485,
        9495
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2035": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9466,
        9481
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xF"
    },
    "2037": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9466,
        9481
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2038": {
      "branch": 67,
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9466,
        9495
      ],
      "op": "GT",
      "path": "22"
    },
    "2039": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9462,
        9507
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x800"
    },
    "2042": {
      "branch": 67,
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9462,
        9507
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2043": {
      "op": "POP"
    },
    "2044": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9504,
        9507
      ],
      "op": "SWAP2",
      "path": "22",
      "statement": 20
    },
    "2045": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        8910,
        9568
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2046": {
      "op": "POP"
    },
    "2047": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "jump": "o",
      "offset": [
        8910,
        9568
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2048": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9462,
        9507
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2049": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9550,
        9560
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 21
    },
    "2050": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9532,
        9547
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xF"
    },
    "2052": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9532,
        9547
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2053": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9532,
        9560
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x651"
    },
    "2056": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9532,
        9560
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2057": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9532,
        9560
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2058": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "offset": [
        9532,
        9560
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x184C"
    },
    "2061": {
      "fn": "CatalystSwapPoolCore.getLiquidityUnitCapacity",
      "jump": "i",
      "offset": [
        9532,
        9560
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2062": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        7033,
        7127
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2063": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        7081,
        7094
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "2065": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        7113,
        7120
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 22,
      "value": "0x16"
    },
    "2067": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        7106,
        7120
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2068": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        7106,
        7120
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2069": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        7106,
        7120
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x54A"
    },
    "2072": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        7106,
        7120
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2073": {
      "fn": "CatalystSwapPoolCore.symbol",
      "offset": [
        7106,
        7120
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x17B7"
    },
    "2076": {
      "fn": "CatalystSwapPoolCore.symbol",
      "jump": "i",
      "offset": [
        7106,
        7120
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2077": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2078": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2079": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2081": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2082": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2083": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2084": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6781
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2086": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2088": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2089": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2090": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2091": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2093": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2094": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2095": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2096": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6788
      ],
      "op": "PUSH20",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2117": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2118": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "AND",
      "path": "3"
    },
    "2119": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2120": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2121": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2122": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2123": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2124": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2125": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2126": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6770,
        6797
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2127": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2128": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6689,
        6693
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2129": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "11"
    },
    "2130": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 23
    },
    "2131": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2132": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "LT",
      "path": "3"
    },
    "2133": {
      "branch": 73,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6815,
        6850
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2134": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8E6"
    },
    "2137": {
      "branch": 73,
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2138": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2140": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2141": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "2174": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2175": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2178": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2180": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2181": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "ADD",
      "path": "3"
    },
    "2182": {
      "op": "MSTORE"
    },
    "2183": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2187": {
      "op": "DUP3"
    },
    "2188": {
      "op": "ADD"
    },
    "2189": {
      "op": "MSTORE"
    },
    "2190": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2225": {
      "op": "DUP3"
    },
    "2226": {
      "op": "ADD"
    },
    "2227": {
      "op": "MSTORE"
    },
    "2228": {
      "op": "PUSH32",
      "value": "0x207A65726F000000000000000000000000000000000000000000000000000000"
    },
    "2261": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2263": {
      "op": "DUP3"
    },
    "2264": {
      "op": "ADD"
    },
    "2265": {
      "op": "MSTORE"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2268": {
      "op": "ADD"
    },
    "2269": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2270": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2272": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2273": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2274": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2275": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "SUB",
      "path": "3"
    },
    "2276": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2277": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "2278": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6807,
        6892
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2279": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6986
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 24,
      "value": "0x8F3"
    },
    "2282": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6935,
        6940
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2283": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6942,
        6949
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2284": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6970,
        6985
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2285": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6967
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2286": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6951,
        6985
      ],
      "op": "SUB",
      "path": "3"
    },
    "2287": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6934
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD2D"
    },
    "2290": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [
        6926,
        6986
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2291": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6926,
        6986
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2292": {
      "op": "POP"
    },
    "2293": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7014,
        7018
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 25,
      "value": "0x1"
    },
    "2295": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        7014,
        7018
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2296": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [
        6596,
        7025
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2297": {
      "op": "POP"
    },
    "2298": {
      "op": "POP"
    },
    "2299": {
      "op": "POP"
    },
    "2300": {
      "op": "POP"
    },
    "2301": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [
        6596,
        7025
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2302": {
      "fn": "ERC20.transfer",
      "offset": [
        3729,
        3918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2303": {
      "fn": "ERC20.transfer",
      "offset": [
        3808,
        3812
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2305": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "11"
    },
    "2306": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3890
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 26,
      "value": "0x5DB"
    },
    "2309": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "11"
    },
    "2310": {
      "fn": "ERC20.transfer",
      "offset": [
        3879,
        3881
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2311": {
      "fn": "ERC20.transfer",
      "offset": [
        3883,
        3889
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2312": {
      "fn": "ERC20.transfer",
      "offset": [
        3862,
        3871
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFB1"
    },
    "2315": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3862,
        3890
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2316": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16432,
        16926
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2317": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16525,
        16540
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 27,
      "value": "0x5"
    },
    "2319": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16525,
        16540
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2320": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16525,
        16540
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2341": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16525,
        16540
      ],
      "op": "AND",
      "path": "22"
    },
    "2342": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16511,
        16521
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2343": {
      "branch": 68,
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16511,
        16540
      ],
      "op": "EQ",
      "path": "22"
    },
    "2344": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16503,
        16541
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x930"
    },
    "2347": {
      "branch": 68,
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16503,
        16541
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2348": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16503,
        16541
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2350": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16503,
        16541
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2351": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16503,
        16541
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2352": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16503,
        16541
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2353": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16587
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2355": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16590,
        16616
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2356": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16590,
        16616
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2357": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16590,
        16616
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2358": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16590,
        16602
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x12"
    },
    "2360": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16590,
        16616
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2362": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16590,
        16616
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2363": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16590,
        16616
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2364": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16590,
        16616
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2365": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16590,
        16616
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2367": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16590,
        16616
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2368": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16590,
        16616
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2369": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16590,
        16616
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2370": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2371": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2372": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "2374": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2375": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "ADD",
      "path": "22"
    },
    "2376": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2377": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2378": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2379": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2380": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2401": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2402": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2403": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "AND",
      "path": "22"
    },
    "2404": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2405": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2406": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2408": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2409": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "ADD",
      "path": "22"
    },
    "2410": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2411": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2412": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2413": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "ADD",
      "path": "22"
    },
    "2414": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2415": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2416": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2417": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2419": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2420": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2421": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "ADD",
      "path": "22"
    },
    "2422": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2423": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "AND",
      "path": "22"
    },
    "2424": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2425": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2426": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "ADD",
      "path": "22"
    },
    "2427": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2428": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2429": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2430": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16666
      ],
      "op": "DUP6",
      "path": "22",
      "statement": 28
    },
    "2431": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16666
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2432": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16641
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x11"
    },
    "2434": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2435": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16666
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2436": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16666
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2437": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2438": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16666
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2439": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16666
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2440": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16694
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2441": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16694
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2442": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2443": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2444": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2445": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2446": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2447": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16666
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2448": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16587
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2449": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16694
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x99B"
    },
    "2452": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16694
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2453": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2454": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16551,
        16616
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2455": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16694
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x184C"
    },
    "2458": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "jump": "i",
      "offset": [
        16626,
        16694
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2459": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16694
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2460": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16694
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2461": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16694
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2462": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16626,
        16694
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2463": {
      "op": "POP"
    },
    "2464": {
      "op": "POP"
    },
    "2465": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16763,
        16785
      ],
      "op": "DUP1",
      "path": "22",
      "statement": 29
    },
    "2466": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16763,
        16785
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2467": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16799,
        16823
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2469": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16799,
        16823
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2470": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16799,
        16823
      ],
      "op": "ADD",
      "path": "22"
    },
    "2471": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16799,
        16823
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2472": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16712,
        16735
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2474": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16712,
        16735
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2475": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16712,
        16735
      ],
      "op": "ADD",
      "path": "22"
    },
    "2476": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16712,
        16735
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2477": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16705,
        16833
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9CE"
    },
    "2480": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16705,
        16833
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2481": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16705,
        16749
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2502": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16705,
        16749
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2503": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16705,
        16749
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2504": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16705,
        16749
      ],
      "op": "AND",
      "path": "22"
    },
    "2505": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16705,
        16749
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2506": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16705,
        16749
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x1264"
    },
    "2509": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "jump": "i",
      "offset": [
        16705,
        16833
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2510": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16705,
        16833
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2511": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16849,
        16876
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 30,
      "value": "0x40"
    },
    "2513": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16849,
        16876
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2514": {
      "op": "DUP3"
    },
    "2515": {
      "op": "DUP2"
    },
    "2516": {
      "op": "MSTORE"
    },
    "2517": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16849,
        16876
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x2ED3176C48E2338524348CC2055ADB2C2D41E9022E0A6A18D843C9ED5BE9A3A3"
    },
    "2550": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16849,
        16876
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2553": {
      "op": "ADD"
    },
    "2554": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16849,
        16876
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2555": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16849,
        16876
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2557": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16849,
        16876
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2558": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16849,
        16876
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2559": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16849,
        16876
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2560": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16849,
        16876
      ],
      "op": "SUB",
      "path": "22"
    },
    "2561": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16849,
        16876
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2562": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16849,
        16876
      ],
      "op": "LOG1",
      "path": "22"
    },
    "2563": {
      "op": "POP"
    },
    "2564": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16893,
        16919
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 31,
      "value": "0x0"
    },
    "2566": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16893,
        16919
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2567": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16893,
        16919
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2568": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16893,
        16919
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2569": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16893,
        16905
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x12"
    },
    "2571": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16893,
        16919
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2573": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16893,
        16919
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2574": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16893,
        16919
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2576": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16893,
        16919
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2577": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16893,
        16919
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "2578": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2579": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2580": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
    },
    "2613": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2614": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2615": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "AND",
      "path": "22"
    },
    "2616": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2617": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2618": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2620": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2621": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "ADD",
      "path": "22"
    },
    "2622": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2623": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2624": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2625": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2626": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2628": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "ADD",
      "path": "22"
    },
    "2629": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2630": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2631": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2632": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2633": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "AND",
      "path": "22"
    },
    "2634": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2635": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "offset": [
        16886,
        16919
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2636": {
      "fn": "CatalystSwapPoolCore.releaseEscrowTIMEOUT",
      "jump": "o",
      "offset": [
        16432,
        16926
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2637": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14440,
        14882
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2638": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14634,
        14646
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 32,
      "value": "0xB"
    },
    "2640": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14634,
        14646
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2641": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14634,
        14646
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2662": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14634,
        14646
      ],
      "op": "AND",
      "path": "22"
    },
    "2663": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14621,
        14630
      ],
      "op": "ORIGIN",
      "path": "22"
    },
    "2664": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14621,
        14646
      ],
      "op": "EQ",
      "path": "22"
    },
    "2665": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14621,
        14646
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2666": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14620,
        14679
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA8A"
    },
    "2669": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14620,
        14679
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2670": {
      "op": "POP"
    },
    "2671": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14666,
        14678
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "2673": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14666,
        14678
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2674": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14666,
        14678
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2695": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14666,
        14678
      ],
      "op": "AND",
      "path": "22"
    },
    "2696": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14652,
        14662
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2697": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14652,
        14678
      ],
      "op": "EQ",
      "path": "22"
    },
    "2698": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14620,
        14679
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2699": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14612,
        14680
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA93"
    },
    "2702": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14612,
        14680
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2703": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14612,
        14680
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2705": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14612,
        14680
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2706": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14612,
        14680
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2707": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14612,
        14680
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2708": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14706,
        14716
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 33,
      "value": "0x5"
    },
    "2710": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14706,
        14724
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2711": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14706,
        14724
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2712": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14706,
        14724
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2745": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14706,
        14724
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2746": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14706,
        14724
      ],
      "op": "AND",
      "path": "22"
    },
    "2747": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14706,
        14724
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2748": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14706,
        14724
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2749": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14706,
        14724
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "2750": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 34,
      "value": "0x40"
    },
    "2752": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2753": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x92A9BDB300000000000000000000000000000000000000000000000000000000"
    },
    "2786": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2787": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2788": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "2790": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2791": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "ADD",
      "path": "22"
    },
    "2792": {
      "op": "DUP6"
    },
    "2793": {
      "op": "SWAP1"
    },
    "2794": {
      "op": "MSTORE"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2797": {
      "op": "DUP2"
    },
    "2798": {
      "op": "ADD"
    },
    "2799": {
      "op": "DUP5"
    },
    "2800": {
      "op": "SWAP1"
    },
    "2801": {
      "op": "MSTORE"
    },
    "2802": {
      "op": "DUP3"
    },
    "2803": {
      "op": "ISZERO"
    },
    "2804": {
      "op": "ISZERO"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2807": {
      "op": "DUP3"
    },
    "2808": {
      "op": "ADD"
    },
    "2809": {
      "op": "MSTORE"
    },
    "2810": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14756,
        14771
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2831": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14756,
        14771
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2832": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14756,
        14771
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2833": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14756,
        14771
      ],
      "op": "AND",
      "path": "22"
    },
    "2834": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14756,
        14771
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2835": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14798
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0x92A9BDB3"
    },
    "2840": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14798
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2843": {
      "op": "ADD"
    },
    "2844": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2846": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "2848": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2849": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2850": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2851": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "SUB",
      "path": "22"
    },
    "2852": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2853": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2855": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2856": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2857": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "EXTCODESIZE",
      "path": "22"
    },
    "2858": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2859": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2860": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2861": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB35"
    },
    "2864": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2865": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2867": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2868": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2869": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2870": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "POP",
      "path": "22"
    },
    "2871": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "GAS",
      "path": "22"
    },
    "2872": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "CALL",
      "path": "22"
    },
    "2873": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2874": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2875": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2876": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB49"
    },
    "2879": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2880": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2881": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2883": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2884": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "2885": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "2886": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2888": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2889": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2890": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "POP",
      "path": "22"
    },
    "2891": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "POP",
      "path": "22"
    },
    "2892": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "POP",
      "path": "22"
    },
    "2893": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14735,
        14875
      ],
      "op": "POP",
      "path": "22"
    },
    "2894": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14440,
        14882
      ],
      "op": "POP",
      "path": "22"
    },
    "2895": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14440,
        14882
      ],
      "op": "POP",
      "path": "22"
    },
    "2896": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "offset": [
        14440,
        14882
      ],
      "op": "POP",
      "path": "22"
    },
    "2897": {
      "fn": "CatalystSwapPoolCore.createConnectionWithChain",
      "jump": "o",
      "offset": [
        14440,
        14882
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2898": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13118,
        13546
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2899": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13305,
        13317
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 35,
      "value": "0xB"
    },
    "2901": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13305,
        13317
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2902": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13305,
        13317
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2923": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13305,
        13317
      ],
      "op": "AND",
      "path": "22"
    },
    "2924": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13292,
        13301
      ],
      "op": "ORIGIN",
      "path": "22"
    },
    "2925": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13292,
        13317
      ],
      "op": "EQ",
      "path": "22"
    },
    "2926": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13292,
        13317
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2927": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13291,
        13350
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB8F"
    },
    "2930": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13291,
        13350
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2931": {
      "op": "POP"
    },
    "2932": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13337,
        13349
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0xB"
    },
    "2934": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13337,
        13349
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2935": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13337,
        13349
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2956": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13337,
        13349
      ],
      "op": "AND",
      "path": "22"
    },
    "2957": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13323,
        13333
      ],
      "op": "CALLER",
      "path": "22"
    },
    "2958": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13323,
        13349
      ],
      "op": "EQ",
      "path": "22"
    },
    "2959": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13291,
        13350
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2960": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13283,
        13351
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB98"
    },
    "2963": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13283,
        13351
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2964": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13283,
        13351
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2966": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13283,
        13351
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2967": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13283,
        13351
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2968": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13283,
        13351
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2969": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13377,
        13387
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 36,
      "value": "0x5"
    },
    "2971": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13377,
        13395
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2972": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13377,
        13395
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "2973": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13377,
        13395
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3006": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13377,
        13395
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3007": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13377,
        13395
      ],
      "op": "AND",
      "path": "22"
    },
    "3008": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13377,
        13395
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3009": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13377,
        13395
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3010": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13377,
        13395
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3011": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 37,
      "value": "0x40"
    },
    "3013": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3014": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0xCEC8A39500000000000000000000000000000000000000000000000000000000"
    },
    "3047": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3048": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3049": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x4"
    },
    "3051": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3052": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "ADD",
      "path": "22"
    },
    "3053": {
      "op": "DUP6"
    },
    "3054": {
      "op": "SWAP1"
    },
    "3055": {
      "op": "MSTORE"
    },
    "3056": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3058": {
      "op": "DUP2"
    },
    "3059": {
      "op": "ADD"
    },
    "3060": {
      "op": "DUP5"
    },
    "3061": {
      "op": "SWAP1"
    },
    "3062": {
      "op": "MSTORE"
    },
    "3063": {
      "op": "DUP3"
    },
    "3064": {
      "op": "ISZERO"
    },
    "3065": {
      "op": "ISZERO"
    },
    "3066": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3068": {
      "op": "DUP3"
    },
    "3069": {
      "op": "ADD"
    },
    "3070": {
      "op": "MSTORE"
    },
    "3071": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13427,
        13442
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3092": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13427,
        13442
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3093": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13427,
        13442
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3094": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13427,
        13442
      ],
      "op": "AND",
      "path": "22"
    },
    "3095": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13427,
        13442
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3096": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13460
      ],
      "op": "PUSH4",
      "path": "22",
      "value": "0xCEC8A395"
    },
    "3101": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13460
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3104": {
      "op": "ADD"
    },
    "3105": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3107": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3109": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3110": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3111": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3112": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "SUB",
      "path": "22"
    },
    "3113": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3114": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3116": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "DUP8",
      "path": "22"
    },
    "3117": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "GAS",
      "path": "22"
    },
    "3118": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "CALL",
      "path": "22"
    },
    "3119": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3120": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3121": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "3122": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC3F"
    },
    "3125": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3126": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3127": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3129": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3130": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "RETURNDATACOPY",
      "path": "22"
    },
    "3131": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3132": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3134": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3135": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3136": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "POP",
      "path": "22"
    },
    "3137": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "POP",
      "path": "22"
    },
    "3138": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "POP",
      "path": "22"
    },
    "3139": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "POP",
      "path": "22"
    },
    "3140": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3142": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3143": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "RETURNDATASIZE",
      "path": "22"
    },
    "3144": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "3146": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "NOT",
      "path": "22"
    },
    "3147": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1F"
    },
    "3149": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3150": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "ADD",
      "path": "22"
    },
    "3151": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "AND",
      "path": "22"
    },
    "3152": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3153": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "ADD",
      "path": "22"
    },
    "3154": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3155": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3157": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3158": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "POP",
      "path": "22"
    },
    "3159": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3160": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "ADD",
      "path": "22"
    },
    "3161": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3162": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC63"
    },
    "3165": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3166": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3167": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x18B1"
    },
    "3170": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "jump": "i",
      "offset": [
        13406,
        13539
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3171": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3172": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13406,
        13539
      ],
      "op": "POP",
      "path": "22"
    },
    "3173": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13118,
        13546
      ],
      "op": "POP",
      "path": "22"
    },
    "3174": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13118,
        13546
      ],
      "op": "POP",
      "path": "22"
    },
    "3175": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "offset": [
        13118,
        13546
      ],
      "op": "POP",
      "path": "22"
    },
    "3176": {
      "fn": "CatalystSwapPoolCore.createConnection",
      "jump": "o",
      "offset": [
        13118,
        13546
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3177": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16019,
        16366
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3178": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16108,
        16123
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 38,
      "value": "0x5"
    },
    "3180": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16108,
        16123
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3181": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16108,
        16123
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3202": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16108,
        16123
      ],
      "op": "AND",
      "path": "22"
    },
    "3203": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16094,
        16104
      ],
      "op": "CALLER",
      "path": "22"
    },
    "3204": {
      "branch": 69,
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16094,
        16123
      ],
      "op": "EQ",
      "path": "22"
    },
    "3205": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16086,
        16124
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xC8D"
    },
    "3208": {
      "branch": 69,
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16086,
        16124
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "3209": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16086,
        16124
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3211": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16086,
        16124
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3212": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16086,
        16124
      ],
      "op": "REVERT",
      "path": "22"
    },
    "3213": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16086,
        16124
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3214": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16170
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "3216": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16173,
        16199
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3217": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16173,
        16199
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3218": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16173,
        16199
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3219": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16173,
        16185
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x12"
    },
    "3221": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16173,
        16199
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "3223": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16173,
        16199
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3224": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16173,
        16199
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3225": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16173,
        16199
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3226": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16173,
        16199
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "3228": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16173,
        16199
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3229": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16173,
        16199
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3230": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16173,
        16199
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3231": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3232": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3233": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x60"
    },
    "3235": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3236": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "ADD",
      "path": "22"
    },
    "3237": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3238": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3239": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3240": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3241": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "PUSH20",
      "path": "22",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3262": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3263": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3264": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "AND",
      "path": "22"
    },
    "3265": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3266": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3267": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "3269": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3270": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "ADD",
      "path": "22"
    },
    "3271": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3272": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP3",
      "path": "22"
    },
    "3273": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP7",
      "path": "22"
    },
    "3274": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "ADD",
      "path": "22"
    },
    "3275": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3276": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3277": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3278": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "3280": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3281": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "3282": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "ADD",
      "path": "22"
    },
    "3283": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3284": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "AND",
      "path": "22"
    },
    "3285": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3286": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3287": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "ADD",
      "path": "22"
    },
    "3288": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP2",
      "path": "22"
    },
    "3289": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3290": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3291": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16249
      ],
      "op": "DUP6",
      "path": "22",
      "statement": 39
    },
    "3292": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16249
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3293": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16224
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x11"
    },
    "3295": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16249
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3296": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16249
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "3297": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16249
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "3298": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16249
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3299": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16249
      ],
      "op": "DUP4",
      "path": "22"
    },
    "3300": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16249
      ],
      "op": "KECCAK256",
      "path": "22"
    },
    "3301": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16277
      ],
      "op": "DUP1",
      "path": "22"
    },
    "3302": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16277
      ],
      "op": "SLOAD",
      "path": "22"
    },
    "3303": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3304": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "3305": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3306": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "3307": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16249
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3308": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16249
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3309": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16170
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3310": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16277
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xCF8"
    },
    "3313": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16277
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3314": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "DUP5",
      "path": "22"
    },
    "3315": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16134,
        16199
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3316": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16277
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x184C"
    },
    "3319": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "jump": "i",
      "offset": [
        16209,
        16277
      ],
      "op": "JUMP",
      "path": "22"
    },
    "3320": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16277
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "3321": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16277
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3322": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16277
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "3323": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16209,
        16277
      ],
      "op": "SSTORE",
      "path": "22"
    },
    "3324": {
      "op": "POP"
    },
    "3325": {
      "op": "POP"
    },
    "3326": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16293,
        16316
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 40,
      "value": "0x40"
    },
    "3328": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16293,
        16316
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "3329": {
      "op": "DUP3"
    },
    "3330": {
      "op": "DUP2"
    },
    "3331": {
      "op": "MSTORE"
    },
    "3332": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16293,
        16316
      ],
      "op": "PUSH32",
      "path": "22",
      "value": "0x44898AB65AFFAD4F975E5A33A5F62FC75A177F6E222DA2585627711F4B0F50F5"
    },
    "3365": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16293,
        16316
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "3366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3368": {
      "op": "ADD"
    },
    "3369": {
      "fn": "CatalystSwapPoolCore.releaseEscrowACK",
      "offset": [
        16293,
        16316
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9FA"
    },
    "3372": {
      "op": "JUMP"
    },
    "3373": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3374": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "PUSH20",
      "path": "3",
      "statement": 41,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3395": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3396": {
      "branch": 74,
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10273
      ],
      "op": "AND",
      "path": "3"
    },
    "3397": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDCF"
    },
    "3400": {
      "branch": 74,
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3401": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3403": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3404": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "3437": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3438": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3441": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3443": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3444": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "ADD",
      "path": "3"
    },
    "3445": {
      "op": "MSTORE"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3448": {
      "op": "DUP1"
    },
    "3449": {
      "op": "DUP3"
    },
    "3450": {
      "op": "ADD"
    },
    "3451": {
      "op": "MSTORE"
    },
    "3452": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3487": {
      "op": "DUP3"
    },
    "3488": {
      "op": "ADD"
    },
    "3489": {
      "op": "MSTORE"
    },
    "3490": {
      "op": "PUSH32",
      "value": "0x7265737300000000000000000000000000000000000000000000000000000000"
    },
    "3523": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3525": {
      "op": "DUP3"
    },
    "3526": {
      "op": "ADD"
    },
    "3527": {
      "op": "MSTORE"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3530": {
      "op": "ADD"
    },
    "3531": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8DD"
    },
    "3534": {
      "op": "JUMP"
    },
    "3535": {
      "fn": "ERC20._approve",
      "offset": [
        10246,
        10314
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3536": {
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "PUSH20",
      "path": "3",
      "statement": 42,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3557": {
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3558": {
      "branch": 75,
      "fn": "ERC20._approve",
      "offset": [
        10332,
        10353
      ],
      "op": "AND",
      "path": "3"
    },
    "3559": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE72"
    },
    "3562": {
      "branch": 75,
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3563": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3565": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3566": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "3599": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3600": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3603": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3605": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3606": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "ADD",
      "path": "3"
    },
    "3607": {
      "op": "MSTORE"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3612": {
      "op": "DUP3"
    },
    "3613": {
      "op": "ADD"
    },
    "3614": {
      "op": "MSTORE"
    },
    "3615": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3650": {
      "op": "DUP3"
    },
    "3651": {
      "op": "ADD"
    },
    "3652": {
      "op": "MSTORE"
    },
    "3653": {
      "op": "PUSH32",
      "value": "0x7373000000000000000000000000000000000000000000000000000000000000"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3688": {
      "op": "DUP3"
    },
    "3689": {
      "op": "ADD"
    },
    "3690": {
      "op": "MSTORE"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3693": {
      "op": "ADD"
    },
    "3694": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8DD"
    },
    "3697": {
      "op": "JUMP"
    },
    "3698": {
      "fn": "ERC20._approve",
      "offset": [
        10324,
        10392
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3699": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH20",
      "path": "3",
      "statement": 43,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3720": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3721": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3722": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "AND",
      "path": "3"
    },
    "3723": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3725": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3726": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3727": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3728": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10414
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3730": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3732": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3733": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3734": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3735": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3737": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3738": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3739": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10421
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3740": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3741": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP8",
      "path": "3"
    },
    "3742": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "AND",
      "path": "3"
    },
    "3743": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3744": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3745": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3746": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3747": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3748": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3749": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3750": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3751": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3752": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10430
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3753": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "DUP6",
      "path": "3"
    },
    "3754": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3755": {
      "fn": "ERC20._approve",
      "offset": [
        10403,
        10439
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "3756": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 44
    },
    "3757": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3758": {
      "op": "DUP5"
    },
    "3759": {
      "op": "DUP2"
    },
    "3760": {
      "op": "MSTORE"
    },
    "3761": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3794": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3795": {
      "op": "ADD"
    },
    "3796": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3798": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3799": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3800": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3801": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SUB",
      "path": "3"
    },
    "3802": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3803": {
      "fn": "ERC20._approve",
      "offset": [
        10454,
        10486
      ],
      "op": "LOG3",
      "path": "3"
    },
    "3804": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "3"
    },
    "3805": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "3"
    },
    "3806": {
      "fn": "ERC20._approve",
      "offset": [
        10123,
        10493
      ],
      "op": "POP",
      "path": "3"
    },
    "3807": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        10123,
        10493
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3808": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10770,
        11211
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3809": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH20",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3830": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3831": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3832": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "AND",
      "path": "3"
    },
    "3833": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10900,
        10924
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3835": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3836": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3837": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3838": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4102
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "3840": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3842": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3843": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3844": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3845": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3847": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3848": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3849": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4109
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3850": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3851": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP7",
      "path": "3"
    },
    "3852": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "AND",
      "path": "3"
    },
    "3853": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3854": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3855": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3856": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3857": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3858": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "3859": {
      "fn": "ERC20.allowance",
      "offset": [
        4091,
        4118
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "3860": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10986,
        11003
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3893": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3894": {
      "branch": 76,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10966,
        11003
      ],
      "op": "EQ",
      "path": "3"
    },
    "3895": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC63"
    },
    "3898": {
      "branch": 76,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10962,
        11205
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3899": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11047,
        11053
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 45
    },
    "3900": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11043
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3901": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "LT",
      "path": "3"
    },
    "3902": {
      "branch": 77,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11027,
        11053
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "3903": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFA4"
    },
    "3906": {
      "branch": 77,
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3907": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3909": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3910": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "3943": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3944": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3947": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3949": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3950": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "ADD",
      "path": "3"
    },
    "3951": {
      "op": "MSTORE"
    },
    "3952": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "3954": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3956": {
      "op": "DUP3"
    },
    "3957": {
      "op": "ADD"
    },
    "3958": {
      "op": "MSTORE"
    },
    "3959": {
      "op": "PUSH32",
      "value": "0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3994": {
      "op": "DUP3"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "op": "MSTORE"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3999": {
      "op": "ADD"
    },
    "4000": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8DD"
    },
    "4003": {
      "op": "JUMP"
    },
    "4004": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11019,
        11087
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4005": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11180
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 46,
      "value": "0xC63"
    },
    "4008": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11138,
        11143
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4009": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11145,
        11152
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4010": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11173,
        11179
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4011": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11170
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4012": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11154,
        11179
      ],
      "op": "SUB",
      "path": "3"
    },
    "4013": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11129,
        11137
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD2D"
    },
    "4016": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11129,
        11180
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4017": {
      "fn": "ERC20._transfer",
      "offset": [
        7488,
        8139
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4018": {
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "PUSH20",
      "path": "3",
      "statement": 47,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4039": {
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4040": {
      "branch": 78,
      "fn": "ERC20._transfer",
      "offset": [
        7614,
        7632
      ],
      "op": "AND",
      "path": "3"
    },
    "4041": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1054"
    },
    "4044": {
      "branch": 78,
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4045": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4047": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4048": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "4081": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4082": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4085": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4087": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4088": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "ADD",
      "path": "3"
    },
    "4089": {
      "op": "MSTORE"
    },
    "4090": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4094": {
      "op": "DUP3"
    },
    "4095": {
      "op": "ADD"
    },
    "4096": {
      "op": "MSTORE"
    },
    "4097": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "4130": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4132": {
      "op": "DUP3"
    },
    "4133": {
      "op": "ADD"
    },
    "4134": {
      "op": "MSTORE"
    },
    "4135": {
      "op": "PUSH32",
      "value": "0x6472657373000000000000000000000000000000000000000000000000000000"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4170": {
      "op": "DUP3"
    },
    "4171": {
      "op": "ADD"
    },
    "4172": {
      "op": "MSTORE"
    },
    "4173": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4175": {
      "op": "ADD"
    },
    "4176": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8DD"
    },
    "4179": {
      "op": "JUMP"
    },
    "4180": {
      "fn": "ERC20._transfer",
      "offset": [
        7606,
        7674
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4181": {
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "PUSH20",
      "path": "3",
      "statement": 48,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4202": {
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4203": {
      "branch": 79,
      "fn": "ERC20._transfer",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "3"
    },
    "4204": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10F7"
    },
    "4207": {
      "branch": 79,
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4208": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4210": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4211": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "4244": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4245": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4248": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4250": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4251": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "ADD",
      "path": "3"
    },
    "4252": {
      "op": "MSTORE"
    },
    "4253": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "4255": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4257": {
      "op": "DUP3"
    },
    "4258": {
      "op": "ADD"
    },
    "4259": {
      "op": "MSTORE"
    },
    "4260": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4295": {
      "op": "DUP3"
    },
    "4296": {
      "op": "ADD"
    },
    "4297": {
      "op": "MSTORE"
    },
    "4298": {
      "op": "PUSH32",
      "value": "0x6573730000000000000000000000000000000000000000000000000000000000"
    },
    "4331": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4333": {
      "op": "DUP3"
    },
    "4334": {
      "op": "ADD"
    },
    "4335": {
      "op": "MSTORE"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4338": {
      "op": "ADD"
    },
    "4339": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8DD"
    },
    "4342": {
      "op": "JUMP"
    },
    "4343": {
      "fn": "ERC20._transfer",
      "offset": [
        7684,
        7748
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4344": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH20",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4365": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4366": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "AND",
      "path": "3"
    },
    "4367": {
      "fn": "ERC20._transfer",
      "offset": [
        7808,
        7827
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4369": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4370": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4371": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4372": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4374": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4375": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4376": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4377": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4379": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4380": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4381": {
      "fn": "ERC20._transfer",
      "offset": [
        7830,
        7845
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4382": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 49
    },
    "4383": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4384": {
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "LT",
      "path": "3"
    },
    "4385": {
      "branch": 80,
      "fn": "ERC20._transfer",
      "offset": [
        7863,
        7884
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4386": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11AD"
    },
    "4389": {
      "branch": 80,
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4390": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4392": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4393": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "4426": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4427": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4430": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4432": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4433": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "ADD",
      "path": "3"
    },
    "4434": {
      "op": "MSTORE"
    },
    "4435": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4439": {
      "op": "DUP3"
    },
    "4440": {
      "op": "ADD"
    },
    "4441": {
      "op": "MSTORE"
    },
    "4442": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4477": {
      "op": "DUP3"
    },
    "4478": {
      "op": "ADD"
    },
    "4479": {
      "op": "MSTORE"
    },
    "4480": {
      "op": "PUSH32",
      "value": "0x616C616E63650000000000000000000000000000000000000000000000000000"
    },
    "4513": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4515": {
      "op": "DUP3"
    },
    "4516": {
      "op": "ADD"
    },
    "4517": {
      "op": "MSTORE"
    },
    "4518": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4520": {
      "op": "ADD"
    },
    "4521": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8DD"
    },
    "4524": {
      "op": "JUMP"
    },
    "4525": {
      "fn": "ERC20._transfer",
      "offset": [
        7855,
        7927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4526": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH20",
      "path": "3",
      "statement": 50,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4547": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4548": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4549": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "AND",
      "path": "3"
    },
    "4550": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4552": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4553": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4554": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4555": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4557": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4558": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4559": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4560": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4562": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4563": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4564": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7976
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4565": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4566": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4567": {
      "fn": "ERC20._transfer",
      "offset": [
        7979,
        7999
      ],
      "op": "SUB",
      "path": "3"
    },
    "4568": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4569": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7999
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4570": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 51
    },
    "4571": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4572": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "AND",
      "path": "3"
    },
    "4573": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4574": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4575": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4576": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4577": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8032
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4578": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4579": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4580": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4581": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4582": {
      "fn": "ERC20._transfer",
      "offset": [
        7961,
        7970
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4583": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F1"
    },
    "4586": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4587": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4588": {
      "fn": "ERC20._transfer",
      "offset": [
        7993,
        7999
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4589": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1839"
    },
    "4592": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4593": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4594": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4595": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "3"
    },
    "4596": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "3"
    },
    "4597": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4598": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4599": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4600": {
      "fn": "ERC20._transfer",
      "offset": [
        8019,
        8042
      ],
      "op": "POP",
      "path": "3"
    },
    "4601": {
      "fn": "ERC20._transfer",
      "offset": [
        8073,
        8075
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 52
    },
    "4602": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH20",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4623": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "3"
    },
    "4624": {
      "fn": "ERC20._transfer",
      "offset": [
        8067,
        8071
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4625": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH20",
      "path": "3",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4646": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "AND",
      "path": "3"
    },
    "4647": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "4680": {
      "fn": "ERC20._transfer",
      "offset": [
        8077,
        8083
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4681": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4683": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4684": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1257"
    },
    "4687": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4688": {
      "op": "DUP2"
    },
    "4689": {
      "op": "MSTORE"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4692": {
      "op": "ADD"
    },
    "4693": {
      "op": "SWAP1"
    },
    "4694": {
      "op": "JUMP"
    },
    "4695": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4696": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4698": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4699": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4700": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4701": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SUB",
      "path": "3"
    },
    "4702": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4703": {
      "fn": "ERC20._transfer",
      "offset": [
        8058,
        8084
      ],
      "op": "LOG3",
      "path": "3"
    },
    "4704": {
      "fn": "ERC20._transfer",
      "offset": [
        8095,
        8132
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 53,
      "value": "0xC63"
    },
    "4707": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4708": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4709": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "9",
      "statement": 54,
      "value": "0x40"
    },
    "4711": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4712": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4713": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4734": {
      "op": "DUP5"
    },
    "4735": {
      "op": "AND"
    },
    "4736": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x24"
    },
    "4738": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4739": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "9"
    },
    "4740": {
      "op": "MSTORE"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4743": {
      "op": "DUP1"
    },
    "4744": {
      "op": "DUP3"
    },
    "4745": {
      "op": "ADD"
    },
    "4746": {
      "op": "DUP5"
    },
    "4747": {
      "op": "SWAP1"
    },
    "4748": {
      "op": "MSTORE"
    },
    "4749": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4750": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4751": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4752": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP4",
      "path": "9"
    },
    "4753": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SUB",
      "path": "9"
    },
    "4754": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4755": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4756": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "9"
    },
    "4757": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4758": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4759": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4761": {
      "op": "SWAP1"
    },
    "4762": {
      "op": "SWAP2"
    },
    "4763": {
      "op": "ADD"
    },
    "4764": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4765": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4766": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4767": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4769": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4770": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "ADD",
      "path": "9"
    },
    "4771": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4772": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4773": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "PUSH28",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4802": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "AND",
      "path": "9"
    },
    "4803": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        863,
        886
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0xA9059CBB00000000000000000000000000000000000000000000000000000000"
    },
    "4836": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "OR",
      "path": "9"
    },
    "4837": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4838": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        840,
        898
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4839": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12F1"
    },
    "4842": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4843": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "DUP5",
      "path": "9"
    },
    "4844": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        833,
        838
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4845": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        832
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12F6"
    },
    "4848": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "i",
      "offset": [
        813,
        899
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4849": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        813,
        899
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4850": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "9"
    },
    "4851": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "9"
    },
    "4852": {
      "fn": "SafeERC20.safeTransfer",
      "offset": [
        701,
        906
      ],
      "op": "POP",
      "path": "9"
    },
    "4853": {
      "fn": "SafeERC20.safeTransfer",
      "jump": "o",
      "offset": [
        701,
        906
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4854": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3207,
        3913
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4855": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3649
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x0"
    },
    "4857": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1358"
    },
    "4860": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3680,
        3684
      ],
      "op": "DUP3",
      "path": "9"
    },
    "4861": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4863": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4864": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4865": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4867": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "9"
    },
    "4868": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4870": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4871": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4872": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4874": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4875": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4876": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4878": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "ADD",
      "path": "9"
    },
    "4879": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
    },
    "4912": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4913": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "4914": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "POP",
      "path": "9"
    },
    "4915": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3660,
        3665
      ],
      "op": "DUP6",
      "path": "9"
    },
    "4916": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH20",
      "path": "9",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "4937": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "AND",
      "path": "9"
    },
    "4938": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1402"
    },
    "4941": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3679
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4942": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP3",
      "path": "9"
    },
    "4943": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4944": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4945": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "PUSH4",
      "path": "9",
      "value": "0xFFFFFFFF"
    },
    "4950": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "AND",
      "path": "9"
    },
    "4951": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4952": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3652,
        3721
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4953": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4954": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3752
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4955": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4956": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3626,
        3721
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4957": {
      "op": "POP"
    },
    "4958": {
      "branch": 81,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3735,
        3756
      ],
      "op": "ISZERO",
      "path": "9"
    },
    "4959": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12F1"
    },
    "4962": {
      "branch": 81,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3731,
        3907
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4963": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3830,
        3840
      ],
      "op": "DUP1",
      "path": "9",
      "statement": 55
    },
    "4964": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP1",
      "path": "9"
    },
    "4965": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x20"
    },
    "4967": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "9"
    },
    "4968": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4969": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4970": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "DUP2",
      "path": "9"
    },
    "4971": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "ADD",
      "path": "9"
    },
    "4972": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4973": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x1376"
    },
    "4976": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP2",
      "path": "9"
    },
    "4977": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "4978": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x18B1"
    },
    "4981": {
      "fn": "SafeERC20._callOptionalReturn",
      "jump": "i",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMP",
      "path": "9"
    },
    "4982": {
      "branch": 82,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3819,
        3849
      ],
      "op": "JUMPDEST",
      "path": "9"
    },
    "4983": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x12F1"
    },
    "4986": {
      "branch": 82,
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "JUMPI",
      "path": "9"
    },
    "4987": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x40"
    },
    "4989": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MLOAD",
      "path": "9"
    },
    "4990": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH32",
      "path": "9",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "5023": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP2",
      "path": "9"
    },
    "5024": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "MSTORE",
      "path": "9"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5027": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH1",
      "path": "9",
      "value": "0x4"
    },
    "5029": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "DUP3",
      "path": "9"
    },
    "5030": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "ADD",
      "path": "9"
    },
    "5031": {
      "op": "MSTORE"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "5034": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5036": {
      "op": "DUP3"
    },
    "5037": {
      "op": "ADD"
    },
    "5038": {
      "op": "MSTORE"
    },
    "5039": {
      "op": "PUSH32",
      "value": "0x5361666545524332303A204552433230206F7065726174696F6E20646964206E"
    },
    "5072": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5074": {
      "op": "DUP3"
    },
    "5075": {
      "op": "ADD"
    },
    "5076": {
      "op": "MSTORE"
    },
    "5077": {
      "op": "PUSH32",
      "value": "0x6F74207375636365656400000000000000000000000000000000000000000000"
    },
    "5110": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5112": {
      "op": "DUP3"
    },
    "5113": {
      "op": "ADD"
    },
    "5114": {
      "op": "MSTORE"
    },
    "5115": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5117": {
      "op": "ADD"
    },
    "5118": {
      "fn": "SafeERC20._callOptionalReturn",
      "offset": [
        3811,
        3896
      ],
      "op": "PUSH2",
      "path": "9",
      "value": "0x8DD"
    },
    "5121": {
      "op": "JUMP"
    },
    "5122": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5123": {
      "fn": "Address.functionCall",
      "offset": [
        3994,
        4006
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "5125": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 56,
      "value": "0x1411"
    },
    "5128": {
      "fn": "Address.functionCall",
      "offset": [
        4047,
        4053
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5129": {
      "fn": "Address.functionCall",
      "offset": [
        4055,
        4059
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5130": {
      "fn": "Address.functionCall",
      "offset": [
        4061,
        4062
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5132": {
      "fn": "Address.functionCall",
      "offset": [
        4064,
        4076
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5133": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4046
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1419"
    },
    "5136": {
      "fn": "Address.functionCall",
      "jump": "i",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5137": {
      "fn": "Address.functionCall",
      "offset": [
        4025,
        4077
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5138": {
      "fn": "Address.functionCall",
      "offset": [
        4018,
        4077
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "5139": {
      "fn": "Address.functionCall",
      "offset": [
        3861,
        4084
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "5140": {
      "op": "POP"
    },
    "5141": {
      "op": "POP"
    },
    "5142": {
      "op": "POP"
    },
    "5143": {
      "op": "POP"
    },
    "5144": {
      "fn": "Address.functionCall",
      "jump": "o",
      "offset": [
        3861,
        4084
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5145": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5146": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5113,
        5125
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "5148": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5170,
        5175
      ],
      "op": "DUP3",
      "path": "10",
      "statement": 57
    },
    "5149": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5166
      ],
      "op": "SELFBALANCE",
      "path": "10"
    },
    "5150": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "LT",
      "path": "10"
    },
    "5151": {
      "branch": 70,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5145,
        5175
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5152": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14AB"
    },
    "5155": {
      "branch": 70,
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5156": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5158": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5159": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "5192": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5193": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5194": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5196": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5198": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5199": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "ADD",
      "path": "10"
    },
    "5200": {
      "op": "MSTORE"
    },
    "5201": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "5203": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5205": {
      "op": "DUP3"
    },
    "5206": {
      "op": "ADD"
    },
    "5207": {
      "op": "MSTORE"
    },
    "5208": {
      "op": "PUSH32",
      "value": "0x416464726573733A20696E73756666696369656E742062616C616E636520666F"
    },
    "5241": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5243": {
      "op": "DUP3"
    },
    "5244": {
      "op": "ADD"
    },
    "5245": {
      "op": "MSTORE"
    },
    "5246": {
      "op": "PUSH32",
      "value": "0x722063616C6C0000000000000000000000000000000000000000000000000000"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5281": {
      "op": "DUP3"
    },
    "5282": {
      "op": "ADD"
    },
    "5283": {
      "op": "MSTORE"
    },
    "5284": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5286": {
      "op": "ADD"
    },
    "5287": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8DD"
    },
    "5290": {
      "op": "JUMP"
    },
    "5291": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5137,
        5218
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5292": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "PUSH20",
      "path": "10",
      "statement": 58,
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "5313": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5314": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "AND",
      "path": "10"
    },
    "5315": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "5316": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 59,
      "value": "0x1529"
    },
    "5319": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5320": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5322": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5323": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "5356": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5357": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5358": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5360": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5362": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5363": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "ADD",
      "path": "10"
    },
    "5364": {
      "op": "MSTORE"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5369": {
      "op": "DUP3"
    },
    "5370": {
      "op": "ADD"
    },
    "5371": {
      "op": "MSTORE"
    },
    "5372": {
      "op": "PUSH32",
      "value": "0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
    },
    "5405": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5407": {
      "op": "DUP3"
    },
    "5408": {
      "op": "ADD"
    },
    "5409": {
      "op": "MSTORE"
    },
    "5410": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5412": {
      "op": "ADD"
    },
    "5413": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8DD"
    },
    "5416": {
      "op": "JUMP"
    },
    "5417": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5228,
        5288
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5418": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5300,
        5312
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5420": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5314,
        5337
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5421": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5347
      ],
      "op": "DUP7",
      "path": "10"
    },
    "5422": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "PUSH20",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "5443": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "10"
    },
    "5444": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5360,
        5365
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5445": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5367,
        5371
      ],
      "op": "DUP8",
      "path": "10"
    },
    "5446": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5448": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5449": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1552"
    },
    "5452": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5453": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5454": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x18CE"
    },
    "5457": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5458": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5459": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5461": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5463": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5464": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5465": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5466": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SUB",
      "path": "10"
    },
    "5467": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5468": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP6",
      "path": "10"
    },
    "5469": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP8",
      "path": "10"
    },
    "5470": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "GAS",
      "path": "10"
    },
    "5471": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "CALL",
      "path": "10"
    },
    "5472": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "5473": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "10"
    },
    "5474": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "10"
    },
    "5475": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "10"
    },
    "5476": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5477": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5478": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5480": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5481": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "EQ",
      "path": "10"
    },
    "5482": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x158F"
    },
    "5485": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5486": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5488": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5489": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5490": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "10"
    },
    "5491": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "5493": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "NOT",
      "path": "10"
    },
    "5494": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3F"
    },
    "5496": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5497": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "10"
    },
    "5498": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "AND",
      "path": "10"
    },
    "5499": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5500": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "10"
    },
    "5501": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5503": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5504": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5505": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5506": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5507": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "5508": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "5510": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5512": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5513": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "ADD",
      "path": "10"
    },
    "5514": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "5515": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1594"
    },
    "5518": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5519": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5520": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "5522": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5523": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "10"
    },
    "5524": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5525": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5341,
        5372
      ],
      "op": "POP",
      "path": "10"
    },
    "5526": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5527": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "10"
    },
    "5528": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5529": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5299,
        5372
      ],
      "op": "POP",
      "path": "10"
    },
    "5530": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 60,
      "value": "0x15A4"
    },
    "5533": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5406,
        5413
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5534": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5415,
        5425
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5535": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5427,
        5439
      ],
      "op": "DUP7",
      "path": "10"
    },
    "5536": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5405
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15AF"
    },
    "5539": {
      "fn": "Address.functionCallWithValue",
      "jump": "i",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5540": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5389,
        5440
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5541": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        5382,
        5440
      ],
      "op": "SWAP8",
      "path": "10"
    },
    "5542": {
      "fn": "Address.functionCallWithValue",
      "offset": [
        4948,
        5447
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "5543": {
      "op": "POP"
    },
    "5544": {
      "op": "POP"
    },
    "5545": {
      "op": "POP"
    },
    "5546": {
      "op": "POP"
    },
    "5547": {
      "op": "POP"
    },
    "5548": {
      "op": "POP"
    },
    "5549": {
      "op": "POP"
    },
    "5550": {
      "fn": "Address.functionCallWithValue",
      "jump": "o",
      "offset": [
        4948,
        5447
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5551": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7561,
        8253
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5552": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7707,
        7719
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "5554": {
      "branch": 71,
      "fn": "Address.verifyCallResult",
      "offset": [
        7735,
        7742
      ],
      "op": "DUP4",
      "path": "10"
    },
    "5555": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5556": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15BE"
    },
    "5559": {
      "branch": 71,
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5560": {
      "op": "POP"
    },
    "5561": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7765,
        7775
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 61
    },
    "5562": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x681"
    },
    "5565": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7758,
        7775
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5566": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7731,
        8247
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5567": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5568": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7893
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5569": {
      "branch": 72,
      "fn": "Address.verifyCallResult",
      "offset": [
        7876,
        7897
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "5570": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x15CE"
    },
    "5573": {
      "branch": 72,
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "5574": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8070,
        8080
      ],
      "op": "DUP3",
      "path": "10"
    },
    "5575": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8064,
        8081
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5576": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8130,
        8145
      ],
      "op": "DUP1",
      "path": "10"
    },
    "5577": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8117,
        8127
      ],
      "op": "DUP5",
      "path": "10"
    },
    "5578": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8113,
        8115
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "5580": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8109,
        8128
      ],
      "op": "ADD",
      "path": "10"
    },
    "5581": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8102,
        8146
      ],
      "op": "REVERT",
      "path": "10"
    },
    "5582": {
      "fn": "Address.verifyCallResult",
      "offset": [
        7872,
        8237
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "5583": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8209,
        8221
      ],
      "op": "DUP2",
      "path": "10",
      "statement": 62
    },
    "5584": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "5586": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "5587": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x8C379A000000000000000000000000000000000000000000000000000000000"
    },
    "5620": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "DUP2",
      "path": "10"
    },
    "5621": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5622": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "5624": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "ADD",
      "path": "10"
    },
    "5625": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8DD"
    },
    "5628": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "5629": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "5630": {
      "fn": "Address.verifyCallResult",
      "offset": [
        8202,
        8222
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x163F"
    },
    "5633": {
      "fn": "Address.verifyCallResult",
      "jump": "i",
      "offset": [
        8202,
        8222
      ],
      "op": "JUMP",
      "path": "10"
    },
    "5634": {
      "op": "JUMPDEST"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5639": {
      "op": "DUP3"
    },
    "5640": {
      "op": "DUP5"
    },
    "5641": {
      "op": "SUB"
    },
    "5642": {
      "op": "SLT"
    },
    "5643": {
      "op": "ISZERO"
    },
    "5644": {
      "op": "PUSH2",
      "value": "0x1614"
    },
    "5647": {
      "op": "JUMPI"
    },
    "5648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5650": {
      "op": "DUP1"
    },
    "5651": {
      "op": "REVERT"
    },
    "5652": {
      "op": "JUMPDEST"
    },
    "5653": {
      "op": "POP"
    },
    "5654": {
      "op": "CALLDATALOAD"
    },
    "5655": {
      "op": "SWAP2"
    },
    "5656": {
      "op": "SWAP1"
    },
    "5657": {
      "op": "POP"
    },
    "5658": {
      "jump": "o",
      "op": "JUMP"
    },
    "5659": {
      "op": "JUMPDEST"
    },
    "5660": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5662": {
      "op": "JUMPDEST"
    },
    "5663": {
      "op": "DUP4"
    },
    "5664": {
      "op": "DUP2"
    },
    "5665": {
      "op": "LT"
    },
    "5666": {
      "op": "ISZERO"
    },
    "5667": {
      "op": "PUSH2",
      "value": "0x1636"
    },
    "5670": {
      "op": "JUMPI"
    },
    "5671": {
      "op": "DUP2"
    },
    "5672": {
      "op": "DUP2"
    },
    "5673": {
      "op": "ADD"
    },
    "5674": {
      "op": "MLOAD"
    },
    "5675": {
      "op": "DUP4"
    },
    "5676": {
      "op": "DUP3"
    },
    "5677": {
      "op": "ADD"
    },
    "5678": {
      "op": "MSTORE"
    },
    "5679": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5681": {
      "op": "ADD"
    },
    "5682": {
      "op": "PUSH2",
      "value": "0x161E"
    },
    "5685": {
      "op": "JUMP"
    },
    "5686": {
      "op": "JUMPDEST"
    },
    "5687": {
      "op": "POP"
    },
    "5688": {
      "op": "POP"
    },
    "5689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5691": {
      "op": "SWAP2"
    },
    "5692": {
      "op": "ADD"
    },
    "5693": {
      "op": "MSTORE"
    },
    "5694": {
      "jump": "o",
      "op": "JUMP"
    },
    "5695": {
      "op": "JUMPDEST"
    },
    "5696": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5698": {
      "op": "DUP2"
    },
    "5699": {
      "op": "MSTORE"
    },
    "5700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5702": {
      "op": "DUP3"
    },
    "5703": {
      "op": "MLOAD"
    },
    "5704": {
      "op": "DUP1"
    },
    "5705": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5707": {
      "op": "DUP5"
    },
    "5708": {
      "op": "ADD"
    },
    "5709": {
      "op": "MSTORE"
    },
    "5710": {
      "op": "PUSH2",
      "value": "0x165E"
    },
    "5713": {
      "op": "DUP2"
    },
    "5714": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5716": {
      "op": "DUP6"
    },
    "5717": {
      "op": "ADD"
    },
    "5718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5720": {
      "op": "DUP8"
    },
    "5721": {
      "op": "ADD"
    },
    "5722": {
      "op": "PUSH2",
      "value": "0x161B"
    },
    "5725": {
      "jump": "i",
      "op": "JUMP"
    },
    "5726": {
      "op": "JUMPDEST"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5729": {
      "op": "ADD"
    },
    "5730": {
      "op": "PUSH32",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
    },
    "5763": {
      "op": "AND"
    },
    "5764": {
      "op": "SWAP2"
    },
    "5765": {
      "op": "SWAP1"
    },
    "5766": {
      "op": "SWAP2"
    },
    "5767": {
      "op": "ADD"
    },
    "5768": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5770": {
      "op": "ADD"
    },
    "5771": {
      "op": "SWAP3"
    },
    "5772": {
      "op": "SWAP2"
    },
    "5773": {
      "op": "POP"
    },
    "5774": {
      "op": "POP"
    },
    "5775": {
      "jump": "o",
      "op": "JUMP"
    },
    "5776": {
      "op": "JUMPDEST"
    },
    "5777": {
      "op": "DUP1"
    },
    "5778": {
      "op": "CALLDATALOAD"
    },
    "5779": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "5800": {
      "op": "DUP2"
    },
    "5801": {
      "op": "AND"
    },
    "5802": {
      "op": "DUP2"
    },
    "5803": {
      "op": "EQ"
    },
    "5804": {
      "op": "PUSH2",
      "value": "0x16B4"
    },
    "5807": {
      "op": "JUMPI"
    },
    "5808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5810": {
      "op": "DUP1"
    },
    "5811": {
      "op": "REVERT"
    },
    "5812": {
      "op": "JUMPDEST"
    },
    "5813": {
      "op": "SWAP2"
    },
    "5814": {
      "op": "SWAP1"
    },
    "5815": {
      "op": "POP"
    },
    "5816": {
      "jump": "o",
      "op": "JUMP"
    },
    "5817": {
      "op": "JUMPDEST"
    },
    "5818": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5820": {
      "op": "DUP1"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5823": {
      "op": "DUP4"
    },
    "5824": {
      "op": "DUP6"
    },
    "5825": {
      "op": "SUB"
    },
    "5826": {
      "op": "SLT"
    },
    "5827": {
      "op": "ISZERO"
    },
    "5828": {
      "op": "PUSH2",
      "value": "0x16CC"
    },
    "5831": {
      "op": "JUMPI"
    },
    "5832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5834": {
      "op": "DUP1"
    },
    "5835": {
      "op": "REVERT"
    },
    "5836": {
      "op": "JUMPDEST"
    },
    "5837": {
      "op": "PUSH2",
      "value": "0x16D5"
    },
    "5840": {
      "op": "DUP4"
    },
    "5841": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "5844": {
      "jump": "i",
      "op": "JUMP"
    },
    "5845": {
      "op": "JUMPDEST"
    },
    "5846": {
      "op": "SWAP5"
    },
    "5847": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5849": {
      "op": "SWAP4"
    },
    "5850": {
      "op": "SWAP1"
    },
    "5851": {
      "op": "SWAP4"
    },
    "5852": {
      "op": "ADD"
    },
    "5853": {
      "op": "CALLDATALOAD"
    },
    "5854": {
      "op": "SWAP4"
    },
    "5855": {
      "op": "POP"
    },
    "5856": {
      "op": "POP"
    },
    "5857": {
      "op": "POP"
    },
    "5858": {
      "jump": "o",
      "op": "JUMP"
    },
    "5859": {
      "op": "JUMPDEST"
    },
    "5860": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5862": {
      "op": "DUP1"
    },
    "5863": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5865": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5867": {
      "op": "DUP5"
    },
    "5868": {
      "op": "DUP7"
    },
    "5869": {
      "op": "SUB"
    },
    "5870": {
      "op": "SLT"
    },
    "5871": {
      "op": "ISZERO"
    },
    "5872": {
      "op": "PUSH2",
      "value": "0x16F8"
    },
    "5875": {
      "op": "JUMPI"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5878": {
      "op": "DUP1"
    },
    "5879": {
      "op": "REVERT"
    },
    "5880": {
      "op": "JUMPDEST"
    },
    "5881": {
      "op": "PUSH2",
      "value": "0x1701"
    },
    "5884": {
      "op": "DUP5"
    },
    "5885": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "5888": {
      "jump": "i",
      "op": "JUMP"
    },
    "5889": {
      "op": "JUMPDEST"
    },
    "5890": {
      "op": "SWAP3"
    },
    "5891": {
      "op": "POP"
    },
    "5892": {
      "op": "PUSH2",
      "value": "0x170F"
    },
    "5895": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5897": {
      "op": "DUP6"
    },
    "5898": {
      "op": "ADD"
    },
    "5899": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "5902": {
      "jump": "i",
      "op": "JUMP"
    },
    "5903": {
      "op": "JUMPDEST"
    },
    "5904": {
      "op": "SWAP2"
    },
    "5905": {
      "op": "POP"
    },
    "5906": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5908": {
      "op": "DUP5"
    },
    "5909": {
      "op": "ADD"
    },
    "5910": {
      "op": "CALLDATALOAD"
    },
    "5911": {
      "op": "SWAP1"
    },
    "5912": {
      "op": "POP"
    },
    "5913": {
      "op": "SWAP3"
    },
    "5914": {
      "op": "POP"
    },
    "5915": {
      "op": "SWAP3"
    },
    "5916": {
      "op": "POP"
    },
    "5917": {
      "op": "SWAP3"
    },
    "5918": {
      "jump": "o",
      "op": "JUMP"
    },
    "5919": {
      "op": "JUMPDEST"
    },
    "5920": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5924": {
      "op": "DUP3"
    },
    "5925": {
      "op": "DUP5"
    },
    "5926": {
      "op": "SUB"
    },
    "5927": {
      "op": "SLT"
    },
    "5928": {
      "op": "ISZERO"
    },
    "5929": {
      "op": "PUSH2",
      "value": "0x1731"
    },
    "5932": {
      "op": "JUMPI"
    },
    "5933": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5935": {
      "op": "DUP1"
    },
    "5936": {
      "op": "REVERT"
    },
    "5937": {
      "op": "JUMPDEST"
    },
    "5938": {
      "op": "PUSH2",
      "value": "0x681"
    },
    "5941": {
      "op": "DUP3"
    },
    "5942": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "5945": {
      "jump": "i",
      "op": "JUMP"
    },
    "5946": {
      "op": "JUMPDEST"
    },
    "5947": {
      "op": "DUP1"
    },
    "5948": {
      "op": "ISZERO"
    },
    "5949": {
      "op": "ISZERO"
    },
    "5950": {
      "op": "DUP2"
    },
    "5951": {
      "op": "EQ"
    },
    "5952": {
      "op": "PUSH2",
      "value": "0x1748"
    },
    "5955": {
      "op": "JUMPI"
    },
    "5956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5958": {
      "op": "DUP1"
    },
    "5959": {
      "op": "REVERT"
    },
    "5960": {
      "op": "JUMPDEST"
    },
    "5961": {
      "op": "POP"
    },
    "5962": {
      "jump": "o",
      "op": "JUMP"
    },
    "5963": {
      "op": "JUMPDEST"
    },
    "5964": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5966": {
      "op": "DUP1"
    },
    "5967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5969": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5971": {
      "op": "DUP5"
    },
    "5972": {
      "op": "DUP7"
    },
    "5973": {
      "op": "SUB"
    },
    "5974": {
      "op": "SLT"
    },
    "5975": {
      "op": "ISZERO"
    },
    "5976": {
      "op": "PUSH2",
      "value": "0x1760"
    },
    "5979": {
      "op": "JUMPI"
    },
    "5980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5982": {
      "op": "DUP1"
    },
    "5983": {
      "op": "REVERT"
    },
    "5984": {
      "op": "JUMPDEST"
    },
    "5985": {
      "op": "DUP4"
    },
    "5986": {
      "op": "CALLDATALOAD"
    },
    "5987": {
      "op": "SWAP3"
    },
    "5988": {
      "op": "POP"
    },
    "5989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5991": {
      "op": "DUP5"
    },
    "5992": {
      "op": "ADD"
    },
    "5993": {
      "op": "CALLDATALOAD"
    },
    "5994": {
      "op": "SWAP2"
    },
    "5995": {
      "op": "POP"
    },
    "5996": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5998": {
      "op": "DUP5"
    },
    "5999": {
      "op": "ADD"
    },
    "6000": {
      "op": "CALLDATALOAD"
    },
    "6001": {
      "op": "PUSH2",
      "value": "0x1779"
    },
    "6004": {
      "op": "DUP2"
    },
    "6005": {
      "op": "PUSH2",
      "value": "0x173A"
    },
    "6008": {
      "jump": "i",
      "op": "JUMP"
    },
    "6009": {
      "op": "JUMPDEST"
    },
    "6010": {
      "op": "DUP1"
    },
    "6011": {
      "op": "SWAP2"
    },
    "6012": {
      "op": "POP"
    },
    "6013": {
      "op": "POP"
    },
    "6014": {
      "op": "SWAP3"
    },
    "6015": {
      "op": "POP"
    },
    "6016": {
      "op": "SWAP3"
    },
    "6017": {
      "op": "POP"
    },
    "6018": {
      "op": "SWAP3"
    },
    "6019": {
      "jump": "o",
      "op": "JUMP"
    },
    "6020": {
      "op": "JUMPDEST"
    },
    "6021": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6023": {
      "op": "DUP1"
    },
    "6024": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6026": {
      "op": "DUP4"
    },
    "6027": {
      "op": "DUP6"
    },
    "6028": {
      "op": "SUB"
    },
    "6029": {
      "op": "SLT"
    },
    "6030": {
      "op": "ISZERO"
    },
    "6031": {
      "op": "PUSH2",
      "value": "0x1797"
    },
    "6034": {
      "op": "JUMPI"
    },
    "6035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6037": {
      "op": "DUP1"
    },
    "6038": {
      "op": "REVERT"
    },
    "6039": {
      "op": "JUMPDEST"
    },
    "6040": {
      "op": "PUSH2",
      "value": "0x17A0"
    },
    "6043": {
      "op": "DUP4"
    },
    "6044": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "6047": {
      "jump": "i",
      "op": "JUMP"
    },
    "6048": {
      "op": "JUMPDEST"
    },
    "6049": {
      "op": "SWAP2"
    },
    "6050": {
      "op": "POP"
    },
    "6051": {
      "op": "PUSH2",
      "value": "0x17AE"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6056": {
      "op": "DUP5"
    },
    "6057": {
      "op": "ADD"
    },
    "6058": {
      "op": "PUSH2",
      "value": "0x1690"
    },
    "6061": {
      "jump": "i",
      "op": "JUMP"
    },
    "6062": {
      "op": "JUMPDEST"
    },
    "6063": {
      "op": "SWAP1"
    },
    "6064": {
      "op": "POP"
    },
    "6065": {
      "op": "SWAP3"
    },
    "6066": {
      "op": "POP"
    },
    "6067": {
      "op": "SWAP3"
    },
    "6068": {
      "op": "SWAP1"
    },
    "6069": {
      "op": "POP"
    },
    "6070": {
      "jump": "o",
      "op": "JUMP"
    },
    "6071": {
      "op": "JUMPDEST"
    },
    "6072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6074": {
      "op": "DUP2"
    },
    "6075": {
      "op": "DUP2"
    },
    "6076": {
      "op": "SHR"
    },
    "6077": {
      "op": "SWAP1"
    },
    "6078": {
      "op": "DUP3"
    },
    "6079": {
      "op": "AND"
    },
    "6080": {
      "op": "DUP1"
    },
    "6081": {
      "op": "PUSH2",
      "value": "0x17CB"
    },
    "6084": {
      "op": "JUMPI"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "6087": {
      "op": "DUP3"
    },
    "6088": {
      "op": "AND"
    },
    "6089": {
      "op": "SWAP2"
    },
    "6090": {
      "op": "POP"
    },
    "6091": {
      "op": "JUMPDEST"
    },
    "6092": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6094": {
      "op": "DUP3"
    },
    "6095": {
      "op": "LT"
    },
    "6096": {
      "op": "DUP2"
    },
    "6097": {
      "op": "SUB"
    },
    "6098": {
      "op": "PUSH2",
      "value": "0x1804"
    },
    "6101": {
      "op": "JUMPI"
    },
    "6102": {
      "op": "PUSH32",
      "value": "0x4E487B7100000000000000000000000000000000000000000000000000000000"
    },
    "6135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6137": {
      "op": "MSTORE"
    },
    "6138": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6142": {
      "op": "MSTORE"
    },
    "6143": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6147": {
      "op": "REVERT"
    },
    "6148": {
      "op": "JUMPDEST"
    },
    "6149": {
      "op": "POP"
    },
    "6150": {
      "op": "SWAP2"
    },
    "6151": {
      "op": "SWAP1"
    },
    "6152": {
      "op": "POP"
    },
    "6153": {
      "jump": "o",
      "op": "JUMP"
    },
    "6154": {
      "op": "JUMPDEST"
    },
    "6155": {
      "op": "PUSH32",
      "value": "0x4E487B7100000000000000000000000000000000000000000000000000000000"
    },
    "6188": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6190": {
      "op": "MSTORE"
    },
    "6191": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6193": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6195": {
      "op": "MSTORE"
    },
    "6196": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6198": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6200": {
      "op": "REVERT"
    },
    "6201": {
      "op": "JUMPDEST"
    },
    "6202": {
      "op": "DUP1"
    },
    "6203": {
      "op": "DUP3"
    },
    "6204": {
      "op": "ADD"
    },
    "6205": {
      "op": "DUP1"
    },
    "6206": {
      "op": "DUP3"
    },
    "6207": {
      "op": "GT"
    },
    "6208": {
      "op": "ISZERO"
    },
    "6209": {
      "op": "PUSH2",
      "value": "0x5E1"
    },
    "6212": {
      "op": "JUMPI"
    },
    "6213": {
      "op": "PUSH2",
      "value": "0x5E1"
    },
    "6216": {
      "op": "PUSH2",
      "value": "0x180A"
    },
    "6219": {
      "jump": "i",
      "op": "JUMP"
    },
    "6220": {
      "op": "JUMPDEST"
    },
    "6221": {
      "op": "DUP2"
    },
    "6222": {
      "op": "DUP2"
    },
    "6223": {
      "op": "SUB"
    },
    "6224": {
      "op": "DUP2"
    },
    "6225": {
      "op": "DUP2"
    },
    "6226": {
      "op": "GT"
    },
    "6227": {
      "op": "ISZERO"
    },
    "6228": {
      "op": "PUSH2",
      "value": "0x5E1"
    },
    "6231": {
      "op": "JUMPI"
    },
    "6232": {
      "op": "PUSH2",
      "value": "0x5E1"
    },
    "6235": {
      "op": "PUSH2",
      "value": "0x180A"
    },
    "6238": {
      "jump": "i",
      "op": "JUMP"
    },
    "6239": {
      "op": "JUMPDEST"
    },
    "6240": {
      "op": "DUP1"
    },
    "6241": {
      "op": "DUP3"
    },
    "6242": {
      "op": "MUL"
    },
    "6243": {
      "op": "DUP2"
    },
    "6244": {
      "op": "ISZERO"
    },
    "6245": {
      "op": "DUP3"
    },
    "6246": {
      "op": "DUP3"
    },
    "6247": {
      "op": "DIV"
    },
    "6248": {
      "op": "DUP5"
    },
    "6249": {
      "op": "EQ"
    },
    "6250": {
      "op": "OR"
    },
    "6251": {
      "op": "PUSH2",
      "value": "0x5E1"
    },
    "6254": {
      "op": "JUMPI"
    },
    "6255": {
      "op": "PUSH2",
      "value": "0x5E1"
    },
    "6258": {
      "op": "PUSH2",
      "value": "0x180A"
    },
    "6261": {
      "jump": "i",
      "op": "JUMP"
    },
    "6262": {
      "op": "JUMPDEST"
    },
    "6263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6265": {
      "op": "DUP3"
    },
    "6266": {
      "op": "PUSH2",
      "value": "0x18AC"
    },
    "6269": {
      "op": "JUMPI"
    },
    "6270": {
      "op": "PUSH32",
      "value": "0x4E487B7100000000000000000000000000000000000000000000000000000000"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6305": {
      "op": "MSTORE"
    },
    "6306": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6310": {
      "op": "MSTORE"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6315": {
      "op": "REVERT"
    },
    "6316": {
      "op": "JUMPDEST"
    },
    "6317": {
      "op": "POP"
    },
    "6318": {
      "op": "DIV"
    },
    "6319": {
      "op": "SWAP1"
    },
    "6320": {
      "jump": "o",
      "op": "JUMP"
    },
    "6321": {
      "op": "JUMPDEST"
    },
    "6322": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6324": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6326": {
      "op": "DUP3"
    },
    "6327": {
      "op": "DUP5"
    },
    "6328": {
      "op": "SUB"
    },
    "6329": {
      "op": "SLT"
    },
    "6330": {
      "op": "ISZERO"
    },
    "6331": {
      "op": "PUSH2",
      "value": "0x18C3"
    },
    "6334": {
      "op": "JUMPI"
    },
    "6335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6337": {
      "op": "DUP1"
    },
    "6338": {
      "op": "REVERT"
    },
    "6339": {
      "op": "JUMPDEST"
    },
    "6340": {
      "op": "DUP2"
    },
    "6341": {
      "op": "MLOAD"
    },
    "6342": {
      "op": "PUSH2",
      "value": "0x681"
    },
    "6345": {
      "op": "DUP2"
    },
    "6346": {
      "op": "PUSH2",
      "value": "0x173A"
    },
    "6349": {
      "jump": "i",
      "op": "JUMP"
    },
    "6350": {
      "op": "JUMPDEST"
    },
    "6351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6353": {
      "op": "DUP3"
    },
    "6354": {
      "op": "MLOAD"
    },
    "6355": {
      "op": "PUSH2",
      "value": "0x18E0"
    },
    "6358": {
      "op": "DUP2"
    },
    "6359": {
      "op": "DUP5"
    },
    "6360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6362": {
      "op": "DUP8"
    },
    "6363": {
      "op": "ADD"
    },
    "6364": {
      "op": "PUSH2",
      "value": "0x161B"
    },
    "6367": {
      "jump": "i",
      "op": "JUMP"
    },
    "6368": {
      "op": "JUMPDEST"
    },
    "6369": {
      "op": "SWAP2"
    },
    "6370": {
      "op": "SWAP1"
    },
    "6371": {
      "op": "SWAP2"
    },
    "6372": {
      "op": "ADD"
    },
    "6373": {
      "op": "SWAP3"
    },
    "6374": {
      "op": "SWAP2"
    },
    "6375": {
      "op": "POP"
    },
    "6376": {
      "op": "POP"
    },
    "6377": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "35d1df4dae8936aef42feacf545a88568b1d732c",
  "source": "//SPDX-License-Identifier: Unlicsened\n\npragma solidity ^0.8.17;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"./FixedPointMath.sol\";\nimport \"./CatalystIBCInterface.sol\";\nimport \"./IOnCatalyst.sol\";\n\n/**\n * @title Catalyst: The Multi-Chain Swap Pool Base\n * @author Catalyst Labs\n */\ncontract CatalystSwapPoolCore is CatalystFixedPointMath, ERC20 {\n    using SafeERC20 for IERC20;\n\n    //--- ERRORS ---//\n    string constant EXCEEDS_SECURITY_LIMIT =\n        \"Swap exceeds maximum swap amount. Please wait\";\n    string constant SWAP_RETURN_INSUFFICIENT = \"Insufficient swap return\";\n    string constant BALANCE_SECURITY_LIMIT =\n        \"Pool sanity limit (Balance too large)\";\n\n    //--- Config ---//\n    // The following section contains the configurable variables.\n\n    /// @notice Determines how fast the security limit decreases.\n    /// @dev\n    ///     Needs to be long enough for pool token providers to be notified\n    ///     of a beach but short enough for volatility to not soft-freeze the pool.\n    uint256 constant DECAYRATE = 60 * 60 * 24;\n\n    /// @notice Maximum number of assets suppoed\n    uint8 constant NUMASSETS = 3;\n\n    //--- Structs ---//\n    struct TokenEscrow {\n        address user;\n        uint256 amount;\n        address token;\n    }\n\n    /**\n     * @notice  Describes an atomic swap between the 2 tokens: _fromAsset and _toAsset.\n     * @dev Explain to a developer any extra details\n     * @param who The user / exchange who facilitated the trade (msg.sender)\n     * @param fromAsset The asset which was sold in exchange for _toAsset\n     * @param toAsset The asset which was purchased with _fromAsset\n     * @param input The number of _fromAsset sold\n     * @param output The number of tokens provided to _who\n     * @param fees  The pool fee. Taken from the input. Numerical losses/fees are for obvious reasons not included.\n     */\n    event LocalSwap(\n        address indexed who,\n        address indexed fromAsset,\n        address toAsset,\n        uint256 input,\n        uint256 output,\n        uint256 fees\n    );\n\n    /**\n     * @notice Describes the creation of an external swap: Cross-chain swap.\n     * @dev If _fromAsset is the proxy contract or _toAsset is 2**8-1, the swap is a liquidity swap.\n     * @param targetPool The target pool.\n     * @param targetUser The recipient of the trade. The person who bought the trade is not present.\n     * @param fromAsset The asset which was sold in exchange for _toAsset.\n     * @param toAssetIndex The token index of the asset to purchase on _toChain.\n     * @param input The number of _fromAsset sold\n     * @param output The calculated number of units bought. Will be sold to buy _toAsset\n     * @param fees The pool fee. Taken from the input. Numerical losses/fees are for obvious reasons not included.\n     */\n    event SwapToUnits(\n        bytes32 indexed targetPool,\n        bytes32 indexed targetUser,\n        address indexed fromAsset,\n        uint8 toAssetIndex,\n        uint256 input,\n        uint256 output,\n        uint256 fees,\n        uint32 sourceSwapId\n    );\n\n    /**\n     * @notice Describes the arrival of an external swap: Cross-chain swap.\n     * @dev If _fromAsset is the proxy contract, the swap is a liquidity swap.\n     * @param who The recipient of the trade.\n     * @param toAsset The asset which was purchased with _fromAsset\n     * @param input The number of units sent from the other chain.\n     * @param output The number of tokens provided to _who\n     */\n    event SwapFromUnits(\n        address indexed who,\n        address indexed toAsset,\n        uint256 input,\n        uint256 output\n    );\n\n    /**\n     * @notice Emitted on liquidity deposits.\n     * @dev Explain to a developer any extra details\n     * @param who The depositor. Is credited with _mints pool tokens.\n     * @param mint The number of minted pool tokens credited to _who\n     * @param assets An array of the number of deposited assets.\n     */\n    event Deposit(address indexed who, uint256 mint, uint256[] assets);\n\n    /**\n     * @notice Emitted on liquidity withdrawal.\n     * @dev Explain to a developer any extra details\n     * @param who The withdrawer. Is debited _burns pool tokens.\n     * @param burn The number of burned pool tokens.\n     * @param assets An array of the token amounts returned\n     */\n    event Withdraw(address indexed who, uint256 burn, uint256[] assets);\n\n    /** @notice Called upon successful swap. */\n    event EscrowAck(uint256 sourceSwapId);\n\n    /** @notice Called upon failed swap. */\n    event EscrowTimeout(uint256 sourceSwapId);\n\n    //-- Variables --//\n\n    address public _chaininterface;\n\n    /// @notice\n    ///     If the pool has no cross chain connection, this is true.\n    ///     Should not be trusted if setupMaster != ZERO_ADDRESS\n    bool public _onlyLocal = true;\n\n    /// @notice\n    ///     To indicate which token is desired on the target pool,\n    ///     the _toAsset is an integer from 0 to NUMASSETS indicating\n    ///     which asset the pool should purchase with units.\n    mapping(uint256 => address) public _tokenIndexing;\n\n    /// @notice Liquidity reference.\n    mapping(address => uint256) public _balance0;\n\n    /// @notice The token weights. Used for maintaining a non symmetric pool balance.\n    mapping(address => uint256) public _weight;\n    uint256 public _sumWeights;\n\n    /// @notice The pool fee in X64. Implementation of fee: self.pMULX64(_amount, self.poolFeeX64)\n    uint256 _poolFeeX64;\n\n    /// @notice The setupMaster is the short-term owner of the pool.\n    ///     They can connect the pool to pools on other chains.\n    address public _setupMaster;\n\n    //--- Messaging router limit ---//\n    // The router is not completely trusted. Some limits are\n    // imposed on the DECAYRATE-ly unidirectional liquidity flow. That is:\n    // if the pool observes more than self.max_unit_inflow of incoming\n    // units, then it will not accept further volume. This means the router\n    // can only drain a prefigured percentage of the pool every DECAYRATE\n\n    // Outgoing flow is subtracted incoming flow until 0.\n\n    /// @notice The max incoming liquidity flow from the router.\n    uint256 public _max_unit_inflow;\n    // max_liquidity_unit_inflow: public(uint256) = totalSupply / 2\n    uint256 _unit_flow;\n    uint256 _last_change;\n    uint256 _liquidity_flow;\n    uint256 _last_liquidity_change;\n\n    // Escrow reference\n    /// @notice Escrow storage\n    mapping(address => uint256) public _escrowedTokens;\n    /// @notice Escrow storage\n    mapping(uint256 => TokenEscrow) public _escrowedFor;\n    /// @notice Iterator used to index new escrow information.\n    uint256 _escrowIterator;\n\n    bool _CHECK;\n\n    constructor() ERC20(\"\", \"\") {\n        _CHECK = true;\n    }\n\n    // Overriding the name and symbol storage variables\n    string private _name;\n    string private _symbol;\n\n    function name() public view override returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view override returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public pure override returns (uint8) {\n        return 18;\n    }\n\n    /** @notice Setup a pool. */\n    function setupBase(\n        string calldata name_,\n        string calldata symbol_,\n        address chaininterface,\n        address setupMaster\n    ) internal {\n        _mint(setupMaster, ONE);\n        // The pool is only designed to be used by a proxy and not as a standalone.\n        // as a result self.check is set to TRUE on init, to stop anyone from using\n        // the pool without a proxy.\n        require(!_CHECK); // dev: Pool Already setup.\n        _CHECK = true;\n\n        _chaininterface = chaininterface;\n        _setupMaster = setupMaster;\n\n        // Names the ERC20 pool token //\n        _name = name_;\n        _symbol = symbol_;\n        // END ERC20 //\n\n        // Mint 1 pool token to the short-term pool owner.\n    }\n\n    /** @notice  Returns the current cross-chain unit capacity. */\n    function getUnitCapacity() external view returns (uint256) {\n        uint256 MUF = _max_unit_inflow;\n        // If the current time is more than DECAYRATE since the last update\n        // then the maximum unit inflow applies\n        if (block.timestamp > DECAYRATE + _last_change) return MUF;\n\n        // The delta unit limit is: timePassed \u00b7 slope = timePassed \u00b7 Max/decayrate\n        uint256 delta_flow = (MUF * (block.timestamp - _last_change)) /\n            DECAYRATE;\n\n        if (_unit_flow <= delta_flow) return MUF;\n\n        // No underflow since _unit_flow > delta_flow\n        return MUF - (_unit_flow - delta_flow);\n    }\n\n    /**\n     * @notice Returns the current cross-chain liquidity unit capacity in\n     * terms of the totalSupply. These are not true units but rather\n     * the conversion of units to pool tokens.\n     */\n    function getLiquidityUnitCapacity() external view returns (uint256) {\n        // A maximum liquidity unit inflow of half the totalSupply means\n        // someone could drain, currentSupply=1\n        // currentSupply/2 => currentSupply_2 = 1 + 1/2 => 1/2/(1+1/2) = 1/3 of the pool.\n        // through liquidity swaps.\n        uint256 MUF = totalSupply() / 2;\n\n        if (block.timestamp > DECAYRATE + _last_liquidity_change) return MUF;\n\n        uint256 delta_flow = (MUF *\n            (block.timestamp - _last_liquidity_change)) / DECAYRATE;\n\n        if (_liquidity_flow <= delta_flow) return MUF;\n\n        return MUF - (_liquidity_flow - delta_flow);\n    }\n\n    /**\n     * @notice\n     *     Checks if the pool supports an inflow of units and decreases\n     *     unit capacity by units.\n     * @param units The number of units to check and set.\n     */\n    function checkAndSetUnitCapacity(uint256 units) internal {\n        uint256 MUF = _max_unit_inflow;\n        if (block.timestamp > DECAYRATE + _last_change) {\n            require(units < MUF, EXCEEDS_SECURITY_LIMIT);\n            // After correcting self._unit_flow it would be 0.\n            // Thus the new _unit_flow is units.\n            _unit_flow = units;\n            _last_change = block.timestamp;\n            return;\n        }\n\n        uint256 delta_flow = (MUF * (block.timestamp - _last_change)) /\n            DECAYRATE;\n        _last_change = block.timestamp; // Here purely because of optimizations.\n        // Otherwise it would have to be repeated twice. (small deployment savings)\n        uint256 UF = _unit_flow; // Used twice, in memory (potentially) saves 100 gas.\n        if (UF <= delta_flow) {\n            require(units < MUF, EXCEEDS_SECURITY_LIMIT);\n            // After correcting self._unit_flow it would be 0.\n            // Thus the new _unit_flow is units.;\n            _unit_flow = units;\n            return;\n        }\n\n        uint256 newUnitFlow = (UF + units) - delta_flow;\n        require(newUnitFlow < MUF, EXCEEDS_SECURITY_LIMIT);\n        _unit_flow = newUnitFlow;\n    }\n\n    /**\n     * @notice\n     *     Checks if the pool supports an inflow of value_ pool token\n     *     and decreases unit capacity by value_ pool tokens..\n     * @param value_ The number of pool tokens to check and set.\n     */\n    function checkAndSetLiquidityCapacity(uint256 value_) internal {\n        // Allows 1/3 of the pool to be drained through liquidity swaps\n        uint256 MUF = totalSupply() / 2;\n        if (block.timestamp > DECAYRATE + _last_liquidity_change) {\n            require(value_ < MUF, EXCEEDS_SECURITY_LIMIT);\n            // # After correction would be 0, set to value_.\n            _liquidity_flow = value_;\n            _last_liquidity_change = block.timestamp;\n            return;\n        }\n\n        uint256 delta_flow = (MUF *\n            (block.timestamp - _last_liquidity_change)) / DECAYRATE;\n        _last_liquidity_change = block.timestamp; // Optimizations\n        uint256 UF = _liquidity_flow;\n        if (UF < delta_flow) {\n            require(value_ < MUF, EXCEEDS_SECURITY_LIMIT);\n            // After correction would be 0, set to value_.\n            _liquidity_flow = value_;\n            return;\n        }\n\n        uint256 newUnitFlow = (UF + value_) - delta_flow;\n        require(newUnitFlow < MUF, EXCEEDS_SECURITY_LIMIT);\n        _liquidity_flow = newUnitFlow;\n    }\n\n    /**\n     * @notice Creates a connection to the pool _poolReceiving on the channel _channelId.\n     * @dev if _poolReceiving is an EVM pool, it can be computes as:\n     *     Vyper: convert(_poolAddress, bytes32)\n     *     Solidity: abi.encode(_poolAddress)\n     *     Brownie: brownie.convert.to_bytes(_poolAddress, type_str=\"bytes32\")\n     * ! Notice, using tx.origin is not secure.\n     * However, it makes it easy to bundle call from an external contract\n     * and no assets are at risk because the pool should not be used without\n     * setupMaster == ZERO_ADDRESS\n     * @param channelId The _channelId of the target pool.\n     * @param poolReceiving The bytes32 representation of the target pool\n     * @param state  # todo: Should we also set this to True? Aka: should we disable disabling a connection?\n     */\n    function createConnection(\n        bytes32 channelId,\n        bytes32 poolReceiving,\n        bool state\n    ) external {\n        // ! tx.origin ! Read @dev.\n        require((tx.origin == _setupMaster) || (msg.sender == _setupMaster)); // dev: No auth\n        _onlyLocal = false;\n\n        CatalystIBCInterface(_chaininterface).CreateConnection(\n            channelId,\n            poolReceiving,\n            state\n        );\n    }\n\n    /**\n     * @notice Creates a connection to the pool _poolReceiving using the lookup table of the interface.\n     * @dev if _poolReceiving is an EVM pool, it can be computes as:\n     *     Vyper: convert(_poolAddress, bytes32)\n     *     Solidity: abi.encode(_poolAddress)\n     *     Brownie: brownie.convert.to_bytes(_poolAddress, type_str=\"bytes32\")\n     * ! Using tx.origin is not secure.\n     * However, it makes it easy to bundle call from an external contract\n     * and no assets are at risk because the pool should not be used without\n     * setupMaster == ZERO_ADDRESS\n     * @param chainId _chainId of the target pool. The interface will convert the chainId to the correct channelId.\n     * @param poolReceiving The bytes32 representation of the target pool\n     * @param state  # todo: Should we also set this to True? Aka: should we disable disabling a connection?\n     */\n    function createConnectionWithChain(\n        uint256 chainId,\n        bytes32 poolReceiving,\n        bool state\n    ) external {\n        // ! tx.origin ! Read @dev.\n        require((tx.origin == _setupMaster) || (msg.sender == _setupMaster)); // dev: No auth\n        _onlyLocal = false;\n\n        CatalystIBCInterface(_chaininterface).CreateConnectionWithChain(\n            chainId,\n            poolReceiving,\n            state\n        );\n    }\n\n    /**\n     * @notice Gives up short term ownership of the pool. This makes the pool unstoppable.\n     * @dev ! Using tx.origin is not secure.\n     * However, it makes it easy to bundle call from an external contract\n     * and no assets are at risk because the pool should not be used without\n     * setupMaster == ZERO_ADDRESS\n     */\n    function finishSetup() external {\n        // ! tx.origin ! Read @dev.\n        require((tx.origin == _setupMaster) || (msg.sender == _setupMaster)); // dev: No auth\n\n        // Disable cross-chain interactions if the pool has no connections.\n        if (_onlyLocal) _chaininterface = address(0);\n\n        _setupMaster = address(0);\n    }\n\n    /**\n     * @notice\n     *     External view function purely used to signal if a pool is safe to use.\n     * @dev\n     *     Just checks if the setup master has been set to ZERO_ADDRESS.\n     *     In other words, has finishSetup been called?\n     */\n    function ready() external view returns (bool) {\n        return _setupMaster == address(0);\n    }\n\n    //-- Escrow Functions --//\n\n    /** @notice Release the escrowed tokens into the pool.  */\n    function releaseEscrowACK(uint256 sourceSwapId) external {\n        require(msg.sender == _chaininterface);\n        TokenEscrow memory escrowInformation = _escrowedFor[sourceSwapId];\n        _escrowedTokens[escrowInformation.token] -= escrowInformation.amount;\n\n        emit EscrowAck(sourceSwapId);\n        delete _escrowedFor[sourceSwapId];\n    }\n\n    /** @notice Returned the escrowed tokens to the user */\n    function releaseEscrowTIMEOUT(uint256 sourceSwapId) external {\n        require(msg.sender == _chaininterface);\n        TokenEscrow memory escrowInformation = _escrowedFor[sourceSwapId];\n        _escrowedTokens[escrowInformation.token] -= escrowInformation.amount;\n\n        IERC20(escrowInformation.token).safeTransfer(\n            escrowInformation.user,\n            escrowInformation.amount\n        );\n\n        emit EscrowTimeout(sourceSwapId);\n        delete _escrowedFor[sourceSwapId];\n    }\n}\n",
  "sourceMap": "368:16560:22:-:0;;;4857:29;;;-1:-1:-1;;;;4857:29:22;-1:-1:-1;;;4857:29:22;;;6762:58;;;;;;;;;-1:-1:-1;1978:113:3;;;;;;;;;-1:-1:-1;1978:113:3;;;;;;;;;;;;;;;2044:5;:13;1978:113;2044:5;:13;:::i;:::-;-1:-1:-1;2067:7:3;:17;2077:7;2067;:17;:::i;:::-;-1:-1:-1;;6800:6:22::1;:13:::0;;-1:-1:-1;;6800:13:22::1;6809:4;6800:13;::::0;;-1:-1:-1;368:16560:22;;14:127:34;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:34;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:34;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:34;;;2580:26;2531:89;-1:-1:-1;;1335:1:34;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:34;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:34;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:34;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:34:o;:::-;368:16560:22;;;;;;",
  "sourcePath": "contracts/SwapPoolCore.sol",
  "type": "contract"
}